

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jul 23 16:20:35 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 09/02/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F4620 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataCOMRAM
   120   002DFE                     __pidataCOMRAM:
   121                           	callstack 0
   122                           
   123                           ;initializer for _RB7_Flag
   124   002DFE  01                 	db	1
   125                           
   126                           ;initializer for _RB6_Flag
   127   002DFF  01                 	db	1
   128                           
   129                           ;initializer for _RB5_Flag
   130   002E00  01                 	db	1
   131                           
   132                           ;initializer for _RB4_Flag
   133   002E01  01                 	db	1
   134                           
   135                           	psect	idataBANK0
   136   002D02                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for _lat_registers
   140   002D02  89                 	db	137
   141   002D03  0F                 	db	15
   142   002D04  8A                 	db	138
   143   002D05  0F                 	db	15
   144   002D06  8B                 	db	139
   145   002D07  0F                 	db	15
   146   002D08  8C                 	db	140
   147   002D09  0F                 	db	15
   148   002D0A  8D                 	db	141
   149   002D0B  0F                 	db	15
   150                           
   151                           ;initializer for _tris_registers
   152   002D0C  92                 	db	146
   153   002D0D  0F                 	db	15
   154   002D0E  93                 	db	147
   155   002D0F  0F                 	db	15
   156   002D10  94                 	db	148
   157   002D11  0F                 	db	15
   158   002D12  95                 	db	149
   159   002D13  0F                 	db	15
   160   002D14  96                 	db	150
   161   002D15  0F                 	db	15
   162                           
   163                           ;initializer for _adc_1
   164   002D16  1E                 	db	low _ADC_DefaultInterruptHandler
   165   002D17  24                 	db	high _ADC_DefaultInterruptHandler
   166   002D18  00                 	db	0
   167   002D19  05                 	db	5
   168   002D1A  05                 	db	5
   169   002D1B  00                 	db	0
   170   002D1C  02                 	db	2
   171                           
   172                           ;initializer for _lcd_1
   173   002D1D  02                 	db	2
   174   002D1E  0A                 	db	10
   175   002D1F  12                 	db	18
   176   002D20  1A                 	db	26
   177   002D21  22                 	db	34
   178   002D22  2A                 	db	42
   179                           
   180                           	psect	idataBANK1
   181   002DA6                     __pidataBANK1:
   182                           	callstack 0
   183                           
   184                           ;initializer for _port_registers
   185   002DA6  80                 	db	128
   186   002DA7  0F                 	db	15
   187   002DA8  81                 	db	129
   188   002DA9  0F                 	db	15
   189   002DAA  82                 	db	130
   190   002DAB  0F                 	db	15
   191   002DAC  83                 	db	131
   192   002DAD  0F                 	db	15
   193   002DAE  84                 	db	132
   194   002DAF  0F                 	db	15
   195                           
   196                           ;initializer for _lcd_2
   197   002DB0  32                 	db	50
   198   002DB1  3A                 	db	58
   199   002DB2  03                 	db	3
   200   002DB3  0B                 	db	11
   201   002DB4  13                 	db	19
   202   002DB5  1B                 	db	27
   203   002DB6  23                 	db	35
   204   002DB7  2B                 	db	43
   205   002DB8  33                 	db	51
   206   002DB9  3B                 	db	59
   207                           
   208                           	psect	smallconst
   209   001000                     __psmallconst:
   210                           	callstack 0
   211   001000  00                 	db	0
   212   001001                     _btn_values:
   213                           	callstack 0
   214   001001  37                 	db	55
   215   001002  38                 	db	56
   216   001003  39                 	db	57
   217   001004  2F                 	db	47
   218   001005  34                 	db	52
   219   001006  35                 	db	53
   220   001007  36                 	db	54
   221   001008  2A                 	db	42
   222   001009  31                 	db	49
   223   00100A  32                 	db	50
   224   00100B  33                 	db	51
   225   00100C  2D                 	db	45
   226   00100D  23                 	db	35
   227   00100E  30                 	db	48
   228   00100F  3D                 	db	61
   229   001010  2B                 	db	43
   230   001011                     __end_of_btn_values:
   231                           	callstack 0
   232   000000                     _SPBRGH	set	4016
   233   000000                     _SPBRG	set	4015
   234   000000                     _TXREG	set	4013
   235   000000                     _TXSTAbits	set	4012
   236   000000                     _RCREG	set	4014
   237   000000                     _RCSTAbits	set	4011
   238   000000                     _TMR3L	set	4018
   239   000000                     _TMR3H	set	4019
   240   000000                     _TMR1L	set	4046
   241   000000                     _TMR1H	set	4047
   242   000000                     _TMR0L	set	4054
   243   000000                     _TMR0H	set	4055
   244   000000                     _INTCON2bits	set	4081
   245   000000                     _SSPSTATbits	set	4039
   246   000000                     _SSPADD	set	4040
   247   000000                     _SSPCON2bits	set	4037
   248   000000                     _SSPCON1bits	set	4038
   249   000000                     _EECON2	set	4007
   250   000000                     _CCPR2H	set	4028
   251   000000                     _CCPR2L	set	4027
   252   000000                     _CCPR1H	set	4031
   253   000000                     _CCPR1L	set	4030
   254   000000                     _ADCON1bits	set	4033
   255   000000                     _ADRESL	set	4035
   256   000000                     _ADRESH	set	4036
   257   000000                     _INTCONbits	set	4082
   258   000000                     _TRISD	set	3989
   259   000000                     _TRISC	set	3988
   260   000000                     _TRISB	set	3987
   261   000000                     _TRISE	set	3990
   262   000000                     _PORTBbits	set	3969
   263   000000                     _TRISCbits	set	3988
   264   000000                     _PIE1bits	set	3997
   265   000000                     _ADCON2bits	set	4032
   266   000000                     _ADCON0bits	set	4034
   267   000000                     _PORTE	set	3972
   268   000000                     _PORTD	set	3971
   269   000000                     _PORTC	set	3970
   270   000000                     _PORTB	set	3969
   271   000000                     _PORTA	set	3968
   272   000000                     _LATA	set	3977
   273   000000                     _TRISA	set	3986
   274   000000                     _PIE2bits	set	4000
   275   000000                     _CCP2CONbits	set	4026
   276   000000                     _CCP1CONbits	set	4029
   277   000000                     _PIR1bits	set	3998
   278   000000                     _EECON1bits	set	4006
   279   000000                     _EEDATA	set	4008
   280   000000                     _EEADR	set	4009
   281   000000                     _EEADRH	set	4010
   282   000000                     _T3CONbits	set	4017
   283   000000                     _PIR2bits	set	4001
   284   000000                     _LATE	set	3981
   285   000000                     _LATD	set	3980
   286   000000                     _LATC	set	3979
   287   000000                     _LATB	set	3978
   288   000000                     _TMR2	set	4044
   289   000000                     _T2CONbits	set	4042
   290   000000                     _T1CONbits	set	4045
   291   000000                     _T0CONbits	set	4053
   292   000000                     _INTCON3bits	set	4080
   293   000000                     _SSPBUF	set	4041
   294   000000                     _BAUDCONbits	set	4024
   295   001011                     STR_4:
   296   001011  41                 	db	65	;'A'
   297   001012  44                 	db	68	;'D'
   298   001013  43                 	db	67	;'C'
   299   001014  20                 	db	32
   300   001015  54                 	db	84	;'T'
   301   001016  65                 	db	101	;'e'
   302   001017  73                 	db	115	;'s'
   303   001018  74                 	db	116	;'t'
   304   001019  00                 	db	0
   305   00101A                     STR_5:
   306   00101A  50                 	db	80	;'P'
   307   00101B  6F                 	db	111	;'o'
   308   00101C  72                 	db	114	;'r'
   309   00101D  74                 	db	116	;'t'
   310   00101E  30                 	db	48	;'0'
   311   00101F  3A                 	db	58	;':'
   312   001020  20                 	db	32
   313   001021  00                 	db	0
   314   001022                     STR_6:
   315   001022  50                 	db	80	;'P'
   316   001023  6F                 	db	111	;'o'
   317   001024  72                 	db	114	;'r'
   318   001025  74                 	db	116	;'t'
   319   001026  31                 	db	49	;'1'
   320   001027  3A                 	db	58	;':'
   321   001028  20                 	db	32
   322   001029  00                 	db	0
   323   00102A                     STR_7:
   324   00102A  50                 	db	80	;'P'
   325   00102B  6F                 	db	111	;'o'
   326   00102C  72                 	db	114	;'r'
   327   00102D  74                 	db	116	;'t'
   328   00102E  32                 	db	50	;'2'
   329   00102F  3A                 	db	58	;':'
   330   001030  20                 	db	32
   331   001031  00                 	db	0
   332   001032                     STR_8:
   333   001032  50                 	db	80	;'P'
   334   001033  6F                 	db	111	;'o'
   335   001034  72                 	db	114	;'r'
   336   001035  74                 	db	116	;'t'
   337   001036  33                 	db	51	;'3'
   338   001037  3A                 	db	58	;':'
   339   001038  20                 	db	32
   340   001039  00                 	db	0
   341   00103A                     STR_1:
   342   00103A  25                 	db	37
   343   00103B  69                 	db	105	;'i'
   344   00103C  00                 	db	0
   345   00103D  00                 	db	0	; dummy byte at the end
   346   000000                     
   347                           ; #config settings
   348                           
   349                           	psect	cinit
   350   00275C                     __pcinit:
   351                           	callstack 0
   352   00275C                     start_initialization:
   353                           	callstack 0
   354   00275C                     __initialization:
   355                           	callstack 0
   356                           
   357                           ; Initialize objects allocated to BANK1 (20 bytes)
   358                           ; load TBLPTR registers with __pidataBANK1
   359   00275C  0EA6               	movlw	low __pidataBANK1
   360   00275E  6EF6               	movwf	tblptrl,c
   361   002760  0E2D               	movlw	high __pidataBANK1
   362   002762  6EF7               	movwf	tblptrh,c
   363   002764  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   364   002766  6EF8               	movwf	tblptru,c
   365   002768  EE01  F026         	lfsr	0,__pdataBANK1
   366   00276C  EE10 F014          	lfsr	1,20
   367   002770                     copy_data0:
   368   002770  0009               	tblrd		*+
   369   002772  CFF5 FFEE          	movff	tablat,postinc0
   370   002776  50E5               	movf	postdec1,w,c
   371   002778  50E1               	movf	fsr1l,w,c
   372   00277A  E1FA               	bnz	copy_data0
   373                           
   374                           ; Initialize objects allocated to BANK0 (33 bytes)
   375                           ; load TBLPTR registers with __pidataBANK0
   376   00277C  0E02               	movlw	low __pidataBANK0
   377   00277E  6EF6               	movwf	tblptrl,c
   378   002780  0E2D               	movlw	high __pidataBANK0
   379   002782  6EF7               	movwf	tblptrh,c
   380   002784  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   381   002786  6EF8               	movwf	tblptru,c
   382   002788  EE00  F0DE         	lfsr	0,__pdataBANK0
   383   00278C  EE10 F021          	lfsr	1,33
   384   002790                     copy_data1:
   385   002790  0009               	tblrd		*+
   386   002792  CFF5 FFEE          	movff	tablat,postinc0
   387   002796  50E5               	movf	postdec1,w,c
   388   002798  50E1               	movf	fsr1l,w,c
   389   00279A  E1FA               	bnz	copy_data1
   390                           
   391                           ; Initialize objects allocated to COMRAM (4 bytes)
   392                           ; load TBLPTR registers with __pidataCOMRAM
   393   00279C  0EFE               	movlw	low __pidataCOMRAM
   394   00279E  6EF6               	movwf	tblptrl,c
   395   0027A0  0E2D               	movlw	high __pidataCOMRAM
   396   0027A2  6EF7               	movwf	tblptrh,c
   397   0027A4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   398   0027A6  6EF8               	movwf	tblptru,c
   399   0027A8  EE00  F06F         	lfsr	0,__pdataCOMRAM
   400   0027AC  EE10 F004          	lfsr	1,4
   401   0027B0                     copy_data2:
   402   0027B0  0009               	tblrd		*+
   403   0027B2  CFF5 FFEE          	movff	tablat,postinc0
   404   0027B6  50E5               	movf	postdec1,w,c
   405   0027B8  50E1               	movf	fsr1l,w,c
   406   0027BA  E1FA               	bnz	copy_data2
   407                           
   408                           ; Clear objects allocated to BANK1 (38 bytes)
   409   0027BC  EE01  F000         	lfsr	0,__pbssBANK1
   410   0027C0  0E26               	movlw	38
   411   0027C2                     clear_0:
   412   0027C2  6AEE               	clrf	postinc0,c
   413   0027C4  06E8               	decf	wreg,f,c
   414   0027C6  E1FD               	bnz	clear_0
   415                           
   416                           ; Clear objects allocated to BANK0 (94 bytes)
   417   0027C8  EE00  F080         	lfsr	0,__pbssBANK0
   418   0027CC  0E5E               	movlw	94
   419   0027CE                     clear_1:
   420   0027CE  6AEE               	clrf	postinc0,c
   421   0027D0  06E8               	decf	wreg,f,c
   422   0027D2  E1FD               	bnz	clear_1
   423                           
   424                           ; Clear objects allocated to COMRAM (10 bytes)
   425   0027D4  EE00  F065         	lfsr	0,__pbssCOMRAM
   426   0027D8  0E0A               	movlw	10
   427   0027DA                     clear_2:
   428   0027DA  6AEE               	clrf	postinc0,c
   429   0027DC  06E8               	decf	wreg,f,c
   430   0027DE  E1FD               	bnz	clear_2
   431   0027E0                     end_of_initialization:
   432                           	callstack 0
   433   0027E0                     __end_of__initialization:
   434                           	callstack 0
   435   0027E0  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   436   0027E2  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   437   0027E4  0100               	movlb	0
   438   0027E6  EF22  F00A         	goto	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMRAM
   441   000065                     __pbssCOMRAM:
   442                           	callstack 0
   443   000065                     _flags:
   444                           	callstack 0
   445   000065                     	ds	1
   446   000066                     _ADC_Req:
   447                           	callstack 0
   448   000066                     	ds	1
   449   000067                     _timer2_preload:
   450                           	callstack 0
   451   000067                     	ds	1
   452   000068                     relay_turn_off@F3052:
   453                           	callstack 0
   454   000068                     	ds	1
   455   000069                     relay_turn_on@F3047:
   456                           	callstack 0
   457   000069                     	ds	1
   458   00006A                     relay_initialize@F3042:
   459                           	callstack 0
   460   00006A                     	ds	1
   461   00006B                     led_turn_toggle@F3063:
   462                           	callstack 0
   463   00006B                     	ds	1
   464   00006C                     led_turn_off@F3058:
   465                           	callstack 0
   466   00006C                     	ds	1
   467   00006D                     led_turn_on@F3053:
   468                           	callstack 0
   469   00006D                     	ds	1
   470   00006E                     led_initialize@F3048:
   471                           	callstack 0
   472   00006E                     	ds	1
   473                           
   474                           	psect	dataCOMRAM
   475   00006F                     __pdataCOMRAM:
   476                           	callstack 0
   477   00006F                     _RB7_Flag:
   478                           	callstack 0
   479   00006F                     	ds	1
   480   000070                     _RB6_Flag:
   481                           	callstack 0
   482   000070                     	ds	1
   483   000071                     _RB5_Flag:
   484                           	callstack 0
   485   000071                     	ds	1
   486   000072                     _RB4_Flag:
   487                           	callstack 0
   488   000072                     	ds	1
   489                           
   490                           	psect	bssBANK0
   491   000080                     __pbssBANK0:
   492                           	callstack 0
   493   000080                     _width:
   494                           	callstack 0
   495   000080                     	ds	2
   496   000082                     _prec:
   497                           	callstack 0
   498   000082                     	ds	2
   499   000084                     _adc_result_4:
   500                           	callstack 0
   501   000084                     	ds	2
   502   000086                     _adc_result_3:
   503                           	callstack 0
   504   000086                     	ds	2
   505   000088                     _adc_result_2:
   506                           	callstack 0
   507   000088                     	ds	2
   508   00008A                     _adc_result_1:
   509                           	callstack 0
   510   00008A                     	ds	2
   511   00008C                     _USART_OverrunErrorHandler:
   512                           	callstack 0
   513   00008C                     	ds	2
   514   00008E                     _USART_FramingErrorHandler:
   515                           	callstack 0
   516   00008E                     	ds	2
   517   000090                     _USART_RxDefaultInterruptHandler:
   518                           	callstack 0
   519   000090                     	ds	2
   520   000092                     _USART_TxDefaultInterruptHandler:
   521                           	callstack 0
   522   000092                     	ds	2
   523   000094                     _TMR3_InterruptHandler:
   524                           	callstack 0
   525   000094                     	ds	2
   526   000096                     _timer3_preload:
   527                           	callstack 0
   528   000096                     	ds	2
   529   000098                     _TMR2_InterruptHandler:
   530                           	callstack 0
   531   000098                     	ds	2
   532   00009A                     _TMR1_InterruptHandler:
   533                           	callstack 0
   534   00009A                     	ds	2
   535   00009C                     _timer1_preload:
   536                           	callstack 0
   537   00009C                     	ds	2
   538   00009E                     _TMR0_InterruptHandler:
   539                           	callstack 0
   540   00009E                     	ds	2
   541   0000A0                     _timer0_preload:
   542                           	callstack 0
   543   0000A0                     	ds	2
   544   0000A2                     _RB7_InterruptHandler_LOW:
   545                           	callstack 0
   546   0000A2                     	ds	2
   547   0000A4                     _RB7_InterruptHandler_HIGH:
   548                           	callstack 0
   549   0000A4                     	ds	2
   550   0000A6                     _RB6_InterruptHandler_LOW:
   551                           	callstack 0
   552   0000A6                     	ds	2
   553   0000A8                     _RB6_InterruptHandler_HIGH:
   554                           	callstack 0
   555   0000A8                     	ds	2
   556   0000AA                     _RB5_InterruptHandler_LOW:
   557                           	callstack 0
   558   0000AA                     	ds	2
   559   0000AC                     _RB5_InterruptHandler_HIGH:
   560                           	callstack 0
   561   0000AC                     	ds	2
   562   0000AE                     _RB4_InterruptHandler_LOW:
   563                           	callstack 0
   564   0000AE                     	ds	2
   565   0000B0                     _RB4_InterruptHandler_HIGH:
   566                           	callstack 0
   567   0000B0                     	ds	2
   568   0000B2                     _INT2_InterruptHandler:
   569                           	callstack 0
   570   0000B2                     	ds	2
   571   0000B4                     _INT1_InterruptHandler:
   572                           	callstack 0
   573   0000B4                     	ds	2
   574   0000B6                     _INT0_InterruptHandler:
   575                           	callstack 0
   576   0000B6                     	ds	2
   577   0000B8                     _MSSP_I2C_Report_Receive_Overflow_InterruptHandler:
   578                           	callstack 0
   579   0000B8                     	ds	2
   580   0000BA                     _MSSP_I2C_Report_Write_Collision_InterruptHandler:
   581                           	callstack 0
   582   0000BA                     	ds	2
   583   0000BC                     _MSSP_I2C_DefaultInterruptHandler:
   584                           	callstack 0
   585   0000BC                     	ds	2
   586   0000BE                     CCP_Set_Compare_Mode_Value@F3106:
   587                           	callstack 0
   588   0000BE                     	ds	2
   589   0000C0                     _CCP2_InterruptHandler:
   590                           	callstack 0
   591   0000C0                     	ds	2
   592   0000C2                     _CCP1_InterruptHandler:
   593                           	callstack 0
   594   0000C2                     	ds	2
   595   0000C4                     _ADC_InterruptHandler:
   596                           	callstack 0
   597   0000C4                     	ds	2
   598   0000C6                     _adc_result_4_txt:
   599                           	callstack 0
   600   0000C6                     	ds	6
   601   0000CC                     _adc_result_3_txt:
   602                           	callstack 0
   603   0000CC                     	ds	6
   604   0000D2                     _adc_result_2_txt:
   605                           	callstack 0
   606   0000D2                     	ds	6
   607   0000D8                     _adc_result_1_txt:
   608                           	callstack 0
   609   0000D8                     	ds	6
   610                           
   611                           	psect	dataBANK0
   612   0000DE                     __pdataBANK0:
   613                           	callstack 0
   614   0000DE                     _lat_registers:
   615                           	callstack 0
   616   0000DE                     	ds	10
   617   0000E8                     _tris_registers:
   618                           	callstack 0
   619   0000E8                     	ds	10
   620   0000F2                     _adc_1:
   621                           	callstack 0
   622   0000F2                     	ds	7
   623   0000F9                     _lcd_1:
   624                           	callstack 0
   625   0000F9                     	ds	6
   626                           
   627                           	psect	bssBANK1
   628   000100                     __pbssBANK1:
   629                           	callstack 0
   630   000100                     	ds	6
   631   000106                     _dbuf:
   632                           	callstack 0
   633   000106                     	ds	32
   634                           
   635                           	psect	dataBANK1
   636   000126                     __pdataBANK1:
   637                           	callstack 0
   638   000126                     _port_registers:
   639                           	callstack 0
   640   000126                     	ds	10
   641   000130                     _lcd_2:
   642                           	callstack 0
   643   000130                     	ds	10
   644                           
   645                           	psect	cstackBANK1
   646   00013A                     __pcstackBANK1:
   647                           	callstack 0
   648   00013A                     convert_uint16_to_string@Temp_String:
   649                           	callstack 0
   650                           
   651                           ; 6 bytes @ 0x0
   652   00013A                     	ds	6
   653   000140                     convert_uint16_to_string@ret:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x6
   657   000140                     	ds	1
   658   000141                     convert_uint16_to_string@DataCounter:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x7
   662   000141                     	ds	1
   663   000142                     ??_main:
   664                           
   665                           ; 1 bytes @ 0x8
   666   000142                     	ds	2
   667                           
   668                           	psect	cstackBANK0
   669   0000FF                     __pcstackBANK0:
   670                           	callstack 0
   671   0000FF                     main@ret:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x0
   675   0000FF                     	ds	1
   676                           
   677                           	psect	cstackCOMRAM
   678   000001                     __pcstackCOMRAM:
   679                           	callstack 0
   680   000001                     RB4_ISR@RB4_Source:
   681                           	callstack 0
   682   000001                     RB5_ISR@RB5_Source:
   683                           	callstack 0
   684   000001                     RB6_ISR@RB6_Source:
   685                           	callstack 0
   686   000001                     RB7_ISR@RB7_Source:
   687                           	callstack 0
   688   000001                     ADC_GetConversionResult@_adc:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x0
   692   000001                     	ds	2
   693   000003                     ADC_GetConversionResult@conversion_result:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x2
   697   000003                     	ds	2
   698   000005                     ??_ADC_GetConversionResult:
   699                           
   700                           ; 1 bytes @ 0x4
   701   000005                     	ds	3
   702   000008                     ADC_GetConversionResult@ret:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x7
   706   000008                     	ds	1
   707   000009                     ??_InterruptManager:
   708                           
   709                           ; 1 bytes @ 0x8
   710   000009                     	ds	4
   711   00000D                     ??_adc_input_channel_port_config:
   712   00000D                     ?___awdiv:
   713                           	callstack 0
   714   00000D                     ?___awmod:
   715                           	callstack 0
   716   00000D                     ADC_StartConversion@_adc:
   717                           	callstack 0
   718   00000D                     select_result_format@_adc:
   719                           	callstack 0
   720   00000D                     configure_voltage_reference@_adc:
   721                           	callstack 0
   722   00000D                     gpio_pin_direction_intialize@_pin_config:
   723                           	callstack 0
   724   00000D                     gpio_pin_write_logic@_pin_config:
   725                           	callstack 0
   726   00000D                     ___awdiv@dividend:
   727                           	callstack 0
   728   00000D                     ___awmod@dividend:
   729                           	callstack 0
   730   00000D                     memset@dest:
   731                           	callstack 0
   732   00000D                     fputc@c:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0xC
   736   00000D                     	ds	2
   737   00000F                     ??_gpio_pin_direction_intialize:
   738   00000F                     ADC_StartConversion@ret:
   739                           	callstack 0
   740   00000F                     adc_input_channel_port_config@channel:
   741                           	callstack 0
   742   00000F                     gpio_pin_write_logic@logic:
   743                           	callstack 0
   744   00000F                     ___awdiv@divisor:
   745                           	callstack 0
   746   00000F                     ___awmod@divisor:
   747                           	callstack 0
   748   00000F                     memset@c:
   749                           	callstack 0
   750   00000F                     fputc@fp:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0xE
   754   00000F                     	ds	1
   755   000010                     ??_gpio_pin_write_logic:
   756   000010                     ADC_Init@_adc:
   757                           	callstack 0
   758   000010                     ADC_SelectChannel@_adc:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0xF
   762   000010                     	ds	1
   763   000011                     ??_fputc:
   764   000011                     ___awdiv@counter:
   765                           	callstack 0
   766   000011                     ___awmod@counter:
   767                           	callstack 0
   768   000011                     memset@n:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x10
   772   000011                     	ds	1
   773   000012                     ??_ADC_Init:
   774   000012                     ADC_SelectChannel@channel:
   775                           	callstack 0
   776   000012                     ___awdiv@sign:
   777                           	callstack 0
   778   000012                     ___awmod@sign:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x11
   782   000012                     	ds	1
   783   000013                     ??_memset:
   784   000013                     ??_ADC_SelectChannel:
   785   000013                     ?_abs:
   786                           	callstack 0
   787   000013                     ADC_Init@ret:
   788                           	callstack 0
   789   000013                     ___awdiv@quotient:
   790                           	callstack 0
   791   000013                     abs@a:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x12
   795   000013                     	ds	1
   796   000014                     ADC_SelectChannel@ret:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x13
   800   000014                     	ds	1
   801   000015                     ??_abs:
   802   000015                     gpio_pin_direction_intialize@ret:
   803                           	callstack 0
   804   000015                     ADC_StartConversion_Interrupt@_adc:
   805                           	callstack 0
   806   000015                     memset@k:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x14
   810   000015                     	ds	1
   811   000016                     gpio_pin_write_logic@ret:
   812                           	callstack 0
   813   000016                     fputs@s:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x15
   817   000016                     	ds	1
   818   000017                     ADC_StartConversion_Interrupt@channel:
   819                           	callstack 0
   820   000017                     lcd_send_4bits@lcd:
   821                           	callstack 0
   822   000017                     lcd_4bit_send_enable_signal@lcd:
   823                           	callstack 0
   824   000017                     lcd_8bit_send_enable_signal@lcd:
   825                           	callstack 0
   826   000017                     gpio_pin_intialize@_pin_config:
   827                           	callstack 0
   828   000017                     memset@s:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x16
   832   000017                     	ds	1
   833   000018                     ADC_StartConversion_Interrupt@ret:
   834                           	callstack 0
   835   000018                     fputs@fp:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x17
   839   000018                     	ds	1
   840   000019                     ??_gpio_pin_intialize:
   841   000019                     lcd_send_4bits@_data_command:
   842                           	callstack 0
   843   000019                     lcd_4bit_send_enable_signal@ret:
   844                           	callstack 0
   845   000019                     lcd_8bit_send_enable_signal@ret:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x18
   849   000019                     	ds	1
   850   00001A                     lcd_send_4bits@ret:
   851                           	callstack 0
   852   00001A                     gpio_pin_intialize@ret:
   853                           	callstack 0
   854   00001A                     fputs@c:
   855                           	callstack 0
   856   00001A                     lcd_8bit_send_command@lcd:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x19
   860   00001A                     	ds	1
   861   00001B                     lcd_4bit_send_command@lcd:
   862                           	callstack 0
   863   00001B                     lcd_4bit_send_char_data@lcd:
   864                           	callstack 0
   865   00001B                     fputs@i:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x1A
   869   00001B                     	ds	1
   870   00001C                     lcd_8bit_send_command@command:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x1B
   874   00001C                     	ds	1
   875   00001D                     ??_lcd_8bit_send_command:
   876   00001D                     lcd_4bit_send_command@command:
   877                           	callstack 0
   878   00001D                     lcd_4bit_send_char_data@data:
   879                           	callstack 0
   880   00001D                     pad@fp:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x1C
   884   00001D                     	ds	1
   885   00001E                     lcd_4bit_send_command@ret:
   886                           	callstack 0
   887   00001E                     lcd_4bit_send_char_data@ret:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x1D
   891   00001E                     	ds	1
   892   00001F                     lcd_4bit_intialize@lcd:
   893                           	callstack 0
   894   00001F                     lcd_4bit_set_cursor@lcd:
   895                           	callstack 0
   896   00001F                     pad@buf:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x1E
   900   00001F                     	ds	2
   901   000021                     ??_lcd_4bit_intialize:
   902   000021                     lcd_8bit_send_command@ret:
   903                           	callstack 0
   904   000021                     lcd_4bit_set_cursor@row:
   905                           	callstack 0
   906   000021                     pad@p:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x20
   910   000021                     	ds	1
   911   000022                     lcd_8bit_send_command@l_pin_counter:
   912                           	callstack 0
   913   000022                     lcd_4bit_set_cursor@coulmn:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x21
   917   000022                     	ds	1
   918   000023                     ??_lcd_4bit_set_cursor:
   919   000023                     ??_pad:
   920   000023                     lcd_4bit_intialize@l_data_pins_counter:
   921                           	callstack 0
   922   000023                     lcd_8bit_intialize@lcd:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x22
   926   000023                     	ds	1
   927   000024                     lcd_4bit_intialize@ret:
   928                           	callstack 0
   929   000024                     pad@i:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x23
   933   000024                     	ds	1
   934   000025                     ??_lcd_8bit_intialize:
   935   000025                     lcd_4bit_set_cursor@ret:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x24
   939   000025                     	ds	1
   940   000026                     lcd_4bit_send_string_pos@lcd:
   941                           	callstack 0
   942   000026                     pad@w:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x25
   946   000026                     	ds	1
   947   000027                     lcd_8bit_intialize@l_data_pins_counter:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0x26
   951   000027                     	ds	1
   952   000028                     lcd_4bit_send_string_pos@row:
   953                           	callstack 0
   954   000028                     lcd_8bit_intialize@ret:
   955                           	callstack 0
   956   000028                     dtoa@fp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x27
   960   000028                     	ds	1
   961   000029                     lcd_4bit_send_string_pos@column:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x28
   965   000029                     	ds	1
   966   00002A                     lcd_4bit_send_string_pos@str:
   967                           	callstack 0
   968   00002A                     dtoa@d:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x29
   972   00002A                     	ds	2
   973   00002C                     lcd_4bit_send_string_pos@ret:
   974                           	callstack 0
   975   00002C                     _dtoa$4672:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x2B
   979   00002C                     	ds	2
   980   00002E                     dtoa@p:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x2D
   984   00002E                     	ds	2
   985   000030                     dtoa@w:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x2F
   989   000030                     	ds	2
   990   000032                     dtoa@s:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x31
   994   000032                     	ds	1
   995   000033                     dtoa@i:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x32
   999   000033                     	ds	2
  1000   000035                     vfpfcnvrt@fp:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x34
  1004   000035                     	ds	2
  1005   000037                     vfpfcnvrt@fmt:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x36
  1009   000037                     	ds	2
  1010   000039                     vfpfcnvrt@ap:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x38
  1014   000039                     	ds	2
  1015   00003B                     ??_vfpfcnvrt:
  1016                           
  1017                           ; 1 bytes @ 0x3A
  1018   00003B                     	ds	2
  1019   00003D                     vfpfcnvrt@convarg:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x3C
  1023   00003D                     	ds	4
  1024   000041                     vfpfcnvrt@cp:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x40
  1028   000041                     	ds	2
  1029   000043                     ?_vfprintf:
  1030                           	callstack 0
  1031   000043                     vfprintf@fp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x42
  1035   000043                     	ds	2
  1036   000045                     vfprintf@fmt:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x44
  1040   000045                     	ds	2
  1041   000047                     vfprintf@ap:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x46
  1045   000047                     	ds	2
  1046   000049                     vfprintf@cfmt:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x48
  1050   000049                     	ds	2
  1051   00004B                     ?_sprintf:
  1052                           	callstack 0
  1053   00004B                     sprintf@s:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x4A
  1057   00004B                     	ds	2
  1058   00004D                     sprintf@fmt:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x4C
  1062   00004D                     	ds	6
  1063   000053                     sprintf@ap:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x52
  1067   000053                     	ds	2
  1068   000055                     sprintf@f:
  1069                           	callstack 0
  1070                           
  1071                           ; 12 bytes @ 0x54
  1072   000055                     	ds	12
  1073   000061                     convert_uint16_to_string@value:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x60
  1077   000061                     	ds	2
  1078   000063                     convert_uint16_to_string@str:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x62
  1082   000063                     	ds	2
  1083   000065                     
  1084                           ; 1 bytes @ 0x64
  1085 ;;
  1086 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1087 ;;
  1088 ;; *************** function _main *****************
  1089 ;; Defined at:
  1090 ;;		line 69 in file "application.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  ret             1    0[BANK0 ] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  2  1601[None  ] int 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;Total ram usage:        3 bytes
  1109 ;; Hardware stack levels required when called: 13
  1110 ;; This function calls:
  1111 ;;		_ADC_Init
  1112 ;;		_ADC_StartConversion_Interrupt
  1113 ;;		_application_intialize
  1114 ;;		_convert_uint16_to_string
  1115 ;;		_lcd_4bit_intialize
  1116 ;;		_lcd_4bit_send_command
  1117 ;;		_lcd_4bit_send_string_pos
  1118 ;; This function is called by:
  1119 ;;		Startup code after reset
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text0
  1124   001444                     __ptext0:
  1125                           	callstack 0
  1126   001444                     _main:
  1127                           	callstack 18
  1128   001444                     
  1129                           ;application.c: 72:     application_intialize();
  1130   001444  ECDD  F016         	call	_application_intialize	;wreg free
  1131   001448  0EF2               	movlw	low _adc_1
  1132   00144A  6E10               	movwf	ADC_Init@_adc^0,c
  1133   00144C  0E00               	movlw	high _adc_1
  1134   00144E  6E11               	movwf	(ADC_Init@_adc+1)^0,c
  1135   001450  EC52  F011         	call	_ADC_Init	;wreg free
  1136   001454  0EF9               	movlw	low _lcd_1
  1137   001456  6E1F               	movwf	lcd_4bit_intialize@lcd^0,c
  1138   001458  0E00               	movlw	high _lcd_1
  1139   00145A  6E20               	movwf	(lcd_4bit_intialize@lcd+1)^0,c
  1140   00145C  EC29  F00F         	call	_lcd_4bit_intialize	;wreg free
  1141   001460  0EF9               	movlw	low _lcd_1
  1142   001462  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1143   001464  0E00               	movlw	high _lcd_1
  1144   001466  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1145   001468  0E01               	movlw	1
  1146   00146A  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1147   00146C  0E07               	movlw	7
  1148   00146E  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1149   001470  0E11               	movlw	low STR_4
  1150   001472  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1151   001474  0E10               	movlw	high STR_4
  1152   001476  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1153   001478  EC16  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1154   00147C                     
  1155                           ;application.c: 78:     _delay((unsigned long)((2000)*(8000000UL/4000.0)));
  1156   00147C  0E15               	movlw	21
  1157   00147E  0101               	movlb	1	; () banked
  1158   001480  6F43               	movwf	(??_main+1)& (0+255),b
  1159   001482  0E4B               	movlw	75
  1160   001484  6F42               	movwf	??_main& (0+255),b
  1161   001486  0EBE               	movlw	190
  1162   001488                     u7737:
  1163   001488  2EE8               	decfsz	wreg,f,c
  1164   00148A  D7FE               	bra	u7737
  1165   00148C  2F42               	decfsz	??_main& (0+255),f,b
  1166   00148E  D7FC               	bra	u7737
  1167   001490  2F43               	decfsz	(??_main+1)& (0+255),f,b
  1168   001492  D7FA               	bra	u7737
  1169   001494  F000               	nop	
  1170   001496  0EF9               	movlw	low _lcd_1
  1171   001498  6E1B               	movwf	lcd_4bit_send_command@lcd^0,c
  1172   00149A  0E00               	movlw	high _lcd_1
  1173   00149C  6E1C               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1174   00149E  0E01               	movlw	1
  1175   0014A0  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1176   0014A2  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  1177   0014A6  0EF9               	movlw	low _lcd_1
  1178   0014A8  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1179   0014AA  0E00               	movlw	high _lcd_1
  1180   0014AC  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1181   0014AE  0E01               	movlw	1
  1182   0014B0  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1183   0014B2  0E01               	movlw	1
  1184   0014B4  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1185   0014B6  0E1A               	movlw	low STR_5
  1186   0014B8  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1187   0014BA  0E10               	movlw	high STR_5
  1188   0014BC  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1189   0014BE  EC16  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1190   0014C2  0EF9               	movlw	low _lcd_1
  1191   0014C4  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1192   0014C6  0E00               	movlw	high _lcd_1
  1193   0014C8  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1194   0014CA  0E02               	movlw	2
  1195   0014CC  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1196   0014CE  0E01               	movlw	1
  1197   0014D0  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1198   0014D2  0E22               	movlw	low STR_6
  1199   0014D4  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1200   0014D6  0E10               	movlw	high STR_6
  1201   0014D8  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1202   0014DA  EC16  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1203   0014DE  0EF9               	movlw	low _lcd_1
  1204   0014E0  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1205   0014E2  0E00               	movlw	high _lcd_1
  1206   0014E4  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1207   0014E6  0E03               	movlw	3
  1208   0014E8  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1209   0014EA  0E01               	movlw	1
  1210   0014EC  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1211   0014EE  0E2A               	movlw	low STR_7
  1212   0014F0  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1213   0014F2  0E10               	movlw	high STR_7
  1214   0014F4  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1215   0014F6  EC16  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1216   0014FA  0EF9               	movlw	low _lcd_1
  1217   0014FC  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1218   0014FE  0E00               	movlw	high _lcd_1
  1219   001500  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1220   001502  0E04               	movlw	4
  1221   001504  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1222   001506  0E01               	movlw	1
  1223   001508  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1224   00150A  0E32               	movlw	low STR_8
  1225   00150C  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1226   00150E  0E10               	movlw	high STR_8
  1227   001510  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1228   001512  EC16  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1229   001516                     l8778:
  1230                           
  1231                           ;application.c: 87:     {;application.c: 88:         if(0 == ADC_Req)
  1232   001516  5066               	movf	_ADC_Req^0,w,c
  1233   001518  A4D8               	btfss	status,2,c
  1234   00151A  EF91  F00A         	goto	u7691
  1235   00151E  EF93  F00A         	goto	u7690
  1236   001522                     u7691:
  1237   001522  EF9D  F00A         	goto	l8782
  1238   001526                     u7690:
  1239   001526  0EF2               	movlw	low _adc_1
  1240   001528  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1241   00152A  0E00               	movlw	high _adc_1
  1242   00152C  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1243   00152E  0E00               	movlw	0
  1244   001530  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1245   001532  ECE5  F015         	call	_ADC_StartConversion_Interrupt	;wreg free
  1246                           
  1247                           ;application.c: 91:         }
  1248   001536  EFD5  F00A         	goto	l8794
  1249   00153A                     l8782:
  1250   00153A  0466               	decf	_ADC_Req^0,w,c
  1251   00153C  A4D8               	btfss	status,2,c
  1252   00153E  EFA3  F00A         	goto	u7701
  1253   001542  EFA5  F00A         	goto	u7700
  1254   001546                     u7701:
  1255   001546  EFAF  F00A         	goto	l8786
  1256   00154A                     u7700:
  1257   00154A  0EF2               	movlw	low _adc_1
  1258   00154C  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1259   00154E  0E00               	movlw	high _adc_1
  1260   001550  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1261   001552  0E01               	movlw	1
  1262   001554  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1263   001556  ECE5  F015         	call	_ADC_StartConversion_Interrupt	;wreg free
  1264                           
  1265                           ;application.c: 95:         }
  1266   00155A  EFD5  F00A         	goto	l8794
  1267   00155E                     l8786:
  1268   00155E  0E02               	movlw	2
  1269   001560  1866               	xorwf	_ADC_Req^0,w,c
  1270   001562  A4D8               	btfss	status,2,c
  1271   001564  EFB6  F00A         	goto	u7711
  1272   001568  EFB8  F00A         	goto	u7710
  1273   00156C                     u7711:
  1274   00156C  EFC2  F00A         	goto	l8790
  1275   001570                     u7710:
  1276   001570  0EF2               	movlw	low _adc_1
  1277   001572  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1278   001574  0E00               	movlw	high _adc_1
  1279   001576  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1280   001578  0E02               	movlw	2
  1281   00157A  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1282   00157C  ECE5  F015         	call	_ADC_StartConversion_Interrupt	;wreg free
  1283                           
  1284                           ;application.c: 99:         }
  1285   001580  EFD5  F00A         	goto	l8794
  1286   001584                     l8790:
  1287   001584  0E03               	movlw	3
  1288   001586  1866               	xorwf	_ADC_Req^0,w,c
  1289   001588  A4D8               	btfss	status,2,c
  1290   00158A  EFC9  F00A         	goto	u7721
  1291   00158E  EFCB  F00A         	goto	u7720
  1292   001592                     u7721:
  1293   001592  EFD5  F00A         	goto	l1606
  1294   001596                     u7720:
  1295   001596  0EF2               	movlw	low _adc_1
  1296   001598  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1297   00159A  0E00               	movlw	high _adc_1
  1298   00159C  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1299   00159E  0E03               	movlw	3
  1300   0015A0  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1301   0015A2  ECE5  F015         	call	_ADC_StartConversion_Interrupt	;wreg free
  1302                           
  1303                           ;application.c: 103:         }
  1304   0015A6  EFD5  F00A         	goto	l8794
  1305   0015AA                     l1606:
  1306   0015AA                     l8794:
  1307                           
  1308                           ;application.c: 106:         ret = convert_uint16_to_string(adc_result_1, adc_result_1_t
      +                          xt);
  1309   0015AA  C08A  F061         	movff	_adc_result_1,convert_uint16_to_string@value
  1310   0015AE  C08B  F062         	movff	_adc_result_1+1,convert_uint16_to_string@value+1
  1311   0015B2  0ED8               	movlw	low _adc_result_1_txt
  1312   0015B4  6E63               	movwf	convert_uint16_to_string@str^0,c
  1313   0015B6  0E00               	movlw	high _adc_result_1_txt
  1314   0015B8  6E64               	movwf	(convert_uint16_to_string@str+1)^0,c
  1315   0015BA  ECB2  F011         	call	_convert_uint16_to_string	;wreg free
  1316   0015BE  0100               	movlb	0	; () banked
  1317   0015C0  6FFF               	movwf	main@ret& (0+255),b
  1318                           
  1319                           ;application.c: 107:         ret = convert_uint16_to_string(adc_result_2, adc_result_2_t
      +                          xt);
  1320   0015C2  C088  F061         	movff	_adc_result_2,convert_uint16_to_string@value
  1321   0015C6  C089  F062         	movff	_adc_result_2+1,convert_uint16_to_string@value+1
  1322   0015CA  0ED2               	movlw	low _adc_result_2_txt
  1323   0015CC  6E63               	movwf	convert_uint16_to_string@str^0,c
  1324   0015CE  0E00               	movlw	high _adc_result_2_txt
  1325   0015D0  6E64               	movwf	(convert_uint16_to_string@str+1)^0,c
  1326   0015D2  ECB2  F011         	call	_convert_uint16_to_string	;wreg free
  1327   0015D6  0100               	movlb	0	; () banked
  1328   0015D8  6FFF               	movwf	main@ret& (0+255),b
  1329                           
  1330                           ;application.c: 108:         ret = convert_uint16_to_string(adc_result_3, adc_result_3_t
      +                          xt);
  1331   0015DA  C086  F061         	movff	_adc_result_3,convert_uint16_to_string@value
  1332   0015DE  C087  F062         	movff	_adc_result_3+1,convert_uint16_to_string@value+1
  1333   0015E2  0ECC               	movlw	low _adc_result_3_txt
  1334   0015E4  6E63               	movwf	convert_uint16_to_string@str^0,c
  1335   0015E6  0E00               	movlw	high _adc_result_3_txt
  1336   0015E8  6E64               	movwf	(convert_uint16_to_string@str+1)^0,c
  1337   0015EA  ECB2  F011         	call	_convert_uint16_to_string	;wreg free
  1338   0015EE  0100               	movlb	0	; () banked
  1339   0015F0  6FFF               	movwf	main@ret& (0+255),b
  1340                           
  1341                           ;application.c: 109:         ret = convert_uint16_to_string(adc_result_4, adc_result_4_t
      +                          xt);
  1342   0015F2  C084  F061         	movff	_adc_result_4,convert_uint16_to_string@value
  1343   0015F6  C085  F062         	movff	_adc_result_4+1,convert_uint16_to_string@value+1
  1344   0015FA  0EC6               	movlw	low _adc_result_4_txt
  1345   0015FC  6E63               	movwf	convert_uint16_to_string@str^0,c
  1346   0015FE  0E00               	movlw	high _adc_result_4_txt
  1347   001600  6E64               	movwf	(convert_uint16_to_string@str+1)^0,c
  1348   001602  ECB2  F011         	call	_convert_uint16_to_string	;wreg free
  1349   001606  0100               	movlb	0	; () banked
  1350   001608  6FFF               	movwf	main@ret& (0+255),b
  1351   00160A                     
  1352                           ; BSR set to: 0
  1353   00160A  0EF9               	movlw	low _lcd_1
  1354   00160C  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1355   00160E  0E00               	movlw	high _lcd_1
  1356   001610  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1357   001612  0E01               	movlw	1
  1358   001614  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1359   001616  0E07               	movlw	7
  1360   001618  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1361   00161A  0ED8               	movlw	low _adc_result_1_txt
  1362   00161C  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1363   00161E  0E00               	movlw	high _adc_result_1_txt
  1364   001620  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1365   001622  EC16  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1366   001626  0EF9               	movlw	low _lcd_1
  1367   001628  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1368   00162A  0E00               	movlw	high _lcd_1
  1369   00162C  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1370   00162E  0E02               	movlw	2
  1371   001630  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1372   001632  0E07               	movlw	7
  1373   001634  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1374   001636  0ED2               	movlw	low _adc_result_2_txt
  1375   001638  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1376   00163A  0E00               	movlw	high _adc_result_2_txt
  1377   00163C  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1378   00163E  EC16  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1379   001642  0EF9               	movlw	low _lcd_1
  1380   001644  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1381   001646  0E00               	movlw	high _lcd_1
  1382   001648  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1383   00164A  0E03               	movlw	3
  1384   00164C  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1385   00164E  0E07               	movlw	7
  1386   001650  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1387   001652  0ECC               	movlw	low _adc_result_3_txt
  1388   001654  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1389   001656  0E00               	movlw	high _adc_result_3_txt
  1390   001658  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1391   00165A  EC16  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1392   00165E  0EF9               	movlw	low _lcd_1
  1393   001660  6E26               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1394   001662  0E00               	movlw	high _lcd_1
  1395   001664  6E27               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1396   001666  0E04               	movlw	4
  1397   001668  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1398   00166A  0E07               	movlw	7
  1399   00166C  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1400   00166E  0EC6               	movlw	low _adc_result_4_txt
  1401   001670  6E2A               	movwf	lcd_4bit_send_string_pos@str^0,c
  1402   001672  0E00               	movlw	high _adc_result_4_txt
  1403   001674  6E2B               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1404   001676  EC16  F013         	call	_lcd_4bit_send_string_pos	;wreg free
  1405   00167A  EF8B  F00A         	goto	l8778
  1406   00167E  EF07  F000         	goto	start
  1407   001682                     __end_of_main:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _lcd_4bit_send_string_pos *****************
  1411 ;; Defined at:
  1412 ;;		line 218 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  lcd             2   37[COMRAM] PTR const struct .
  1415 ;;		 -> lcd_1(6), 
  1416 ;;  row             1   39[COMRAM] unsigned char 
  1417 ;;  column          1   40[COMRAM] unsigned char 
  1418 ;;  str             2   41[COMRAM] PTR unsigned char 
  1419 ;;		 -> adc_result_4_txt(6), adc_result_3_txt(6), adc_result_2_txt(6), adc_result_1_txt(6), 
  1420 ;;		 -> STR_8(8), STR_7(8), STR_6(8), STR_5(8), 
  1421 ;;		 -> STR_4(9), 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  ret             1   43[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      unsigned char 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1433 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;Total ram usage:        7 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 8
  1440 ;; This function calls:
  1441 ;;		_lcd_4bit_send_char_data
  1442 ;;		_lcd_4bit_set_cursor
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text1
  1449   00262C                     __ptext1:
  1450                           	callstack 0
  1451   00262C                     _lcd_4bit_send_string_pos:
  1452                           	callstack 22
  1453   00262C                     
  1454                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 221:     if(((void*)0) == lcd)
  1455   00262C  5026               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1456   00262E  1027               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  1457   002630  A4D8               	btfss	status,2,c
  1458   002632  EF1D  F013         	goto	u7091
  1459   002636  EF1F  F013         	goto	u7090
  1460   00263A                     u7091:
  1461   00263A  EF23  F013         	goto	l8198
  1462   00263E                     u7090:
  1463   00263E                     
  1464                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 222:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 223:      
      +                             ret = (Std_ReturnType)0x00;
  1465   00263E  0E00               	movlw	0
  1466   002640  6E2C               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1467                           
  1468                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 224:     }
  1469   002642  EF64  F013         	goto	l8206
  1470   002646                     l8198:
  1471                           
  1472                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 226:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 227:      
      +                             ret = lcd_4bit_set_cursor(lcd, row, column);
  1473   002646  C026  F01F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1474   00264A  C027  F020         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1475   00264E  C028  F021         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1476   002652  C029  F022         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
  1477   002656  ECC2  F012         	call	_lcd_4bit_set_cursor	;wreg free
  1478   00265A  6E2C               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1479                           
  1480                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 228:         while(*str)
  1481   00265C  EF4B  F013         	goto	l8204
  1482   002660                     l8200:
  1483                           
  1484                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 229:         {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 230:  
      +                                     ret = lcd_4bit_send_char_data(lcd, *str++);
  1485   002660  C026  F01B         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1486   002664  C027  F01C         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1487   002668  C02A  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1488   00266C  C02B  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1489   002670  0E00               	movlw	low (__smallconst shr (0+16))
  1490   002672  6EF8               	movwf	tblptru,c
  1491   002674  0E0F               	movlw	(high __ramtop+-1)
  1492   002676  64F7               	cpfsgt	tblptrh,c
  1493   002678  D003               	bra	u7107
  1494   00267A  0008               	tblrd		*
  1495   00267C  50F5               	movf	tablat,w,c
  1496   00267E  D005               	bra	u7100
  1497   002680                     u7107:
  1498   002680  CFF6 FFE9          	movff	tblptrl,fsr0l
  1499   002684  CFF7 FFEA          	movff	tblptrh,fsr0h
  1500   002688  50EF               	movf	indf0,w,c
  1501   00268A                     u7100:
  1502   00268A  6E1D               	movwf	lcd_4bit_send_char_data@data^0,c
  1503   00268C  EC32  F014         	call	_lcd_4bit_send_char_data	;wreg free
  1504   002690  6E2C               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1505   002692  4A2A               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1506   002694  2A2B               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1507   002696                     l8204:
  1508                           
  1509                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 228:         while(*str)
  1510   002696  C02A  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1511   00269A  C02B  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1512   00269E  0E00               	movlw	low (__smallconst shr (0+16))
  1513   0026A0  6EF8               	movwf	tblptru,c
  1514   0026A2  0E0F               	movlw	(high __ramtop+-1)
  1515   0026A4  64F7               	cpfsgt	tblptrh,c
  1516   0026A6  D003               	bra	u7117
  1517   0026A8  0008               	tblrd		*
  1518   0026AA  50F5               	movf	tablat,w,c
  1519   0026AC  D005               	bra	u7110
  1520   0026AE                     u7117:
  1521   0026AE  CFF6 FFE9          	movff	tblptrl,fsr0l
  1522   0026B2  CFF7 FFEA          	movff	tblptrh,fsr0h
  1523   0026B6  50EF               	movf	indf0,w,c
  1524   0026B8                     u7110:
  1525   0026B8  0900               	iorlw	0
  1526   0026BA  A4D8               	btfss	status,2,c
  1527   0026BC  EF62  F013         	goto	u7121
  1528   0026C0  EF64  F013         	goto	u7120
  1529   0026C4                     u7121:
  1530   0026C4  EF30  F013         	goto	l8200
  1531   0026C8                     u7120:
  1532   0026C8                     l8206:
  1533                           
  1534                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 233:     return ret;
  1535   0026C8  502C               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1536   0026CA  0012               	return		;funcret
  1537   0026CC                     __end_of_lcd_4bit_send_string_pos:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _lcd_4bit_set_cursor *****************
  1541 ;; Defined at:
  1542 ;;		line 636 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  lcd             2   30[COMRAM] PTR const struct .
  1545 ;;		 -> lcd_1(6), 
  1546 ;;  row             1   32[COMRAM] unsigned char 
  1547 ;;  coulmn          1   33[COMRAM] unsigned char 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  ret             1   36[COMRAM] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      unsigned char 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;Total ram usage:        7 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 7
  1566 ;; This function calls:
  1567 ;;		_lcd_4bit_send_command
  1568 ;; This function is called by:
  1569 ;;		_lcd_4bit_send_string_pos
  1570 ;;		_lcd_4bit_send_char_data_pos
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text2
  1575   002584                     __ptext2:
  1576                           	callstack 0
  1577   002584                     _lcd_4bit_set_cursor:
  1578                           	callstack 22
  1579   002584                     
  1580                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 636: static Std_ReturnType lcd_4bit_set_cursor(const c
      +                          hr_4bit_lcd_t *lcd, uint8 row, uint8 coulmn);ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 637: {;ECU
      +                          _Layer/Chr_LCD/ecu_chr_lcd.c: 638:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1581   002584  0E01               	movlw	1
  1582   002586  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  1583   002588                     
  1584                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 639:     coulmn--;
  1585   002588  0622               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  1586                           
  1587                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 640:     switch(row)
  1588   00258A  EFF7  F012         	goto	l8036
  1589   00258E                     l8028:
  1590   00258E  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1591   002592  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1592   002596  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1593   002598  0F80               	addlw	128
  1594   00259A  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1595   00259C  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  1596   0025A0  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  1597   0025A2  EF14  F013         	goto	l8038
  1598   0025A6                     l8030:
  1599   0025A6  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1600   0025AA  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1601   0025AE  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1602   0025B0  0FC0               	addlw	192
  1603   0025B2  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1604   0025B4  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  1605   0025B8  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  1606   0025BA  EF14  F013         	goto	l8038
  1607   0025BE                     l8032:
  1608   0025BE  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1609   0025C2  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1610   0025C6  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1611   0025C8  0F94               	addlw	148
  1612   0025CA  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1613   0025CC  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  1614   0025D0  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  1615   0025D2  EF14  F013         	goto	l8038
  1616   0025D6                     l8034:
  1617   0025D6  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1618   0025DA  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1619   0025DE  5022               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1620   0025E0  0FD4               	addlw	212
  1621   0025E2  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1622   0025E4  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  1623   0025E8  6E25               	movwf	lcd_4bit_set_cursor@ret^0,c
  1624   0025EA  EF14  F013         	goto	l8038
  1625   0025EE                     l8036:
  1626   0025EE  5021               	movf	lcd_4bit_set_cursor@row^0,w,c
  1627   0025F0  6E23               	movwf	??_lcd_4bit_set_cursor^0,c
  1628   0025F2  6A24               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1629                           
  1630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1631                           ; Switch size 1, requested type "simple"
  1632                           ; Number of cases is 1, Range of values is 0 to 0
  1633                           ; switch strategies available:
  1634                           ; Name         Instructions Cycles
  1635                           ; simple_byte            4     3 (average)
  1636                           ;	Chosen strategy is simple_byte
  1637   0025F4  5024               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1638   0025F6  0A00               	xorlw	0	; case 0
  1639   0025F8  B4D8               	btfsc	status,2,c
  1640   0025FA  EF01  F013         	goto	l8884
  1641   0025FE  EF14  F013         	goto	l8038
  1642   002602                     l8884:
  1643                           
  1644                           ; Switch size 1, requested type "simple"
  1645                           ; Number of cases is 4, Range of values is 1 to 4
  1646                           ; switch strategies available:
  1647                           ; Name         Instructions Cycles
  1648                           ; simple_byte           13     7 (average)
  1649                           ;	Chosen strategy is simple_byte
  1650   002602  5023               	movf	??_lcd_4bit_set_cursor^0,w,c
  1651   002604  0A01               	xorlw	1	; case 1
  1652   002606  B4D8               	btfsc	status,2,c
  1653   002608  EFC7  F012         	goto	l8028
  1654   00260C  0A03               	xorlw	3	; case 2
  1655   00260E  B4D8               	btfsc	status,2,c
  1656   002610  EFD3  F012         	goto	l8030
  1657   002614  0A01               	xorlw	1	; case 3
  1658   002616  B4D8               	btfsc	status,2,c
  1659   002618  EFDF  F012         	goto	l8032
  1660   00261C  0A07               	xorlw	7	; case 4
  1661   00261E  B4D8               	btfsc	status,2,c
  1662   002620  EFEB  F012         	goto	l8034
  1663   002624  EF14  F013         	goto	l8038
  1664   002628                     l8038:
  1665                           
  1666                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 652:     return ret;
  1667   002628  5025               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1668   00262A  0012               	return		;funcret
  1669   00262C                     __end_of_lcd_4bit_set_cursor:
  1670                           	callstack 0
  1671                           
  1672 ;; *************** function _lcd_4bit_send_char_data *****************
  1673 ;; Defined at:
  1674 ;;		line 140 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  lcd             2   26[COMRAM] PTR const struct .
  1677 ;;		 -> lcd_1(6), 
  1678 ;;  data            1   28[COMRAM] unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  ret             1   29[COMRAM] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      unsigned char 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:        4 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 6
  1697 ;; This function calls:
  1698 ;;		_gpio_pin_write_logic
  1699 ;;		_lcd_4bit_send_enable_signal
  1700 ;;		_lcd_send_4bits
  1701 ;; This function is called by:
  1702 ;;		_lcd_4bit_send_string_pos
  1703 ;;		_lcd_4bit_send_char_data_pos
  1704 ;;		_lcd_4bit_send_string
  1705 ;;		_lcd_4bit_send_custom_char
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text3
  1710   002864                     __ptext3:
  1711                           	callstack 0
  1712   002864                     _lcd_4bit_send_char_data:
  1713                           	callstack 23
  1714   002864                     
  1715                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 143:     if(((void*)0) == lcd)
  1716   002864  501B               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1717   002866  101C               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1718   002868  A4D8               	btfss	status,2,c
  1719   00286A  EF39  F014         	goto	u6961
  1720   00286E  EF3B  F014         	goto	u6960
  1721   002872                     u6961:
  1722   002872  EF3F  F014         	goto	l8018
  1723   002876                     u6960:
  1724   002876                     
  1725                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 144:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 145:      
      +                             ret = (Std_ReturnType)0x00;
  1726   002876  0E00               	movlw	0
  1727   002878  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1728                           
  1729                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 146:     }
  1730   00287A  EF69  F014         	goto	l8020
  1731   00287E                     l8018:
  1732                           
  1733                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 148:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 149:      
      +                             ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_HIGH);
  1734   00287E  C01B  F00D         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1735   002882  C01C  F00E         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  1736   002886  0E01               	movlw	1
  1737   002888  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1738   00288A  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  1739   00288E  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1740                           
  1741                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 150:         ret = lcd_send_4bits(lcd, data >> 4);
  1742   002890  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1743   002894  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1744   002898  381D               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1745   00289A  0B0F               	andlw	15
  1746   00289C  6E19               	movwf	lcd_send_4bits@_data_command^0,c
  1747   00289E  ECDA  F014         	call	_lcd_send_4bits	;wreg free
  1748   0028A2  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1749                           
  1750                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 151:         ret = lcd_4bit_send_enable_signal(lcd);
  1751   0028A4  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1752   0028A8  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1753   0028AC  EC3C  F016         	call	_lcd_4bit_send_enable_signal	;wreg free
  1754   0028B0  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1755                           
  1756                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 152:         ret = lcd_send_4bits(lcd, data);
  1757   0028B2  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1758   0028B6  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1759   0028BA  C01D  F019         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1760   0028BE  ECDA  F014         	call	_lcd_send_4bits	;wreg free
  1761   0028C2  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1762                           
  1763                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 153:         ret = lcd_4bit_send_enable_signal(lcd);
  1764   0028C4  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1765   0028C8  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1766   0028CC  EC3C  F016         	call	_lcd_4bit_send_enable_signal	;wreg free
  1767   0028D0  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1768   0028D2                     l8020:
  1769                           
  1770                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 155:     return ret;
  1771   0028D2  501E               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1772   0028D4  0012               	return		;funcret
  1773   0028D6                     __end_of_lcd_4bit_send_char_data:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _convert_uint16_to_string *****************
  1777 ;; Defined at:
  1778 ;;		line 503 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  value           2   96[COMRAM] unsigned short 
  1781 ;;  str             2   98[COMRAM] PTR unsigned char 
  1782 ;;		 -> adc_result_4_txt(6), adc_result_3_txt(6), adc_result_2_txt(6), adc_result_1_txt(6), 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  Temp_String     6    0[BANK1 ] unsigned char [6]
  1785 ;;  DataCounter     1    7[BANK1 ] unsigned char 
  1786 ;;  ret             1    6[BANK1 ] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      unsigned char 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Totals:         4       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;Total ram usage:       12 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 12
  1803 ;; This function calls:
  1804 ;;		_memset
  1805 ;;		_sprintf
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text4
  1812   002364                     __ptext4:
  1813                           	callstack 0
  1814   002364                     _convert_uint16_to_string:
  1815                           	callstack 18
  1816   002364                     
  1817                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 503: Std_ReturnType convert_uint16_to_string(uint16 va
      +                          lue, uint8 *str);ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 504: {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c
      +                          : 505:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1818   002364  0E01               	movlw	1
  1819   002366  0101               	movlb	1	; () banked
  1820   002368  6F40               	movwf	convert_uint16_to_string@ret& (0+255),b
  1821   00236A                     
  1822                           ; BSR set to: 1
  1823                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 506:     uint8 Temp_String[6] = {0};
  1824   00236A  EE21  F03A         	lfsr	2,convert_uint16_to_string@Temp_String
  1825   00236E  0E05               	movlw	5
  1826   002370                     u7161:
  1827   002370  6ADE               	clrf	postinc2,c
  1828   002372  06E8               	decf	wreg,f,c
  1829   002374  E2FD               	bc	u7161
  1830   002376                     
  1831                           ; BSR set to: 1
  1832                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 507:     uint8 DataCounter = 0;
  1833   002376  0E00               	movlw	0
  1834   002378  6F41               	movwf	convert_uint16_to_string@DataCounter& (0+255),b
  1835   00237A                     
  1836                           ; BSR set to: 1
  1837                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 508:     if(((void*)0) == str)
  1838   00237A  5063               	movf	convert_uint16_to_string@str^0,w,c
  1839   00237C  1064               	iorwf	(convert_uint16_to_string@str+1)^0,w,c
  1840   00237E  A4D8               	btfss	status,2,c
  1841   002380  EFC4  F011         	goto	u7171
  1842   002384  EFC6  F011         	goto	u7170
  1843   002388                     u7171:
  1844   002388  EFCA  F011         	goto	l8248
  1845   00238C                     u7170:
  1846   00238C                     
  1847                           ; BSR set to: 1
  1848                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 509:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 510:      
      +                             ret = (Std_ReturnType)0x00;
  1849   00238C  0E00               	movlw	0
  1850   00238E  6F40               	movwf	convert_uint16_to_string@ret& (0+255),b
  1851                           
  1852                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 511:     }
  1853   002390  EF0D  F012         	goto	l8260
  1854   002394                     l8248:
  1855                           
  1856                           ; BSR set to: 1
  1857                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 513:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 514:      
      +                             memset(str, ' ', 5);
  1858   002394  C063  F00D         	movff	convert_uint16_to_string@str,memset@dest
  1859   002398  C064  F00E         	movff	convert_uint16_to_string@str+1,memset@dest+1
  1860   00239C  0E00               	movlw	0
  1861   00239E  6E10               	movwf	(memset@c+1)^0,c
  1862   0023A0  0E20               	movlw	32
  1863   0023A2  6E0F               	movwf	memset@c^0,c
  1864   0023A4  0E00               	movlw	0
  1865   0023A6  6E12               	movwf	(memset@n+1)^0,c
  1866   0023A8  0E05               	movlw	5
  1867   0023AA  6E11               	movwf	memset@n^0,c
  1868   0023AC  EC0C  F00C         	call	_memset	;wreg free
  1869   0023B0                     
  1870                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 515:         str[5] = '\0';
  1871   0023B0  EE20 F005          	lfsr	2,5
  1872   0023B4  5063               	movf	convert_uint16_to_string@str^0,w,c
  1873   0023B6  26D9               	addwf	fsr2l,f,c
  1874   0023B8  5064               	movf	(convert_uint16_to_string@str+1)^0,w,c
  1875   0023BA  22DA               	addwfc	fsr2h,f,c
  1876   0023BC  6ADF               	clrf	indf2,c
  1877   0023BE                     
  1878                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 516:         sprintf((char *)Temp_String, "%i", value)
      +                          ;
  1879   0023BE  0E3A               	movlw	low convert_uint16_to_string@Temp_String
  1880   0023C0  6E4B               	movwf	sprintf@s^0,c
  1881   0023C2  0E01               	movlw	high convert_uint16_to_string@Temp_String
  1882   0023C4  6E4C               	movwf	(sprintf@s+1)^0,c
  1883   0023C6  0E3A               	movlw	low STR_1
  1884   0023C8  6E4D               	movwf	sprintf@fmt^0,c
  1885   0023CA  0E10               	movlw	high STR_1
  1886   0023CC  6E4E               	movwf	(sprintf@fmt+1)^0,c
  1887   0023CE  C061  F04F         	movff	convert_uint16_to_string@value,?_sprintf+4
  1888   0023D2  C062  F050         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  1889   0023D6  EC36  F015         	call	_sprintf	;wreg free
  1890                           
  1891                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 517:         while(Temp_String[DataCounter] != '\0')
  1892   0023DA  EFFE  F011         	goto	l8258
  1893   0023DE                     l8254:
  1894                           
  1895                           ; BSR set to: 1
  1896                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 518:         {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 519:  
      +                                     str[DataCounter] = Temp_String[DataCounter];
  1897   0023DE  0E3A               	movlw	low convert_uint16_to_string@Temp_String
  1898   0023E0  2541               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  1899   0023E2  6ED9               	movwf	fsr2l,c
  1900   0023E4  6ADA               	clrf	fsr2h,c
  1901   0023E6  0E01               	movlw	high convert_uint16_to_string@Temp_String
  1902   0023E8  22DA               	addwfc	fsr2h,f,c
  1903   0023EA  5141               	movf	convert_uint16_to_string@DataCounter& (0+255),w,b
  1904   0023EC  2463               	addwf	convert_uint16_to_string@str^0,w,c
  1905   0023EE  6EE1               	movwf	fsr1l,c
  1906   0023F0  0E00               	movlw	0
  1907   0023F2  2064               	addwfc	(convert_uint16_to_string@str+1)^0,w,c
  1908   0023F4  6EE2               	movwf	fsr1h,c
  1909   0023F6  CFDF FFE7          	movff	indf2,indf1
  1910   0023FA                     
  1911                           ; BSR set to: 1
  1912                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 520:             DataCounter++;
  1913   0023FA  2B41               	incf	convert_uint16_to_string@DataCounter& (0+255),f,b
  1914   0023FC                     l8258:
  1915                           
  1916                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 517:         while(Temp_String[DataCounter] != '\0')
  1917   0023FC  0E3A               	movlw	low convert_uint16_to_string@Temp_String
  1918   0023FE  0101               	movlb	1	; () banked
  1919   002400  2541               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  1920   002402  6ED9               	movwf	fsr2l,c
  1921   002404  6ADA               	clrf	fsr2h,c
  1922   002406  0E01               	movlw	high convert_uint16_to_string@Temp_String
  1923   002408  22DA               	addwfc	fsr2h,f,c
  1924   00240A  50DF               	movf	indf2,w,c
  1925   00240C  A4D8               	btfss	status,2,c
  1926   00240E  EF0B  F012         	goto	u7181
  1927   002412  EF0D  F012         	goto	u7180
  1928   002416                     u7181:
  1929   002416  EFEF  F011         	goto	l8254
  1930   00241A                     u7180:
  1931   00241A                     l8260:
  1932                           
  1933                           ; BSR set to: 1
  1934                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 523:     return ret;
  1935   00241A  5140               	movf	convert_uint16_to_string@ret& (0+255),w,b
  1936   00241C                     
  1937                           ; BSR set to: 1
  1938   00241C  0012               	return		;funcret
  1939   00241E                     __end_of_convert_uint16_to_string:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _sprintf *****************
  1943 ;; Defined at:
  1944 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  s               2   74[COMRAM] PTR unsigned char 
  1947 ;;		 -> convert_uint16_to_string@Temp_String(6), 
  1948 ;;  fmt             2   76[COMRAM] PTR const unsigned char 
  1949 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  f              12   84[COMRAM] struct _IO_FILE
  1952 ;;  ap              2   82[COMRAM] PTR void [1]
  1953 ;;		 -> ?_sprintf(2), 
  1954 ;;  ret             2    0        int 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2   74[COMRAM] int 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1964 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;Total ram usage:       22 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 11
  1971 ;; This function calls:
  1972 ;;		_vfprintf
  1973 ;; This function is called by:
  1974 ;;		_convert_uint16_to_string
  1975 ;;		_convert_uint8_to_string
  1976 ;;		_convert_uint32_to_string
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text5
  1981   002A6C                     __ptext5:
  1982                           	callstack 0
  1983   002A6C                     _sprintf:
  1984                           	callstack 18
  1985   002A6C  0E4F               	movlw	low (?_sprintf+4)
  1986   002A6E  6E53               	movwf	sprintf@ap^0,c
  1987   002A70  0E00               	movlw	high (?_sprintf+4)
  1988   002A72  6E54               	movwf	(sprintf@ap+1)^0,c
  1989   002A74  C04B  F055         	movff	sprintf@s,sprintf@f
  1990   002A78  C04C  F056         	movff	sprintf@s+1,sprintf@f+1
  1991   002A7C  0E00               	movlw	0
  1992   002A7E  6E59               	movwf	(sprintf@f+4)^0,c
  1993   002A80  0E00               	movlw	0
  1994   002A82  6E58               	movwf	(sprintf@f+3)^0,c
  1995   002A84  0E00               	movlw	0
  1996   002A86  6E60               	movwf	(sprintf@f+11)^0,c
  1997   002A88  0E00               	movlw	0
  1998   002A8A  6E5F               	movwf	(sprintf@f+10)^0,c
  1999   002A8C  0E55               	movlw	low sprintf@f
  2000   002A8E  6E43               	movwf	vfprintf@fp^0,c
  2001   002A90  0E00               	movlw	high sprintf@f
  2002   002A92  6E44               	movwf	(vfprintf@fp+1)^0,c
  2003   002A94  C04D  F045         	movff	sprintf@fmt,vfprintf@fmt
  2004   002A98  C04E  F046         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2005   002A9C  0E53               	movlw	low sprintf@ap
  2006   002A9E  6E47               	movwf	vfprintf@ap^0,c
  2007   002AA0  0E00               	movlw	high sprintf@ap
  2008   002AA2  6E48               	movwf	(vfprintf@ap+1)^0,c
  2009   002AA4  EC0E  F015         	call	_vfprintf	;wreg free
  2010   002AA8  5058               	movf	(sprintf@f+3)^0,w,c
  2011   002AAA  244B               	addwf	sprintf@s^0,w,c
  2012   002AAC  6ED9               	movwf	fsr2l,c
  2013   002AAE  5059               	movf	(sprintf@f+4)^0,w,c
  2014   002AB0  204C               	addwfc	(sprintf@s+1)^0,w,c
  2015   002AB2  6EDA               	movwf	fsr2h,c
  2016   002AB4  6ADF               	clrf	indf2,c
  2017   002AB6  0012               	return		;funcret
  2018   002AB8                     __end_of_sprintf:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _vfprintf *****************
  2022 ;; Defined at:
  2023 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2026 ;;		 -> sprintf@f(12), 
  2027 ;;  fmt             2   68[COMRAM] PTR const unsigned char 
  2028 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2029 ;;  ap              2   70[COMRAM] PTR PTR void 
  2030 ;;		 -> sprintf@ap(2), 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  cfmt            2   72[COMRAM] PTR unsigned char 
  2033 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2   66[COMRAM] int 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2043 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;Total ram usage:        8 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; Hardware stack levels required when called: 10
  2050 ;; This function calls:
  2051 ;;		_vfpfcnvrt
  2052 ;; This function is called by:
  2053 ;;		_sprintf
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text6
  2058   002A1C                     __ptext6:
  2059                           	callstack 0
  2060   002A1C                     _vfprintf:
  2061                           	callstack 18
  2062   002A1C                     
  2063                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2064   002A1C  C045  F049         	movff	vfprintf@fmt,vfprintf@cfmt
  2065   002A20  C046  F04A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2068   002A24  EF22  F015         	goto	l8006
  2069   002A28                     l8004:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2072   002A28  C043  F035         	movff	vfprintf@fp,vfpfcnvrt@fp
  2073   002A2C  C044  F036         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2074   002A30  0E49               	movlw	low vfprintf@cfmt
  2075   002A32  6E37               	movwf	vfpfcnvrt@fmt^0,c
  2076   002A34  0E00               	movlw	high vfprintf@cfmt
  2077   002A36  6E38               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2078   002A38  C047  F039         	movff	vfprintf@ap,vfpfcnvrt@ap
  2079   002A3C  C048  F03A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2080   002A40  EC69  F00D         	call	_vfpfcnvrt	;wreg free
  2081   002A44                     l8006:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2084   002A44  C049  FFF6         	movff	vfprintf@cfmt,tblptrl
  2085   002A48  C04A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2086   002A4C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2087   002A4C  6AF8               	clrf	tblptru,c
  2088   002A4E                     	endif
  2089   002A4E                     	if	0	;tblptru may be non-zero
  2090   002A4E                     	endif
  2091   002A4E  0008               	tblrd		*
  2092   002A50  50F5               	movf	tablat,w,c
  2093   002A52  0900               	iorlw	0
  2094   002A54  A4D8               	btfss	status,2,c
  2095   002A56  EF2F  F015         	goto	u6951
  2096   002A5A  EF31  F015         	goto	u6950
  2097   002A5E                     u6951:
  2098   002A5E  EF14  F015         	goto	l8004
  2099   002A62                     u6950:
  2100   002A62                     
  2101                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2102   002A62  0E00               	movlw	0
  2103   002A64  6E44               	movwf	(?_vfprintf+1)^0,c
  2104   002A66  0E00               	movlw	0
  2105   002A68  6E43               	movwf	?_vfprintf^0,c
  2106   002A6A  0012               	return		;funcret
  2107   002A6C                     __end_of_vfprintf:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function _vfpfcnvrt *****************
  2111 ;; Defined at:
  2112 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  fp              2   52[COMRAM] PTR struct _IO_FILE
  2115 ;;		 -> sprintf@f(12), 
  2116 ;;  fmt             2   54[COMRAM] PTR PTR unsigned char 
  2117 ;;		 -> vfprintf@cfmt(2), 
  2118 ;;  ap              2   56[COMRAM] PTR PTR void 
  2119 ;;		 -> sprintf@ap(2), 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  convarg         4   60[COMRAM] struct .
  2122 ;;  cp              2   64[COMRAM] PTR unsigned char 
  2123 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2124 ;;  i               2    0        int 
  2125 ;;  done            2    0        int 
  2126 ;;  c               1    0        unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2136 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;Total ram usage:       14 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 9
  2143 ;; This function calls:
  2144 ;;		_dtoa
  2145 ;;		_fputc
  2146 ;; This function is called by:
  2147 ;;		_vfprintf
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text7
  2152   001AD2                     __ptext7:
  2153                           	callstack 0
  2154   001AD2                     _vfpfcnvrt:
  2155                           	callstack 18
  2156   001AD2                     
  2157                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2158   001AD2  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2159   001AD6  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2160   001ADA  CFDE FFF6          	movff	postinc2,tblptrl
  2161   001ADE  CFDD FFF7          	movff	postdec2,tblptrh
  2162   001AE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2163   001AE2  6AF8               	clrf	tblptru,c
  2164   001AE4                     	endif
  2165   001AE4                     	if	0	;tblptru may be non-zero
  2166   001AE4                     	endif
  2167   001AE4  0008               	tblrd		*
  2168   001AE6  50F5               	movf	tablat,w,c
  2169   001AE8  0A25               	xorlw	37
  2170   001AEA  A4D8               	btfss	status,2,c
  2171   001AEC  EF7A  F00D         	goto	u6841
  2172   001AF0  EF7C  F00D         	goto	u6840
  2173   001AF4                     u6841:
  2174   001AF4  EFE9  F00D         	goto	l7856
  2175   001AF8                     u6840:
  2176   001AF8                     
  2177                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2178   001AF8  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2179   001AFC  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2180   001B00  2ADE               	incf	postinc2,f,c
  2181   001B02  0E00               	movlw	0
  2182   001B04  22DD               	addwfc	postdec2,f,c
  2183   001B06                     
  2184                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2185   001B06  0E00               	movlw	0
  2186   001B08  0100               	movlb	0	; () banked
  2187   001B0A  6F81               	movwf	(_width+1)& (0+255),b
  2188   001B0C  0E00               	movlw	0
  2189   001B0E  6F80               	movwf	_width& (0+255),b
  2190   001B10  C080  F065         	movff	_width,_flags
  2191   001B14                     
  2192                           ; BSR set to: 0
  2193                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2194   001B14  6982               	setf	_prec& (0+255),b
  2195   001B16  6983               	setf	(_prec+1)& (0+255),b
  2196   001B18                     
  2197                           ; BSR set to: 0
  2198                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2199   001B18  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2200   001B1C  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2201   001B20  CFDE F041          	movff	postinc2,vfpfcnvrt@cp
  2202   001B24  CFDD F042          	movff	postdec2,vfpfcnvrt@cp+1
  2203   001B28                     
  2204                           ; BSR set to: 0
  2205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2206   001B28  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2207   001B2C  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2208   001B30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2209   001B30  6AF8               	clrf	tblptru,c
  2210   001B32                     	endif
  2211   001B32                     	if	0	;tblptru may be non-zero
  2212   001B32                     	endif
  2213   001B32  0008               	tblrd		*
  2214   001B34  50F5               	movf	tablat,w,c
  2215   001B36  0A64               	xorlw	100
  2216   001B38  B4D8               	btfsc	status,2,c
  2217   001B3A  EFA1  F00D         	goto	u6851
  2218   001B3E  EFA3  F00D         	goto	u6850
  2219   001B42                     u6851:
  2220   001B42  EFB2  F00D         	goto	l7846
  2221   001B46                     u6850:
  2222   001B46                     
  2223                           ; BSR set to: 0
  2224   001B46  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2225   001B4A  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2226   001B4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2227   001B4E  6AF8               	clrf	tblptru,c
  2228   001B50                     	endif
  2229   001B50                     	if	0	;tblptru may be non-zero
  2230   001B50                     	endif
  2231   001B50  0008               	tblrd		*
  2232   001B52  50F5               	movf	tablat,w,c
  2233   001B54  0A69               	xorlw	105
  2234   001B56  A4D8               	btfss	status,2,c
  2235   001B58  EFB0  F00D         	goto	u6861
  2236   001B5C  EFB2  F00D         	goto	u6860
  2237   001B60                     u6861:
  2238   001B60  EFE0  F00D         	goto	l7852
  2239   001B64                     u6860:
  2240   001B64                     l7846:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2244   001B64  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2245   001B68  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2246   001B6C  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  2247   001B70  0E02               	movlw	2
  2248   001B72  26DE               	addwf	postinc2,f,c
  2249   001B74  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  2250   001B78  0E00               	movlw	0
  2251   001B7A  22DD               	addwfc	postdec2,f,c
  2252   001B7C  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2253   001B80  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2254   001B84  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg
  2255   001B88  CFDD F03E          	movff	postdec2,vfpfcnvrt@convarg+1
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2258   001B8C  0E01               	movlw	1
  2259   001B8E  2441               	addwf	vfpfcnvrt@cp^0,w,c
  2260   001B90  6E3B               	movwf	??_vfpfcnvrt^0,c
  2261   001B92  0E00               	movlw	0
  2262   001B94  2042               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2263   001B96  6E3C               	movwf	(??_vfpfcnvrt+1)^0,c
  2264   001B98  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2265   001B9C  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2266   001BA0  C03B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2267   001BA4  C03C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2268   001BA8                     
  2269                           ; BSR set to: 0
  2270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2271   001BA8  C035  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  2272   001BAC  C036  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2273   001BB0  C03D  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  2274   001BB4  C03E  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2275   001BB8  EC41  F00B         	call	_dtoa	;wreg free
  2276   001BBC  EFFE  F00D         	goto	l2370
  2277   001BC0                     l7852:
  2278                           
  2279                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2280   001BC0  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281   001BC4  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282   001BC8  2ADE               	incf	postinc2,f,c
  2283   001BCA  0E00               	movlw	0
  2284   001BCC  22DD               	addwfc	postdec2,f,c
  2285   001BCE  EFFE  F00D         	goto	l2370
  2286   001BD2                     l7856:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2289   001BD2  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2290   001BD6  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2291   001BDA  CFDE FFF6          	movff	postinc2,tblptrl
  2292   001BDE  CFDD FFF7          	movff	postdec2,tblptrh
  2293   001BE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2294   001BE2  6AF8               	clrf	tblptru,c
  2295   001BE4                     	endif
  2296   001BE4                     	if	0	;tblptru may be non-zero
  2297   001BE4                     	endif
  2298   001BE4  0008               	tblrd		*
  2299   001BE6  50F5               	movf	tablat,w,c
  2300   001BE8  6E0D               	movwf	fputc@c^0,c
  2301   001BEA  6A0E               	clrf	(fputc@c+1)^0,c
  2302   001BEC  C035  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  2303   001BF0  C036  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2304   001BF4  EC29  F010         	call	_fputc	;wreg free
  2305   001BF8  EFE0  F00D         	goto	l7852
  2306   001BFC                     l2370:
  2307   001BFC  0012               	return		;funcret
  2308   001BFE                     __end_of_vfpfcnvrt:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _dtoa *****************
  2312 ;; Defined at:
  2313 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  2316 ;;		 -> sprintf@f(12), 
  2317 ;;  d               2   41[COMRAM] int 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  i               2   50[COMRAM] int 
  2320 ;;  w               2   47[COMRAM] int 
  2321 ;;  p               2   45[COMRAM] int 
  2322 ;;  s               1   49[COMRAM] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2332 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;Total ram usage:       13 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 8
  2339 ;; This function calls:
  2340 ;;		___awdiv
  2341 ;;		___awmod
  2342 ;;		_abs
  2343 ;;		_pad
  2344 ;; This function is called by:
  2345 ;;		_vfpfcnvrt
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text8
  2350   001682                     __ptext8:
  2351                           	callstack 0
  2352   001682                     _dtoa:
  2353                           	callstack 18
  2354   001682                     
  2355                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2356   001682  BE2B               	btfsc	(dtoa@d+1)^0,7,c
  2357   001684  EF46  F00B         	goto	u6681
  2358   001688  EF49  F00B         	goto	u6680
  2359   00168C                     u6681:
  2360   00168C  0E01               	movlw	1
  2361   00168E  EF4A  F00B         	goto	u6690
  2362   001692                     u6680:
  2363   001692  0E00               	movlw	0
  2364   001694                     u6690:
  2365   001694  6E32               	movwf	dtoa@s^0,c
  2366   001696                     
  2367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2368   001696  5032               	movf	dtoa@s^0,w,c
  2369   001698  B4D8               	btfsc	status,2,c
  2370   00169A  EF51  F00B         	goto	u6701
  2371   00169E  EF53  F00B         	goto	u6700
  2372   0016A2                     u6701:
  2373   0016A2  EF57  F00B         	goto	l7736
  2374   0016A6                     u6700:
  2375   0016A6                     
  2376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2377   0016A6  6C2A               	negf	dtoa@d^0,c
  2378   0016A8  1E2B               	comf	(dtoa@d+1)^0,f,c
  2379   0016AA  B0D8               	btfsc	status,0,c
  2380   0016AC  2A2B               	incf	(dtoa@d+1)^0,f,c
  2381   0016AE                     l7736:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2384   0016AE  0100               	movlb	0	; () banked
  2385   0016B0  BF83               	btfsc	(_prec+1)& (0+255),7,b
  2386   0016B2  EF5F  F00B         	goto	u6710
  2387   0016B6  EF5D  F00B         	goto	u6711
  2388   0016BA                     u6711:
  2389   0016BA  EF65  F00B         	goto	l2349
  2390   0016BE                     u6710:
  2391   0016BE                     
  2392                           ; BSR set to: 0
  2393   0016BE  0E00               	movlw	0
  2394   0016C0  6E2F               	movwf	(dtoa@p+1)^0,c
  2395   0016C2  0E01               	movlw	1
  2396   0016C4  6E2E               	movwf	dtoa@p^0,c
  2397   0016C6  EF69  F00B         	goto	l2351
  2398   0016CA                     l2349:
  2399                           
  2400                           ; BSR set to: 0
  2401   0016CA  C082  F02E         	movff	_prec,dtoa@p
  2402   0016CE  C083  F02F         	movff	_prec+1,dtoa@p+1
  2403   0016D2                     l2351:
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2407   0016D2  C080  F030         	movff	_width,dtoa@w
  2408   0016D6  C081  F031         	movff	_width+1,dtoa@w+1
  2409   0016DA                     
  2410                           ; BSR set to: 0
  2411                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2412   0016DA  5032               	movf	dtoa@s^0,w,c
  2413   0016DC  B4D8               	btfsc	status,2,c
  2414   0016DE  EF73  F00B         	goto	u6721
  2415   0016E2  EF75  F00B         	goto	u6720
  2416   0016E6                     u6721:
  2417   0016E6  EF8C  F00B         	goto	l2352
  2418   0016EA                     u6720:
  2419   0016EA                     
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2422   0016EA  0630               	decf	dtoa@w^0,f,c
  2423   0016EC  A0D8               	btfss	status,0,c
  2424   0016EE  0631               	decf	(dtoa@w+1)^0,f,c
  2425   0016F0                     
  2426                           ; BSR set to: 0
  2427                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2428   0016F0  5032               	movf	dtoa@s^0,w,c
  2429   0016F2  A4D8               	btfss	status,2,c
  2430   0016F4  EF7E  F00B         	goto	u6731
  2431   0016F8  EF80  F00B         	goto	u6730
  2432   0016FC                     u6731:
  2433   0016FC  EF86  F00B         	goto	l7748
  2434   001700                     u6730:
  2435   001700                     
  2436                           ; BSR set to: 0
  2437   001700  0E00               	movlw	0
  2438   001702  6E2D               	movwf	(_dtoa$4672+1)^0,c
  2439   001704  0E2B               	movlw	43
  2440   001706  6E2C               	movwf	_dtoa$4672^0,c
  2441   001708  EF8A  F00B         	goto	l7750
  2442   00170C                     l7748:
  2443                           
  2444                           ; BSR set to: 0
  2445   00170C  0E00               	movlw	0
  2446   00170E  6E2D               	movwf	(_dtoa$4672+1)^0,c
  2447   001710  0E2D               	movlw	45
  2448   001712  6E2C               	movwf	_dtoa$4672^0,c
  2449   001714                     l7750:
  2450                           
  2451                           ; BSR set to: 0
  2452   001714  C02C  F032         	movff	_dtoa$4672,dtoa@s
  2453   001718                     l2352:
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2457   001718  0E00               	movlw	0
  2458   00171A  6E34               	movwf	(dtoa@i+1)^0,c
  2459   00171C  0E1F               	movlw	31
  2460   00171E  6E33               	movwf	dtoa@i^0,c
  2461   001720                     
  2462                           ; BSR set to: 0
  2463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2464   001720  0E00               	movlw	0
  2465   001722  0101               	movlb	1	; () banked
  2466   001724  6F25               	movwf	(_dbuf+31)& (0+255),b
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2469   001726  EFC5  F00B         	goto	l7764
  2470   00172A                     l7754:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2473   00172A  0633               	decf	dtoa@i^0,f,c
  2474   00172C  A0D8               	btfss	status,0,c
  2475   00172E  0634               	decf	(dtoa@i+1)^0,f,c
  2476   001730                     
  2477                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2478   001730  0E06               	movlw	low _dbuf
  2479   001732  2433               	addwf	dtoa@i^0,w,c
  2480   001734  6ED9               	movwf	fsr2l,c
  2481   001736  0E01               	movlw	high _dbuf
  2482   001738  2034               	addwfc	(dtoa@i+1)^0,w,c
  2483   00173A  6EDA               	movwf	fsr2h,c
  2484   00173C  C02A  F00D         	movff	dtoa@d,___awmod@dividend
  2485   001740  C02B  F00E         	movff	dtoa@d+1,___awmod@dividend+1
  2486   001744  0E00               	movlw	0
  2487   001746  6E10               	movwf	(___awmod@divisor+1)^0,c
  2488   001748  0E0A               	movlw	10
  2489   00174A  6E0F               	movwf	___awmod@divisor^0,c
  2490   00174C  EC6A  F012         	call	___awmod	;wreg free
  2491   001750  C00D  F013         	movff	?___awmod,abs@a
  2492   001754  C00E  F014         	movff	?___awmod+1,abs@a+1
  2493   001758  ECC5  F015         	call	_abs	;wreg free
  2494   00175C  5013               	movf	?_abs^0,w,c
  2495   00175E  0F30               	addlw	48
  2496   001760  6EDF               	movwf	indf2,c
  2497   001762                     
  2498                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2499   001762  062E               	decf	dtoa@p^0,f,c
  2500   001764  A0D8               	btfss	status,0,c
  2501   001766  062F               	decf	(dtoa@p+1)^0,f,c
  2502   001768                     
  2503                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2504   001768  0630               	decf	dtoa@w^0,f,c
  2505   00176A  A0D8               	btfss	status,0,c
  2506   00176C  0631               	decf	(dtoa@w+1)^0,f,c
  2507   00176E                     
  2508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2509   00176E  C02A  F00D         	movff	dtoa@d,___awdiv@dividend
  2510   001772  C02B  F00E         	movff	dtoa@d+1,___awdiv@dividend+1
  2511   001776  0E00               	movlw	0
  2512   001778  6E10               	movwf	(___awdiv@divisor+1)^0,c
  2513   00177A  0E0A               	movlw	10
  2514   00177C  6E0F               	movwf	___awdiv@divisor^0,c
  2515   00177E  EC8E  F010         	call	___awdiv	;wreg free
  2516   001782  C00D  F02A         	movff	?___awdiv,dtoa@d
  2517   001786  C00E  F02B         	movff	?___awdiv+1,dtoa@d+1
  2518   00178A                     l7764:
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2521   00178A  BE34               	btfsc	(dtoa@i+1)^0,7,c
  2522   00178C  EFD0  F00B         	goto	u6741
  2523   001790  5034               	movf	(dtoa@i+1)^0,w,c
  2524   001792  E108               	bnz	u6740
  2525   001794  0433               	decf	dtoa@i^0,w,c
  2526   001796  A0D8               	btfss	status,0,c
  2527   001798  EFD0  F00B         	goto	u6741
  2528   00179C  EFD2  F00B         	goto	u6740
  2529   0017A0                     u6741:
  2530   0017A0  EFE8  F00B         	goto	l7770
  2531   0017A4                     u6740:
  2532   0017A4  502A               	movf	dtoa@d^0,w,c
  2533   0017A6  102B               	iorwf	(dtoa@d+1)^0,w,c
  2534   0017A8  A4D8               	btfss	status,2,c
  2535   0017AA  EFD9  F00B         	goto	u6751
  2536   0017AE  EFDB  F00B         	goto	u6750
  2537   0017B2                     u6751:
  2538   0017B2  EF95  F00B         	goto	l7754
  2539   0017B6                     u6750:
  2540   0017B6  BE2F               	btfsc	(dtoa@p+1)^0,7,c
  2541   0017B8  EFE8  F00B         	goto	u6760
  2542   0017BC  502F               	movf	(dtoa@p+1)^0,w,c
  2543   0017BE  E106               	bnz	u6761
  2544   0017C0  042E               	decf	dtoa@p^0,w,c
  2545   0017C2  B0D8               	btfsc	status,0,c
  2546   0017C4  EFE6  F00B         	goto	u6761
  2547   0017C8  EFE8  F00B         	goto	u6760
  2548   0017CC                     u6761:
  2549   0017CC  EF95  F00B         	goto	l7754
  2550   0017D0                     u6760:
  2551   0017D0                     l7770:
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2554   0017D0  5032               	movf	dtoa@s^0,w,c
  2555   0017D2  B4D8               	btfsc	status,2,c
  2556   0017D4  EFEE  F00B         	goto	u6771
  2557   0017D8  EFF0  F00B         	goto	u6770
  2558   0017DC                     u6771:
  2559   0017DC  EFFB  F00B         	goto	l7776
  2560   0017E0                     u6770:
  2561   0017E0                     
  2562                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2563   0017E0  0633               	decf	dtoa@i^0,f,c
  2564   0017E2  A0D8               	btfss	status,0,c
  2565   0017E4  0634               	decf	(dtoa@i+1)^0,f,c
  2566   0017E6                     
  2567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2568   0017E6  0E06               	movlw	low _dbuf
  2569   0017E8  2433               	addwf	dtoa@i^0,w,c
  2570   0017EA  6ED9               	movwf	fsr2l,c
  2571   0017EC  0E01               	movlw	high _dbuf
  2572   0017EE  2034               	addwfc	(dtoa@i+1)^0,w,c
  2573   0017F0  6EDA               	movwf	fsr2h,c
  2574   0017F2  C032  FFDF         	movff	dtoa@s,indf2
  2575   0017F6                     l7776:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2578   0017F6  C028  F01D         	movff	dtoa@fp,pad@fp
  2579   0017FA  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  2580   0017FE  0E06               	movlw	low _dbuf
  2581   001800  2433               	addwf	dtoa@i^0,w,c
  2582   001802  6E1F               	movwf	pad@buf^0,c
  2583   001804  0E01               	movlw	high _dbuf
  2584   001806  2034               	addwfc	(dtoa@i+1)^0,w,c
  2585   001808  6E20               	movwf	(pad@buf+1)^0,c
  2586   00180A  C030  F021         	movff	dtoa@w,pad@p
  2587   00180E  C031  F022         	movff	dtoa@w+1,pad@p+1
  2588   001812  ECF5  F013         	call	_pad	;wreg free
  2589   001816  0012               	return		;funcret
  2590   001818                     __end_of_dtoa:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _pad *****************
  2594 ;; Defined at:
  2595 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2598 ;;		 -> sprintf@f(12), 
  2599 ;;  buf             2   30[COMRAM] PTR unsigned char 
  2600 ;;		 -> dbuf(32), 
  2601 ;;  p               2   32[COMRAM] int 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  w               2   37[COMRAM] int 
  2604 ;;  i               2   35[COMRAM] int 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2614 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;Total ram usage:       11 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 7
  2621 ;; This function calls:
  2622 ;;		_fputc
  2623 ;;		_fputs
  2624 ;; This function is called by:
  2625 ;;		_dtoa
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text9
  2630   0027EA                     __ptext9:
  2631                           	callstack 0
  2632   0027EA                     _pad:
  2633                           	callstack 18
  2634   0027EA                     
  2635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2636   0027EA  BE22               	btfsc	(pad@p+1)^0,7,c
  2637   0027EC  EFFA  F013         	goto	u6591
  2638   0027F0  EFFC  F013         	goto	u6590
  2639   0027F4                     u6591:
  2640   0027F4  EF02  F014         	goto	l7656
  2641   0027F8                     u6590:
  2642   0027F8  C021  F026         	movff	pad@p,pad@w
  2643   0027FC  C022  F027         	movff	pad@p+1,pad@w+1
  2644   002800  EF06  F014         	goto	l2340
  2645   002804                     l7656:
  2646   002804  0E00               	movlw	0
  2647   002806  6E27               	movwf	(pad@w+1)^0,c
  2648   002808  0E00               	movlw	0
  2649   00280A  6E26               	movwf	pad@w^0,c
  2650   00280C                     l2340:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2653   00280C  0E00               	movlw	0
  2654   00280E  6E25               	movwf	(pad@i+1)^0,c
  2655   002810  0E00               	movlw	0
  2656   002812  6E24               	movwf	pad@i^0,c
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2659   002814  EF18  F014         	goto	l7662
  2660   002818                     l7658:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2663   002818  0E00               	movlw	0
  2664   00281A  6E0E               	movwf	(fputc@c+1)^0,c
  2665   00281C  0E20               	movlw	32
  2666   00281E  6E0D               	movwf	fputc@c^0,c
  2667   002820  C01D  F00F         	movff	pad@fp,fputc@fp
  2668   002824  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  2669   002828  EC29  F010         	call	_fputc	;wreg free
  2670   00282C                     
  2671                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2672   00282C  4A24               	infsnz	pad@i^0,f,c
  2673   00282E  2A25               	incf	(pad@i+1)^0,f,c
  2674   002830                     l7662:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2677   002830  5026               	movf	pad@w^0,w,c
  2678   002832  5C24               	subwf	pad@i^0,w,c
  2679   002834  5025               	movf	(pad@i+1)^0,w,c
  2680   002836  0A80               	xorlw	128
  2681   002838  6E23               	movwf	??_pad^0,c
  2682   00283A  5027               	movf	(pad@w+1)^0,w,c
  2683   00283C  0A80               	xorlw	128
  2684   00283E  5823               	subwfb	??_pad^0,w,c
  2685   002840  A0D8               	btfss	status,0,c
  2686   002842  EF25  F014         	goto	u6601
  2687   002846  EF27  F014         	goto	u6600
  2688   00284A                     u6601:
  2689   00284A  EF0C  F014         	goto	l7658
  2690   00284E                     u6600:
  2691   00284E                     
  2692                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2693   00284E  C01F  F016         	movff	pad@buf,fputs@s
  2694   002852  C020  F017         	movff	pad@buf+1,fputs@s+1
  2695   002856  C01D  F018         	movff	pad@fp,fputs@fp
  2696   00285A  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2697   00285E  EC81  F015         	call	_fputs	;wreg free
  2698   002862  0012               	return		;funcret
  2699   002864                     __end_of_pad:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function _fputs *****************
  2703 ;; Defined at:
  2704 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2707 ;;		 -> dbuf(32), 
  2708 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2709 ;;		 -> sprintf@f(12), 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  i               2   26[COMRAM] int 
  2712 ;;  c               1   25[COMRAM] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  2   21[COMRAM] int 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;Total ram usage:        7 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 6
  2729 ;; This function calls:
  2730 ;;		_fputc
  2731 ;; This function is called by:
  2732 ;;		_pad
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text10
  2737   002B02                     __ptext10:
  2738                           	callstack 0
  2739   002B02                     _fputs:
  2740                           	callstack 18
  2741   002B02  0E00               	movlw	0
  2742   002B04  6E1C               	movwf	(fputs@i+1)^0,c
  2743   002B06  0E00               	movlw	0
  2744   002B08  6E1B               	movwf	fputs@i^0,c
  2745   002B0A  EF92  F015         	goto	l7546
  2746   002B0E                     l7542:
  2747   002B0E  C01A  F00D         	movff	fputs@c,fputc@c
  2748   002B12  6A0E               	clrf	(fputc@c+1)^0,c
  2749   002B14  C018  F00F         	movff	fputs@fp,fputc@fp
  2750   002B18  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  2751   002B1C  EC29  F010         	call	_fputc	;wreg free
  2752   002B20  4A1B               	infsnz	fputs@i^0,f,c
  2753   002B22  2A1C               	incf	(fputs@i+1)^0,f,c
  2754   002B24                     l7546:
  2755   002B24  501B               	movf	fputs@i^0,w,c
  2756   002B26  2416               	addwf	fputs@s^0,w,c
  2757   002B28  6ED9               	movwf	fsr2l,c
  2758   002B2A  501C               	movf	(fputs@i+1)^0,w,c
  2759   002B2C  2017               	addwfc	(fputs@s+1)^0,w,c
  2760   002B2E  6EDA               	movwf	fsr2h,c
  2761   002B30  50DF               	movf	indf2,w,c
  2762   002B32  6E1A               	movwf	fputs@c^0,c
  2763   002B34  501A               	movf	fputs@c^0,w,c
  2764   002B36  A4D8               	btfss	status,2,c
  2765   002B38  EFA0  F015         	goto	u6421
  2766   002B3C  EFA2  F015         	goto	u6420
  2767   002B40                     u6421:
  2768   002B40  EF87  F015         	goto	l7542
  2769   002B44                     u6420:
  2770   002B44  0012               	return		;funcret
  2771   002B46                     __end_of_fputs:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _fputc *****************
  2775 ;; Defined at:
  2776 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  c               2   12[COMRAM] int 
  2779 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2780 ;;		 -> sprintf@f(12), 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  2   12[COMRAM] int 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;Total ram usage:        9 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; Hardware stack levels required when called: 5
  2799 ;; This function calls:
  2800 ;;		_putch
  2801 ;; This function is called by:
  2802 ;;		_pad
  2803 ;;		_vfpfcnvrt
  2804 ;;		_fputs
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text11
  2809   002052                     __ptext11:
  2810                           	callstack 0
  2811   002052                     _fputc:
  2812                           	callstack 21
  2813   002052  500F               	movf	fputc@fp^0,w,c
  2814   002054  1010               	iorwf	(fputc@fp+1)^0,w,c
  2815   002056  B4D8               	btfsc	status,2,c
  2816   002058  EF30  F010         	goto	u6381
  2817   00205C  EF32  F010         	goto	u6380
  2818   002060                     u6381:
  2819   002060  EF3B  F010         	goto	l7530
  2820   002064                     u6380:
  2821   002064  500F               	movf	fputc@fp^0,w,c
  2822   002066  1010               	iorwf	(fputc@fp+1)^0,w,c
  2823   002068  A4D8               	btfss	status,2,c
  2824   00206A  EF39  F010         	goto	u6391
  2825   00206E  EF3B  F010         	goto	u6390
  2826   002072                     u6391:
  2827   002072  EF40  F010         	goto	l7532
  2828   002076                     u6390:
  2829   002076                     l7530:
  2830   002076  500D               	movf	fputc@c^0,w,c
  2831   002078  EC11  F017         	call	_putch
  2832   00207C  EF8D  F010         	goto	l2395
  2833   002080                     l7532:
  2834   002080  EE20 F00A          	lfsr	2,10
  2835   002084  500F               	movf	fputc@fp^0,w,c
  2836   002086  26D9               	addwf	fsr2l,f,c
  2837   002088  5010               	movf	(fputc@fp+1)^0,w,c
  2838   00208A  22DA               	addwfc	fsr2h,f,c
  2839   00208C  50DE               	movf	postinc2,w,c
  2840   00208E  10DE               	iorwf	postinc2,w,c
  2841   002090  B4D8               	btfsc	status,2,c
  2842   002092  EF4D  F010         	goto	u6401
  2843   002096  EF4F  F010         	goto	u6400
  2844   00209A                     u6401:
  2845   00209A  EF6A  F010         	goto	l7536
  2846   00209E                     u6400:
  2847   00209E  EE20 F00A          	lfsr	2,10
  2848   0020A2  500F               	movf	fputc@fp^0,w,c
  2849   0020A4  26D9               	addwf	fsr2l,f,c
  2850   0020A6  5010               	movf	(fputc@fp+1)^0,w,c
  2851   0020A8  22DA               	addwfc	fsr2h,f,c
  2852   0020AA  EE10 F003          	lfsr	1,3
  2853   0020AE  500F               	movf	fputc@fp^0,w,c
  2854   0020B0  26E1               	addwf	fsr1l,f,c
  2855   0020B2  5010               	movf	(fputc@fp+1)^0,w,c
  2856   0020B4  22E2               	addwfc	fsr1h,f,c
  2857   0020B6  50DE               	movf	postinc2,w,c
  2858   0020B8  5CE6               	subwf	postinc1,w,c
  2859   0020BA  50E6               	movf	postinc1,w,c
  2860   0020BC  0A80               	xorlw	128
  2861   0020BE  6E15               	movwf	(??_fputc+4)^0,c
  2862   0020C0  50DE               	movf	postinc2,w,c
  2863   0020C2  0A80               	xorlw	128
  2864   0020C4  5815               	subwfb	(??_fputc+4)^0,w,c
  2865   0020C6  B0D8               	btfsc	status,0,c
  2866   0020C8  EF68  F010         	goto	u6411
  2867   0020CC  EF6A  F010         	goto	u6410
  2868   0020D0                     u6411:
  2869   0020D0  EF8D  F010         	goto	l2395
  2870   0020D4                     u6410:
  2871   0020D4                     l7536:
  2872   0020D4  EE20 F003          	lfsr	2,3
  2873   0020D8  500F               	movf	fputc@fp^0,w,c
  2874   0020DA  26D9               	addwf	fsr2l,f,c
  2875   0020DC  5010               	movf	(fputc@fp+1)^0,w,c
  2876   0020DE  22DA               	addwfc	fsr2h,f,c
  2877   0020E0  CFDE F011          	movff	postinc2,??_fputc
  2878   0020E4  CFDD F012          	movff	postdec2,??_fputc+1
  2879   0020E8  C00F  FFD9         	movff	fputc@fp,fsr2l
  2880   0020EC  C010  FFDA         	movff	fputc@fp+1,fsr2h
  2881   0020F0  CFDE F013          	movff	postinc2,??_fputc+2
  2882   0020F4  CFDD F014          	movff	postdec2,??_fputc+3
  2883   0020F8  5011               	movf	??_fputc^0,w,c
  2884   0020FA  2413               	addwf	(??_fputc+2)^0,w,c
  2885   0020FC  6ED9               	movwf	fsr2l,c
  2886   0020FE  5012               	movf	(??_fputc+1)^0,w,c
  2887   002100  2014               	addwfc	(??_fputc+3)^0,w,c
  2888   002102  6EDA               	movwf	fsr2h,c
  2889   002104  C00D  FFDF         	movff	fputc@c,indf2
  2890   002108  EE20 F003          	lfsr	2,3
  2891   00210C  500F               	movf	fputc@fp^0,w,c
  2892   00210E  26D9               	addwf	fsr2l,f,c
  2893   002110  5010               	movf	(fputc@fp+1)^0,w,c
  2894   002112  22DA               	addwfc	fsr2h,f,c
  2895   002114  2ADE               	incf	postinc2,f,c
  2896   002116  0E00               	movlw	0
  2897   002118  22DD               	addwfc	postdec2,f,c
  2898   00211A                     l2395:
  2899   00211A  0012               	return		;funcret
  2900   00211C                     __end_of_fputc:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _putch *****************
  2904 ;; Defined at:
  2905 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  c               1    wreg     unsigned char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  c               1    0[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 4
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_fputc
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text12
  2934   002E22                     __ptext12:
  2935                           	callstack 0
  2936   002E22                     _putch:
  2937                           	callstack 21
  2938   002E22  0012               	return		;funcret
  2939   002E24                     __end_of_putch:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function _abs *****************
  2943 ;; Defined at:
  2944 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  a               2   18[COMRAM] int 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  2   18[COMRAM] int 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;Total ram usage:        4 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 4
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_dtoa
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text13
  2973   002B8A                     __ptext13:
  2974                           	callstack 0
  2975   002B8A                     _abs:
  2976                           	callstack 21
  2977   002B8A  BE14               	btfsc	(abs@a+1)^0,7,c
  2978   002B8C  EFD2  F015         	goto	u6610
  2979   002B90  5014               	movf	(abs@a+1)^0,w,c
  2980   002B92  E106               	bnz	u6611
  2981   002B94  0413               	decf	abs@a^0,w,c
  2982   002B96  B0D8               	btfsc	status,0,c
  2983   002B98  EFD0  F015         	goto	u6611
  2984   002B9C  EFD2  F015         	goto	u6610
  2985   002BA0                     u6611:
  2986   002BA0  EFE0  F015         	goto	l2380
  2987   002BA4                     u6610:
  2988   002BA4  C013  F015         	movff	abs@a,??_abs
  2989   002BA8  C014  F016         	movff	abs@a+1,??_abs+1
  2990   002BAC  1E15               	comf	??_abs^0,f,c
  2991   002BAE  1E16               	comf	(??_abs+1)^0,f,c
  2992   002BB0  4A15               	infsnz	??_abs^0,f,c
  2993   002BB2  2A16               	incf	(??_abs+1)^0,f,c
  2994   002BB4  C015  F013         	movff	??_abs,?_abs
  2995   002BB8  C016  F014         	movff	??_abs+1,?_abs+1
  2996   002BBC  EFE4  F015         	goto	l2383
  2997   002BC0                     l2380:
  2998   002BC0  C013  F013         	movff	abs@a,?_abs
  2999   002BC4  C014  F014         	movff	abs@a+1,?_abs+1
  3000   002BC8                     l2383:
  3001   002BC8  0012               	return		;funcret
  3002   002BCA                     __end_of_abs:
  3003                           	callstack 0
  3004                           
  3005 ;; *************** function ___awmod *****************
  3006 ;; Defined at:
  3007 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  dividend        2   12[COMRAM] int 
  3010 ;;  divisor         2   14[COMRAM] int 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  sign            1   17[COMRAM] unsigned char 
  3013 ;;  counter         1   16[COMRAM] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  2   12[COMRAM] int 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;Total ram usage:        6 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 4
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_dtoa
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text14
  3038   0024D4                     __ptext14:
  3039                           	callstack 0
  3040   0024D4                     ___awmod:
  3041                           	callstack 21
  3042   0024D4  0E00               	movlw	0
  3043   0024D6  6E12               	movwf	___awmod@sign^0,c
  3044   0024D8  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  3045   0024DA  EF73  F012         	goto	u6530
  3046   0024DE  EF71  F012         	goto	u6531
  3047   0024E2                     u6531:
  3048   0024E2  EF79  F012         	goto	l7624
  3049   0024E6                     u6530:
  3050   0024E6  6C0D               	negf	___awmod@dividend^0,c
  3051   0024E8  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3052   0024EA  B0D8               	btfsc	status,0,c
  3053   0024EC  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3054   0024EE  0E01               	movlw	1
  3055   0024F0  6E12               	movwf	___awmod@sign^0,c
  3056   0024F2                     l7624:
  3057   0024F2  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  3058   0024F4  EF80  F012         	goto	u6540
  3059   0024F8  EF7E  F012         	goto	u6541
  3060   0024FC                     u6541:
  3061   0024FC  EF84  F012         	goto	l7628
  3062   002500                     u6540:
  3063   002500  6C0F               	negf	___awmod@divisor^0,c
  3064   002502  1E10               	comf	(___awmod@divisor+1)^0,f,c
  3065   002504  B0D8               	btfsc	status,0,c
  3066   002506  2A10               	incf	(___awmod@divisor+1)^0,f,c
  3067   002508                     l7628:
  3068   002508  500F               	movf	___awmod@divisor^0,w,c
  3069   00250A  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  3070   00250C  B4D8               	btfsc	status,2,c
  3071   00250E  EF8B  F012         	goto	u6551
  3072   002512  EF8D  F012         	goto	u6550
  3073   002516                     u6551:
  3074   002516  EFB1  F012         	goto	l7644
  3075   00251A                     u6550:
  3076   00251A  0E01               	movlw	1
  3077   00251C  6E11               	movwf	___awmod@counter^0,c
  3078   00251E  EF95  F012         	goto	l7634
  3079   002522                     l7632:
  3080   002522  90D8               	bcf	status,0,c
  3081   002524  360F               	rlcf	___awmod@divisor^0,f,c
  3082   002526  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  3083   002528  2A11               	incf	___awmod@counter^0,f,c
  3084   00252A                     l7634:
  3085   00252A  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  3086   00252C  EF9A  F012         	goto	u6561
  3087   002530  EF9C  F012         	goto	u6560
  3088   002534                     u6561:
  3089   002534  EF91  F012         	goto	l7632
  3090   002538                     u6560:
  3091   002538                     l7636:
  3092   002538  500F               	movf	___awmod@divisor^0,w,c
  3093   00253A  5C0D               	subwf	___awmod@dividend^0,w,c
  3094   00253C  5010               	movf	(___awmod@divisor+1)^0,w,c
  3095   00253E  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  3096   002540  A0D8               	btfss	status,0,c
  3097   002542  EFA5  F012         	goto	u6571
  3098   002546  EFA7  F012         	goto	u6570
  3099   00254A                     u6571:
  3100   00254A  EFAB  F012         	goto	l7640
  3101   00254E                     u6570:
  3102   00254E  500F               	movf	___awmod@divisor^0,w,c
  3103   002550  5E0D               	subwf	___awmod@dividend^0,f,c
  3104   002552  5010               	movf	(___awmod@divisor+1)^0,w,c
  3105   002554  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  3106   002556                     l7640:
  3107   002556  90D8               	bcf	status,0,c
  3108   002558  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  3109   00255A  320F               	rrcf	___awmod@divisor^0,f,c
  3110   00255C  2E11               	decfsz	___awmod@counter^0,f,c
  3111   00255E  EF9C  F012         	goto	l7636
  3112   002562                     l7644:
  3113   002562  5012               	movf	___awmod@sign^0,w,c
  3114   002564  B4D8               	btfsc	status,2,c
  3115   002566  EFB7  F012         	goto	u6581
  3116   00256A  EFB9  F012         	goto	u6580
  3117   00256E                     u6581:
  3118   00256E  EFBD  F012         	goto	l7648
  3119   002572                     u6580:
  3120   002572  6C0D               	negf	___awmod@dividend^0,c
  3121   002574  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3122   002576  B0D8               	btfsc	status,0,c
  3123   002578  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3124   00257A                     l7648:
  3125   00257A  C00D  F00D         	movff	___awmod@dividend,?___awmod
  3126   00257E  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  3127   002582  0012               	return		;funcret
  3128   002584                     __end_of___awmod:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function ___awdiv *****************
  3132 ;; Defined at:
  3133 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  dividend        2   12[COMRAM] int 
  3136 ;;  divisor         2   14[COMRAM] int 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  quotient        2   18[COMRAM] int 
  3139 ;;  sign            1   17[COMRAM] unsigned char 
  3140 ;;  counter         1   16[COMRAM] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  2   12[COMRAM] int 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;Total ram usage:        8 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; Hardware stack levels required when called: 4
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_dtoa
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text15
  3165   00211C                     __ptext15:
  3166                           	callstack 0
  3167   00211C                     ___awdiv:
  3168                           	callstack 21
  3169   00211C  0E00               	movlw	0
  3170   00211E  6E12               	movwf	___awdiv@sign^0,c
  3171   002120  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  3172   002122  EF97  F010         	goto	u6470
  3173   002126  EF95  F010         	goto	u6471
  3174   00212A                     u6471:
  3175   00212A  EF9D  F010         	goto	l7580
  3176   00212E                     u6470:
  3177   00212E  6C0F               	negf	___awdiv@divisor^0,c
  3178   002130  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  3179   002132  B0D8               	btfsc	status,0,c
  3180   002134  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  3181   002136  0E01               	movlw	1
  3182   002138  6E12               	movwf	___awdiv@sign^0,c
  3183   00213A                     l7580:
  3184   00213A  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  3185   00213C  EFA4  F010         	goto	u6480
  3186   002140  EFA2  F010         	goto	u6481
  3187   002144                     u6481:
  3188   002144  EFAA  F010         	goto	l7586
  3189   002148                     u6480:
  3190   002148  6C0D               	negf	___awdiv@dividend^0,c
  3191   00214A  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  3192   00214C  B0D8               	btfsc	status,0,c
  3193   00214E  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  3194   002150  0E01               	movlw	1
  3195   002152  1A12               	xorwf	___awdiv@sign^0,f,c
  3196   002154                     l7586:
  3197   002154  0E00               	movlw	0
  3198   002156  6E14               	movwf	(___awdiv@quotient+1)^0,c
  3199   002158  0E00               	movlw	0
  3200   00215A  6E13               	movwf	___awdiv@quotient^0,c
  3201   00215C  500F               	movf	___awdiv@divisor^0,w,c
  3202   00215E  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  3203   002160  B4D8               	btfsc	status,2,c
  3204   002162  EFB5  F010         	goto	u6491
  3205   002166  EFB7  F010         	goto	u6490
  3206   00216A                     u6491:
  3207   00216A  EFDF  F010         	goto	l7608
  3208   00216E                     u6490:
  3209   00216E  0E01               	movlw	1
  3210   002170  6E11               	movwf	___awdiv@counter^0,c
  3211   002172  EFBF  F010         	goto	l7594
  3212   002176                     l7592:
  3213   002176  90D8               	bcf	status,0,c
  3214   002178  360F               	rlcf	___awdiv@divisor^0,f,c
  3215   00217A  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  3216   00217C  2A11               	incf	___awdiv@counter^0,f,c
  3217   00217E                     l7594:
  3218   00217E  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  3219   002180  EFC4  F010         	goto	u6501
  3220   002184  EFC6  F010         	goto	u6500
  3221   002188                     u6501:
  3222   002188  EFBB  F010         	goto	l7592
  3223   00218C                     u6500:
  3224   00218C                     l7596:
  3225   00218C  90D8               	bcf	status,0,c
  3226   00218E  3613               	rlcf	___awdiv@quotient^0,f,c
  3227   002190  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  3228   002192  500F               	movf	___awdiv@divisor^0,w,c
  3229   002194  5C0D               	subwf	___awdiv@dividend^0,w,c
  3230   002196  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3231   002198  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  3232   00219A  A0D8               	btfss	status,0,c
  3233   00219C  EFD2  F010         	goto	u6511
  3234   0021A0  EFD4  F010         	goto	u6510
  3235   0021A4                     u6511:
  3236   0021A4  EFD9  F010         	goto	l7604
  3237   0021A8                     u6510:
  3238   0021A8  500F               	movf	___awdiv@divisor^0,w,c
  3239   0021AA  5E0D               	subwf	___awdiv@dividend^0,f,c
  3240   0021AC  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3241   0021AE  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  3242   0021B0  8013               	bsf	___awdiv@quotient^0,0,c
  3243   0021B2                     l7604:
  3244   0021B2  90D8               	bcf	status,0,c
  3245   0021B4  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  3246   0021B6  320F               	rrcf	___awdiv@divisor^0,f,c
  3247   0021B8  2E11               	decfsz	___awdiv@counter^0,f,c
  3248   0021BA  EFC6  F010         	goto	l7596
  3249   0021BE                     l7608:
  3250   0021BE  5012               	movf	___awdiv@sign^0,w,c
  3251   0021C0  B4D8               	btfsc	status,2,c
  3252   0021C2  EFE5  F010         	goto	u6521
  3253   0021C6  EFE7  F010         	goto	u6520
  3254   0021CA                     u6521:
  3255   0021CA  EFEB  F010         	goto	l7612
  3256   0021CE                     u6520:
  3257   0021CE  6C13               	negf	___awdiv@quotient^0,c
  3258   0021D0  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  3259   0021D2  B0D8               	btfsc	status,0,c
  3260   0021D4  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  3261   0021D6                     l7612:
  3262   0021D6  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  3263   0021DA  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  3264   0021DE  0012               	return		;funcret
  3265   0021E0                     __end_of___awdiv:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _memset *****************
  3269 ;; Defined at:
  3270 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  dest            2   12[COMRAM] PTR void 
  3273 ;;		 -> adc_result_4_txt(6), adc_result_3_txt(6), adc_result_2_txt(6), adc_result_1_txt(6), 
  3274 ;;  c               2   14[COMRAM] int 
  3275 ;;  n               2   16[COMRAM] unsigned int 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  s               2   22[COMRAM] PTR unsigned char 
  3278 ;;		 -> adc_result_4_txt(6), adc_result_3_txt(6), adc_result_2_txt(6), adc_result_1_txt(6), 
  3279 ;;  k               2   20[COMRAM] unsigned int 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  2   12[COMRAM] PTR void 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3289 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;Total ram usage:       12 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 4
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_convert_uint16_to_string
  3300 ;;		_convert_uint8_to_string
  3301 ;;		_convert_uint32_to_string
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text16
  3306   001818                     __ptext16:
  3307                           	callstack 0
  3308   001818                     _memset:
  3309                           	callstack 25
  3310   001818  C00D  F017         	movff	memset@dest,memset@s
  3311   00181C  C00E  F018         	movff	memset@dest+1,memset@s+1
  3312   001820  5011               	movf	memset@n^0,w,c
  3313   001822  1012               	iorwf	(memset@n+1)^0,w,c
  3314   001824  A4D8               	btfss	status,2,c
  3315   001826  EF17  F00C         	goto	u7001
  3316   00182A  EF19  F00C         	goto	u7000
  3317   00182E                     u7001:
  3318   00182E  EF1B  F00C         	goto	l8076
  3319   001832                     u7000:
  3320   001832  EFC6  F00C         	goto	l2305
  3321   001836                     l8076:
  3322   001836  C017  FFD9         	movff	memset@s,fsr2l
  3323   00183A  C018  FFDA         	movff	memset@s+1,fsr2h
  3324   00183E  C00F  FFDF         	movff	memset@c,indf2
  3325   001842  5011               	movf	memset@n^0,w,c
  3326   001844  2417               	addwf	memset@s^0,w,c
  3327   001846  6E13               	movwf	??_memset^0,c
  3328   001848  5012               	movf	(memset@n+1)^0,w,c
  3329   00184A  2018               	addwfc	(memset@s+1)^0,w,c
  3330   00184C  6E14               	movwf	(??_memset+1)^0,c
  3331   00184E  0EFF               	movlw	255
  3332   001850  2413               	addwf	??_memset^0,w,c
  3333   001852  6ED9               	movwf	fsr2l,c
  3334   001854  0EFF               	movlw	255
  3335   001856  2014               	addwfc	(??_memset+1)^0,w,c
  3336   001858  6EDA               	movwf	fsr2h,c
  3337   00185A  C00F  FFDF         	movff	memset@c,indf2
  3338   00185E  5012               	movf	(memset@n+1)^0,w,c
  3339   001860  E107               	bnz	u7011
  3340   001862  0E03               	movlw	3
  3341   001864  5C11               	subwf	memset@n^0,w,c
  3342   001866  B0D8               	btfsc	status,0,c
  3343   001868  EF38  F00C         	goto	u7011
  3344   00186C  EF3A  F00C         	goto	u7010
  3345   001870                     u7011:
  3346   001870  EF3C  F00C         	goto	l8082
  3347   001874                     u7010:
  3348   001874  EFC6  F00C         	goto	l2305
  3349   001878                     l8082:
  3350   001878  EE20 F001          	lfsr	2,1
  3351   00187C  5017               	movf	memset@s^0,w,c
  3352   00187E  26D9               	addwf	fsr2l,f,c
  3353   001880  5018               	movf	(memset@s+1)^0,w,c
  3354   001882  22DA               	addwfc	fsr2h,f,c
  3355   001884  C00F  FFDF         	movff	memset@c,indf2
  3356   001888  EE20 F002          	lfsr	2,2
  3357   00188C  5017               	movf	memset@s^0,w,c
  3358   00188E  26D9               	addwf	fsr2l,f,c
  3359   001890  5018               	movf	(memset@s+1)^0,w,c
  3360   001892  22DA               	addwfc	fsr2h,f,c
  3361   001894  C00F  FFDF         	movff	memset@c,indf2
  3362   001898  5011               	movf	memset@n^0,w,c
  3363   00189A  2417               	addwf	memset@s^0,w,c
  3364   00189C  6E13               	movwf	??_memset^0,c
  3365   00189E  5012               	movf	(memset@n+1)^0,w,c
  3366   0018A0  2018               	addwfc	(memset@s+1)^0,w,c
  3367   0018A2  6E14               	movwf	(??_memset+1)^0,c
  3368   0018A4  0EFE               	movlw	254
  3369   0018A6  2413               	addwf	??_memset^0,w,c
  3370   0018A8  6ED9               	movwf	fsr2l,c
  3371   0018AA  0EFF               	movlw	255
  3372   0018AC  2014               	addwfc	(??_memset+1)^0,w,c
  3373   0018AE  6EDA               	movwf	fsr2h,c
  3374   0018B0  C00F  FFDF         	movff	memset@c,indf2
  3375   0018B4  5011               	movf	memset@n^0,w,c
  3376   0018B6  2417               	addwf	memset@s^0,w,c
  3377   0018B8  6E13               	movwf	??_memset^0,c
  3378   0018BA  5012               	movf	(memset@n+1)^0,w,c
  3379   0018BC  2018               	addwfc	(memset@s+1)^0,w,c
  3380   0018BE  6E14               	movwf	(??_memset+1)^0,c
  3381   0018C0  0EFD               	movlw	253
  3382   0018C2  2413               	addwf	??_memset^0,w,c
  3383   0018C4  6ED9               	movwf	fsr2l,c
  3384   0018C6  0EFF               	movlw	255
  3385   0018C8  2014               	addwfc	(??_memset+1)^0,w,c
  3386   0018CA  6EDA               	movwf	fsr2h,c
  3387   0018CC  C00F  FFDF         	movff	memset@c,indf2
  3388   0018D0  5012               	movf	(memset@n+1)^0,w,c
  3389   0018D2  E107               	bnz	u7021
  3390   0018D4  0E07               	movlw	7
  3391   0018D6  5C11               	subwf	memset@n^0,w,c
  3392   0018D8  B0D8               	btfsc	status,0,c
  3393   0018DA  EF71  F00C         	goto	u7021
  3394   0018DE  EF73  F00C         	goto	u7020
  3395   0018E2                     u7021:
  3396   0018E2  EF75  F00C         	goto	l8088
  3397   0018E6                     u7020:
  3398   0018E6  EFC6  F00C         	goto	l2305
  3399   0018EA                     l8088:
  3400   0018EA  EE20 F003          	lfsr	2,3
  3401   0018EE  5017               	movf	memset@s^0,w,c
  3402   0018F0  26D9               	addwf	fsr2l,f,c
  3403   0018F2  5018               	movf	(memset@s+1)^0,w,c
  3404   0018F4  22DA               	addwfc	fsr2h,f,c
  3405   0018F6  C00F  FFDF         	movff	memset@c,indf2
  3406   0018FA  5011               	movf	memset@n^0,w,c
  3407   0018FC  2417               	addwf	memset@s^0,w,c
  3408   0018FE  6E13               	movwf	??_memset^0,c
  3409   001900  5012               	movf	(memset@n+1)^0,w,c
  3410   001902  2018               	addwfc	(memset@s+1)^0,w,c
  3411   001904  6E14               	movwf	(??_memset+1)^0,c
  3412   001906  0EFC               	movlw	252
  3413   001908  2413               	addwf	??_memset^0,w,c
  3414   00190A  6ED9               	movwf	fsr2l,c
  3415   00190C  0EFF               	movlw	255
  3416   00190E  2014               	addwfc	(??_memset+1)^0,w,c
  3417   001910  6EDA               	movwf	fsr2h,c
  3418   001912  C00F  FFDF         	movff	memset@c,indf2
  3419   001916  5012               	movf	(memset@n+1)^0,w,c
  3420   001918  E107               	bnz	u7031
  3421   00191A  0E09               	movlw	9
  3422   00191C  5C11               	subwf	memset@n^0,w,c
  3423   00191E  B0D8               	btfsc	status,0,c
  3424   001920  EF94  F00C         	goto	u7031
  3425   001924  EF96  F00C         	goto	u7030
  3426   001928                     u7031:
  3427   001928  EF98  F00C         	goto	l8094
  3428   00192C                     u7030:
  3429   00192C  EFC6  F00C         	goto	l2305
  3430   001930                     l8094:
  3431   001930  C017  F013         	movff	memset@s,??_memset
  3432   001934  C018  F014         	movff	memset@s+1,??_memset+1
  3433   001938  1E13               	comf	??_memset^0,f,c
  3434   00193A  1E14               	comf	(??_memset+1)^0,f,c
  3435   00193C  4A13               	infsnz	??_memset^0,f,c
  3436   00193E  2A14               	incf	(??_memset+1)^0,f,c
  3437   001940  0E03               	movlw	3
  3438   001942  1413               	andwf	??_memset^0,w,c
  3439   001944  6E15               	movwf	memset@k^0,c
  3440   001946  6A16               	clrf	(memset@k+1)^0,c
  3441   001948  5015               	movf	memset@k^0,w,c
  3442   00194A  2617               	addwf	memset@s^0,f,c
  3443   00194C  5016               	movf	(memset@k+1)^0,w,c
  3444   00194E  2218               	addwfc	(memset@s+1)^0,f,c
  3445   001950  5015               	movf	memset@k^0,w,c
  3446   001952  5E11               	subwf	memset@n^0,f,c
  3447   001954  5016               	movf	(memset@k+1)^0,w,c
  3448   001956  5A12               	subwfb	(memset@n+1)^0,f,c
  3449   001958  0EFC               	movlw	252
  3450   00195A  1611               	andwf	memset@n^0,f,c
  3451   00195C  0EFF               	movlw	255
  3452   00195E  1612               	andwf	(memset@n+1)^0,f,c
  3453   001960  EFBD  F00C         	goto	l8102
  3454   001964                     l8096:
  3455   001964  C017  FFD9         	movff	memset@s,fsr2l
  3456   001968  C018  FFDA         	movff	memset@s+1,fsr2h
  3457   00196C  C00F  FFDF         	movff	memset@c,indf2
  3458   001970  0611               	decf	memset@n^0,f,c
  3459   001972  A0D8               	btfss	status,0,c
  3460   001974  0612               	decf	(memset@n+1)^0,f,c
  3461   001976  4A17               	infsnz	memset@s^0,f,c
  3462   001978  2A18               	incf	(memset@s+1)^0,f,c
  3463   00197A                     l8102:
  3464   00197A  5011               	movf	memset@n^0,w,c
  3465   00197C  1012               	iorwf	(memset@n+1)^0,w,c
  3466   00197E  A4D8               	btfss	status,2,c
  3467   001980  EFC4  F00C         	goto	u7041
  3468   001984  EFC6  F00C         	goto	u7040
  3469   001988                     u7041:
  3470   001988  EFB2  F00C         	goto	l8096
  3471   00198C                     u7040:
  3472   00198C                     l2305:
  3473   00198C  0012               	return		;funcret
  3474   00198E                     __end_of_memset:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _application_intialize *****************
  3478 ;; Defined at:
  3479 ;;		line 121 in file "application.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  ret             1    0        unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 9
  3500 ;; This function calls:
  3501 ;;		_ADC_Init
  3502 ;;		_ecu_layer_intialize
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text17
  3509   002DBA                     __ptext17:
  3510                           	callstack 0
  3511   002DBA                     _application_intialize:
  3512                           	callstack 21
  3513   002DBA                     
  3514                           ;application.c: 124:     ecu_layer_intialize();
  3515   002DBA  EC92  F016         	call	_ecu_layer_intialize	;wreg free
  3516   002DBE  0EF2               	movlw	low _adc_1
  3517   002DC0  6E10               	movwf	ADC_Init@_adc^0,c
  3518   002DC2  0E00               	movlw	high _adc_1
  3519   002DC4  6E11               	movwf	(ADC_Init@_adc+1)^0,c
  3520   002DC6  EC52  F011         	call	_ADC_Init	;wreg free
  3521   002DCA  0012               	return		;funcret
  3522   002DCC                     __end_of_application_intialize:
  3523                           	callstack 0
  3524                           
  3525 ;; *************** function _ecu_layer_intialize *****************
  3526 ;; Defined at:
  3527 ;;		line 96 in file "ECU_Layer/ecu_layer_init.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  ret             1    0        unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;Total ram usage:        0 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 8
  3548 ;; This function calls:
  3549 ;;		_lcd_4bit_intialize
  3550 ;;		_lcd_8bit_intialize
  3551 ;; This function is called by:
  3552 ;;		_application_intialize
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text18
  3557   002D24                     __ptext18:
  3558                           	callstack 0
  3559   002D24                     _ecu_layer_intialize:
  3560                           	callstack 21
  3561   002D24  0EF9               	movlw	low _lcd_1
  3562   002D26  6E1F               	movwf	lcd_4bit_intialize@lcd^0,c
  3563   002D28  0E00               	movlw	high _lcd_1
  3564   002D2A  6E20               	movwf	(lcd_4bit_intialize@lcd+1)^0,c
  3565   002D2C  EC29  F00F         	call	_lcd_4bit_intialize	;wreg free
  3566   002D30  0E30               	movlw	low _lcd_2
  3567   002D32  6E23               	movwf	lcd_8bit_intialize@lcd^0,c
  3568   002D34  0E01               	movlw	high _lcd_2
  3569   002D36  6E24               	movwf	(lcd_8bit_intialize@lcd+1)^0,c
  3570   002D38  EC95  F00E         	call	_lcd_8bit_intialize	;wreg free
  3571   002D3C  0012               	return		;funcret
  3572   002D3E                     __end_of_ecu_layer_intialize:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _lcd_8bit_intialize *****************
  3576 ;; Defined at:
  3577 ;;		line 275 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  lcd             2   34[COMRAM] PTR const struct .
  3580 ;;		 -> lcd_2(10), 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  ret             1   39[COMRAM] unsigned char 
  3583 ;;  l_data_pins_    1   38[COMRAM] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      unsigned char 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;Total ram usage:        6 bytes
  3598 ;; Hardware stack levels used: 1
  3599 ;; Hardware stack levels required when called: 7
  3600 ;; This function calls:
  3601 ;;		_gpio_pin_intialize
  3602 ;;		_lcd_8bit_send_command
  3603 ;; This function is called by:
  3604 ;;		_ecu_layer_intialize
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text19
  3609   001D2A                     __ptext19:
  3610                           	callstack 0
  3611   001D2A                     _lcd_8bit_intialize:
  3612                           	callstack 21
  3613   001D2A                     
  3614                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 278:     uint8 l_data_pins_counter = 0;
  3615   001D2A  0E00               	movlw	0
  3616   001D2C  6E27               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  3617   001D2E                     
  3618                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 279:     if(((void*)0) == lcd)
  3619   001D2E  5023               	movf	lcd_8bit_intialize@lcd^0,w,c
  3620   001D30  1024               	iorwf	(lcd_8bit_intialize@lcd+1)^0,w,c
  3621   001D32  A4D8               	btfss	status,2,c
  3622   001D34  EF9E  F00E         	goto	u6891
  3623   001D38  EFA0  F00E         	goto	u6890
  3624   001D3C                     u6891:
  3625   001D3C  EFA4  F00E         	goto	l7914
  3626   001D40                     u6890:
  3627   001D40                     
  3628                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 280:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 281:      
      +                             ret = (Std_ReturnType)0x00;
  3629   001D40  0E00               	movlw	0
  3630   001D42  6E28               	movwf	lcd_8bit_intialize@ret^0,c
  3631                           
  3632                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 282:     }
  3633   001D44  EF27  F00F         	goto	l7950
  3634   001D48                     l7914:
  3635                           
  3636                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 284:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 285:      
      +                             ret = gpio_pin_intialize(&(lcd->lcd_rs));
  3637   001D48  C023  F017         	movff	lcd_8bit_intialize@lcd,gpio_pin_intialize@_pin_config
  3638   001D4C  C024  F018         	movff	lcd_8bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  3639   001D50  ECA4  F014         	call	_gpio_pin_intialize	;wreg free
  3640   001D54  6E28               	movwf	lcd_8bit_intialize@ret^0,c
  3641                           
  3642                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 286:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  3643   001D56  0E01               	movlw	1
  3644   001D58  2423               	addwf	lcd_8bit_intialize@lcd^0,w,c
  3645   001D5A  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  3646   001D5C  0E00               	movlw	0
  3647   001D5E  2024               	addwfc	(lcd_8bit_intialize@lcd+1)^0,w,c
  3648   001D60  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  3649   001D62  ECA4  F014         	call	_gpio_pin_intialize	;wreg free
  3650   001D66  6E28               	movwf	lcd_8bit_intialize@ret^0,c
  3651   001D68                     
  3652                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 287:         for(l_data_pins_counter = 0; l_data_pins_
      +                          counter < 8; l_data_pins_counter++)
  3653   001D68  0E00               	movlw	0
  3654   001D6A  6E27               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  3655   001D6C                     l7922:
  3656   001D6C  5027               	movf	lcd_8bit_intialize@l_data_pins_counter^0,w,c
  3657   001D6E  2423               	addwf	lcd_8bit_intialize@lcd^0,w,c
  3658   001D70  6E25               	movwf	??_lcd_8bit_intialize^0,c
  3659   001D72  0E00               	movlw	0
  3660   001D74  2024               	addwfc	(lcd_8bit_intialize@lcd+1)^0,w,c
  3661   001D76  6E26               	movwf	(??_lcd_8bit_intialize+1)^0,c
  3662   001D78  0E02               	movlw	2
  3663   001D7A  2425               	addwf	??_lcd_8bit_intialize^0,w,c
  3664   001D7C  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  3665   001D7E  0E00               	movlw	0
  3666   001D80  2026               	addwfc	(??_lcd_8bit_intialize+1)^0,w,c
  3667   001D82  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  3668   001D84  ECA4  F014         	call	_gpio_pin_intialize	;wreg free
  3669   001D88                     
  3670                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 290:         }
  3671   001D88  2A27               	incf	lcd_8bit_intialize@l_data_pins_counter^0,f,c
  3672   001D8A  0E07               	movlw	7
  3673   001D8C  6427               	cpfsgt	lcd_8bit_intialize@l_data_pins_counter^0,c
  3674   001D8E  EFCB  F00E         	goto	u6901
  3675   001D92  EFCD  F00E         	goto	u6900
  3676   001D96                     u6901:
  3677   001D96  EFB6  F00E         	goto	l7922
  3678   001D9A                     u6900:
  3679   001D9A                     
  3680                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 291:         _delay((unsigned long)((20)*(8000000UL/40
      +                          00.0)));
  3681   001D9A  0E34               	movlw	52
  3682   001D9C  6E25               	movwf	??_lcd_8bit_intialize^0,c
  3683   001D9E  0EF2               	movlw	242
  3684   001DA0                     u7747:
  3685   001DA0  2EE8               	decfsz	wreg,f,c
  3686   001DA2  D7FE               	bra	u7747
  3687   001DA4  2E25               	decfsz	??_lcd_8bit_intialize^0,f,c
  3688   001DA6  D7FC               	bra	u7747
  3689   001DA8  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3690   001DAC  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3691   001DB0  0E38               	movlw	56
  3692   001DB2  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3693   001DB4  EC66  F013         	call	_lcd_8bit_send_command	;wreg free
  3694   001DB8                     
  3695                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 293:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0.0)));
  3696   001DB8  0E0D               	movlw	13
  3697   001DBA  6E25               	movwf	??_lcd_8bit_intialize^0,c
  3698   001DBC  0EFC               	movlw	252
  3699   001DBE                     u7757:
  3700   001DBE  2EE8               	decfsz	wreg,f,c
  3701   001DC0  D7FE               	bra	u7757
  3702   001DC2  2E25               	decfsz	??_lcd_8bit_intialize^0,f,c
  3703   001DC4  D7FC               	bra	u7757
  3704   001DC6  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3705   001DCA  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3706   001DCE  0E38               	movlw	56
  3707   001DD0  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3708   001DD2  EC66  F013         	call	_lcd_8bit_send_command	;wreg free
  3709   001DD6                     
  3710                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 295:         _delay((unsigned long)((150)*(8000000UL/4
      +                          000000.0)));
  3711   001DD6  0E64               	movlw	100
  3712   001DD8                     u7767:
  3713   001DD8  2EE8               	decfsz	wreg,f,c
  3714   001DDA  D7FE               	bra	u7767
  3715   001DDC  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3716   001DE0  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3717   001DE4  0E38               	movlw	56
  3718   001DE6  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3719   001DE8  EC66  F013         	call	_lcd_8bit_send_command	;wreg free
  3720   001DEC  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3721   001DF0  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3722   001DF4  0E01               	movlw	1
  3723   001DF6  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3724   001DF8  EC66  F013         	call	_lcd_8bit_send_command	;wreg free
  3725   001DFC  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3726   001E00  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3727   001E04  0E02               	movlw	2
  3728   001E06  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3729   001E08  EC66  F013         	call	_lcd_8bit_send_command	;wreg free
  3730   001E0C  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3731   001E10  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3732   001E14  0E06               	movlw	6
  3733   001E16  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3734   001E18  EC66  F013         	call	_lcd_8bit_send_command	;wreg free
  3735   001E1C  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3736   001E20  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3737   001E24  0E0C               	movlw	12
  3738   001E26  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3739   001E28  EC66  F013         	call	_lcd_8bit_send_command	;wreg free
  3740   001E2C  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3741   001E30  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3742   001E34  0E38               	movlw	56
  3743   001E36  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3744   001E38  EC66  F013         	call	_lcd_8bit_send_command	;wreg free
  3745   001E3C                     
  3746                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 303:         ret = lcd_8bit_send_command(lcd, 0x80);
  3747   001E3C  C023  F01A         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  3748   001E40  C024  F01B         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  3749   001E44  0E80               	movlw	128
  3750   001E46  6E1C               	movwf	lcd_8bit_send_command@command^0,c
  3751   001E48  EC66  F013         	call	_lcd_8bit_send_command	;wreg free
  3752   001E4C  6E28               	movwf	lcd_8bit_intialize@ret^0,c
  3753   001E4E                     l7950:
  3754                           
  3755                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 305:     return ret;
  3756   001E4E  5028               	movf	lcd_8bit_intialize@ret^0,w,c
  3757   001E50  0012               	return		;funcret
  3758   001E52                     __end_of_lcd_8bit_intialize:
  3759                           	callstack 0
  3760                           
  3761 ;; *************** function _lcd_8bit_send_command *****************
  3762 ;; Defined at:
  3763 ;;		line 316 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  lcd             2   25[COMRAM] PTR const struct .
  3766 ;;		 -> lcd_2(10), 
  3767 ;;  command         1   27[COMRAM] unsigned char 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  l_pin_counte    1   33[COMRAM] unsigned char 
  3770 ;;  ret             1   32[COMRAM] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      unsigned char 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3780 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;Total ram usage:        9 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 6
  3787 ;; This function calls:
  3788 ;;		_gpio_pin_write_logic
  3789 ;;		_lcd_8bit_send_enable_signal
  3790 ;; This function is called by:
  3791 ;;		_lcd_8bit_intialize
  3792 ;;		_lcd_8bit_send_custom_char
  3793 ;;		_lcd_8bit_set_cursor
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text20
  3798   0026CC                     __ptext20:
  3799                           	callstack 0
  3800   0026CC                     _lcd_8bit_send_command:
  3801                           	callstack 21
  3802   0026CC                     
  3803                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 319:     uint8 l_pin_counter = 0;
  3804   0026CC  0E00               	movlw	0
  3805   0026CE  6E22               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  3806   0026D0                     
  3807                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 320:     if(((void*)0) == lcd)
  3808   0026D0  501A               	movf	lcd_8bit_send_command@lcd^0,w,c
  3809   0026D2  101B               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  3810   0026D4  A4D8               	btfss	status,2,c
  3811   0026D6  EF6F  F013         	goto	u6811
  3812   0026DA  EF71  F013         	goto	u6810
  3813   0026DE                     u6811:
  3814   0026DE  EF75  F013         	goto	l7812
  3815   0026E2                     u6810:
  3816   0026E2                     
  3817                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 321:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 322:      
      +                             ret = (Std_ReturnType)0x00;
  3818   0026E2  0E00               	movlw	0
  3819   0026E4  6E21               	movwf	lcd_8bit_send_command@ret^0,c
  3820                           
  3821                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 323:     }
  3822   0026E6  EFAC  F013         	goto	l7828
  3823   0026EA                     l7812:
  3824   0026EA  C01A  F00D         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  3825   0026EE  C01B  F00E         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  3826   0026F2  0E00               	movlw	0
  3827   0026F4  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  3828   0026F6  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  3829   0026FA                     
  3830                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 328:         for(l_pin_counter = 0; l_pin_counter < 8;
      +                           ++l_pin_counter)
  3831   0026FA  0E00               	movlw	0
  3832   0026FC  6E22               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  3833   0026FE                     l7820:
  3834   0026FE  5022               	movf	lcd_8bit_send_command@l_pin_counter^0,w,c
  3835   002700  241A               	addwf	lcd_8bit_send_command@lcd^0,w,c
  3836   002702  6E1D               	movwf	??_lcd_8bit_send_command^0,c
  3837   002704  0E00               	movlw	0
  3838   002706  201B               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  3839   002708  6E1E               	movwf	(??_lcd_8bit_send_command+1)^0,c
  3840   00270A  0E02               	movlw	2
  3841   00270C  241D               	addwf	??_lcd_8bit_send_command^0,w,c
  3842   00270E  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3843   002710  0E00               	movlw	0
  3844   002712  201E               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  3845   002714  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3846   002716  C022  F01F         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command+2
  3847   00271A  C01C  F020         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  3848   00271E  2A1F               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  3849   002720  EF94  F013         	goto	u6824
  3850   002724                     u6825:
  3851   002724  90D8               	bcf	status,0,c
  3852   002726  3220               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  3853   002728                     u6824:
  3854   002728  2E1F               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  3855   00272A  EF92  F013         	goto	u6825
  3856   00272E  5020               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  3857   002730  0B01               	andlw	1
  3858   002732  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  3859   002734  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  3860   002738                     
  3861                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 331:         }
  3862   002738  2A22               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  3863   00273A  0E07               	movlw	7
  3864   00273C  6422               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  3865   00273E  EFA3  F013         	goto	u6831
  3866   002742  EFA5  F013         	goto	u6830
  3867   002746                     u6831:
  3868   002746  EF7F  F013         	goto	l7820
  3869   00274A                     u6830:
  3870   00274A                     
  3871                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 332:         ret = lcd_8bit_send_enable_signal(lcd);
  3872   00274A  C01A  F017         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  3873   00274E  C01B  F018         	movff	lcd_8bit_send_command@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  3874   002752  EC21  F016         	call	_lcd_8bit_send_enable_signal	;wreg free
  3875   002756  6E21               	movwf	lcd_8bit_send_command@ret^0,c
  3876   002758                     l7828:
  3877                           
  3878                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 334:     return ret;
  3879   002758  5021               	movf	lcd_8bit_send_command@ret^0,w,c
  3880   00275A  0012               	return		;funcret
  3881   00275C                     __end_of_lcd_8bit_send_command:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _lcd_8bit_send_enable_signal *****************
  3885 ;; Defined at:
  3886 ;;		line 590 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  lcd             2   22[COMRAM] PTR const struct .
  3889 ;;		 -> lcd_2(10), 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  ret             1   24[COMRAM] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      unsigned char 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;Total ram usage:        3 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 5
  3908 ;; This function calls:
  3909 ;;		_gpio_pin_write_logic
  3910 ;; This function is called by:
  3911 ;;		_lcd_8bit_send_command
  3912 ;;		_lcd_8bit_send_char_data
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text21
  3917   002C42                     __ptext21:
  3918                           	callstack 0
  3919   002C42                     _lcd_8bit_send_enable_signal:
  3920                           	callstack 21
  3921   002C42  0E01               	movlw	1
  3922   002C44  2417               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3923   002C46  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3924   002C48  0E00               	movlw	0
  3925   002C4A  2018               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  3926   002C4C  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3927   002C4E  0E01               	movlw	1
  3928   002C50  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  3929   002C52  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  3930   002C56                     
  3931                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 594:     _delay((unsigned long)((5)*(8000000UL/4000000
      +                          .0)));
  3932   002C56  0E03               	movlw	3
  3933   002C58                     u7777:
  3934   002C58  2EE8               	decfsz	wreg,f,c
  3935   002C5A  D7FE               	bra	u7777
  3936   002C5C  F000               	nop	
  3937   002C5E                     
  3938                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 595:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  3939   002C5E  0E01               	movlw	1
  3940   002C60  2417               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3941   002C62  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3942   002C64  0E00               	movlw	0
  3943   002C66  2018               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  3944   002C68  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3945   002C6A  0E00               	movlw	0
  3946   002C6C  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  3947   002C6E  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  3948   002C72  6E19               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  3949   002C74                     
  3950                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 596:     return ret;
  3951   002C74  5019               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  3952   002C76  0012               	return		;funcret
  3953   002C78                     __end_of_lcd_8bit_send_enable_signal:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _lcd_4bit_intialize *****************
  3957 ;; Defined at:
  3958 ;;		line 73 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  lcd             2   30[COMRAM] PTR const struct .
  3961 ;;		 -> lcd_1(6), 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  ret             1   35[COMRAM] unsigned char 
  3964 ;;  l_data_pins_    1   34[COMRAM] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      unsigned char 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;Total ram usage:        6 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; Hardware stack levels required when called: 7
  3981 ;; This function calls:
  3982 ;;		_gpio_pin_intialize
  3983 ;;		_lcd_4bit_send_command
  3984 ;; This function is called by:
  3985 ;;		_ecu_layer_intialize
  3986 ;;		_main
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text22
  3991   001E52                     __ptext22:
  3992                           	callstack 0
  3993   001E52                     _lcd_4bit_intialize:
  3994                           	callstack 23
  3995   001E52                     
  3996                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 76:     uint8 l_data_pins_counter = 0;
  3997   001E52  0E00               	movlw	0
  3998   001E54  6E23               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  3999   001E56                     
  4000                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 77:     if(((void*)0) == lcd)
  4001   001E56  501F               	movf	lcd_4bit_intialize@lcd^0,w,c
  4002   001E58  1020               	iorwf	(lcd_4bit_intialize@lcd+1)^0,w,c
  4003   001E5A  A4D8               	btfss	status,2,c
  4004   001E5C  EF32  F00F         	goto	u6871
  4005   001E60  EF34  F00F         	goto	u6870
  4006   001E64                     u6871:
  4007   001E64  EF38  F00F         	goto	l7868
  4008   001E68                     u6870:
  4009   001E68                     
  4010                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 78:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 79:        
      +                           ret = (Std_ReturnType)0x00;
  4011   001E68  0E00               	movlw	0
  4012   001E6A  6E24               	movwf	lcd_4bit_intialize@ret^0,c
  4013                           
  4014                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 80:     }
  4015   001E6C  EFBB  F00F         	goto	l7904
  4016   001E70                     l7868:
  4017                           
  4018                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 82:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 83:        
      +                           ret = gpio_pin_intialize(&(lcd->lcd_rs));
  4019   001E70  C01F  F017         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  4020   001E74  C020  F018         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  4021   001E78  ECA4  F014         	call	_gpio_pin_intialize	;wreg free
  4022   001E7C  6E24               	movwf	lcd_4bit_intialize@ret^0,c
  4023                           
  4024                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 84:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  4025   001E7E  0E01               	movlw	1
  4026   001E80  241F               	addwf	lcd_4bit_intialize@lcd^0,w,c
  4027   001E82  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  4028   001E84  0E00               	movlw	0
  4029   001E86  2020               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  4030   001E88  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4031   001E8A  ECA4  F014         	call	_gpio_pin_intialize	;wreg free
  4032   001E8E  6E24               	movwf	lcd_4bit_intialize@ret^0,c
  4033   001E90                     
  4034                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 85:         for(l_data_pins_counter = 0; l_data_pins_c
      +                          ounter < 4; l_data_pins_counter++)
  4035   001E90  0E00               	movlw	0
  4036   001E92  6E23               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  4037   001E94                     l7876:
  4038   001E94  5023               	movf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  4039   001E96  241F               	addwf	lcd_4bit_intialize@lcd^0,w,c
  4040   001E98  6E21               	movwf	??_lcd_4bit_intialize^0,c
  4041   001E9A  0E00               	movlw	0
  4042   001E9C  2020               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  4043   001E9E  6E22               	movwf	(??_lcd_4bit_intialize+1)^0,c
  4044   001EA0  0E02               	movlw	2
  4045   001EA2  2421               	addwf	??_lcd_4bit_intialize^0,w,c
  4046   001EA4  6E17               	movwf	gpio_pin_intialize@_pin_config^0,c
  4047   001EA6  0E00               	movlw	0
  4048   001EA8  2022               	addwfc	(??_lcd_4bit_intialize+1)^0,w,c
  4049   001EAA  6E18               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4050   001EAC  ECA4  F014         	call	_gpio_pin_intialize	;wreg free
  4051   001EB0                     
  4052                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 88:         }
  4053   001EB0  2A23               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  4054   001EB2  0E03               	movlw	3
  4055   001EB4  6423               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  4056   001EB6  EF5F  F00F         	goto	u6881
  4057   001EBA  EF61  F00F         	goto	u6880
  4058   001EBE                     u6881:
  4059   001EBE  EF4A  F00F         	goto	l7876
  4060   001EC2                     u6880:
  4061   001EC2                     
  4062                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 89:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  4063   001EC2  0E34               	movlw	52
  4064   001EC4  6E21               	movwf	??_lcd_4bit_intialize^0,c
  4065   001EC6  0EF2               	movlw	242
  4066   001EC8                     u7787:
  4067   001EC8  2EE8               	decfsz	wreg,f,c
  4068   001ECA  D7FE               	bra	u7787
  4069   001ECC  2E21               	decfsz	??_lcd_4bit_intialize^0,f,c
  4070   001ECE  D7FC               	bra	u7787
  4071   001ED0  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4072   001ED4  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4073   001ED8  0E38               	movlw	56
  4074   001EDA  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  4075   001EDC  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  4076   001EE0                     
  4077                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  4078   001EE0  0E0D               	movlw	13
  4079   001EE2  6E21               	movwf	??_lcd_4bit_intialize^0,c
  4080   001EE4  0EFC               	movlw	252
  4081   001EE6                     u7797:
  4082   001EE6  2EE8               	decfsz	wreg,f,c
  4083   001EE8  D7FE               	bra	u7797
  4084   001EEA  2E21               	decfsz	??_lcd_4bit_intialize^0,f,c
  4085   001EEC  D7FC               	bra	u7797
  4086   001EEE  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4087   001EF2  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4088   001EF6  0E38               	movlw	56
  4089   001EF8  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  4090   001EFA  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  4091   001EFE                     
  4092                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 93:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
  4093   001EFE  0E64               	movlw	100
  4094   001F00                     u7807:
  4095   001F00  2EE8               	decfsz	wreg,f,c
  4096   001F02  D7FE               	bra	u7807
  4097   001F04  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4098   001F08  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4099   001F0C  0E38               	movlw	56
  4100   001F0E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  4101   001F10  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  4102   001F14  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4103   001F18  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4104   001F1C  0E01               	movlw	1
  4105   001F1E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  4106   001F20  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  4107   001F24  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4108   001F28  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4109   001F2C  0E02               	movlw	2
  4110   001F2E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  4111   001F30  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  4112   001F34  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4113   001F38  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4114   001F3C  0E06               	movlw	6
  4115   001F3E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  4116   001F40  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  4117   001F44  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4118   001F48  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4119   001F4C  0E0C               	movlw	12
  4120   001F4E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  4121   001F50  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  4122   001F54  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4123   001F58  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4124   001F5C  0E28               	movlw	40
  4125   001F5E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  4126   001F60  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  4127   001F64                     
  4128                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 101:         ret = lcd_4bit_send_command(lcd, 0x80);
  4129   001F64  C01F  F01B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  4130   001F68  C020  F01C         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  4131   001F6C  0E80               	movlw	128
  4132   001F6E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  4133   001F70  EC6B  F014         	call	_lcd_4bit_send_command	;wreg free
  4134   001F74  6E24               	movwf	lcd_4bit_intialize@ret^0,c
  4135   001F76                     l7904:
  4136                           
  4137                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 103:     return ret;
  4138   001F76  5024               	movf	lcd_4bit_intialize@ret^0,w,c
  4139   001F78  0012               	return		;funcret
  4140   001F7A                     __end_of_lcd_4bit_intialize:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _lcd_4bit_send_command *****************
  4144 ;; Defined at:
  4145 ;;		line 114 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  lcd             2   26[COMRAM] PTR const struct .
  4148 ;;		 -> lcd_1(6), 
  4149 ;;  command         1   28[COMRAM] unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  ret             1   29[COMRAM] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      unsigned char 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4161 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;Total ram usage:        4 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 6
  4168 ;; This function calls:
  4169 ;;		_gpio_pin_write_logic
  4170 ;;		_lcd_4bit_send_enable_signal
  4171 ;;		_lcd_send_4bits
  4172 ;; This function is called by:
  4173 ;;		_lcd_4bit_intialize
  4174 ;;		_lcd_4bit_set_cursor
  4175 ;;		_main
  4176 ;;		_lcd_4bit_send_custom_char
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           	psect	text23
  4181   0028D6                     __ptext23:
  4182                           	callstack 0
  4183   0028D6                     _lcd_4bit_send_command:
  4184                           	callstack 22
  4185   0028D6                     
  4186                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 117:     if(((void*)0) == lcd)
  4187   0028D6  501B               	movf	lcd_4bit_send_command@lcd^0,w,c
  4188   0028D8  101C               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  4189   0028DA  A4D8               	btfss	status,2,c
  4190   0028DC  EF72  F014         	goto	u6801
  4191   0028E0  EF74  F014         	goto	u6800
  4192   0028E4                     u6801:
  4193   0028E4  EF78  F014         	goto	l7800
  4194   0028E8                     u6800:
  4195   0028E8                     
  4196                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 118:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 119:      
      +                             ret = (Std_ReturnType)0x00;
  4197   0028E8  0E00               	movlw	0
  4198   0028EA  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  4199                           
  4200                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 120:     }
  4201   0028EC  EFA2  F014         	goto	l7802
  4202   0028F0                     l7800:
  4203                           
  4204                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 122:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 123:      
      +                             ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  4205   0028F0  C01B  F00D         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  4206   0028F4  C01C  F00E         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  4207   0028F8  0E00               	movlw	0
  4208   0028FA  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4209   0028FC  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  4210   002900  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  4211                           
  4212                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 124:         ret = lcd_send_4bits(lcd, command >> 4);
  4213   002902  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4214   002906  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4215   00290A  381D               	swapf	lcd_4bit_send_command@command^0,w,c
  4216   00290C  0B0F               	andlw	15
  4217   00290E  6E19               	movwf	lcd_send_4bits@_data_command^0,c
  4218   002910  ECDA  F014         	call	_lcd_send_4bits	;wreg free
  4219   002914  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  4220                           
  4221                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 125:         ret = lcd_4bit_send_enable_signal(lcd);
  4222   002916  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4223   00291A  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4224   00291E  EC3C  F016         	call	_lcd_4bit_send_enable_signal	;wreg free
  4225   002922  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  4226                           
  4227                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 126:         ret = lcd_send_4bits(lcd, command);
  4228   002924  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4229   002928  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4230   00292C  C01D  F019         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  4231   002930  ECDA  F014         	call	_lcd_send_4bits	;wreg free
  4232   002934  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  4233                           
  4234                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 127:         ret = lcd_4bit_send_enable_signal(lcd);
  4235   002936  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4236   00293A  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4237   00293E  EC3C  F016         	call	_lcd_4bit_send_enable_signal	;wreg free
  4238   002942  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  4239   002944                     l7802:
  4240                           
  4241                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:     return ret;
  4242   002944  501E               	movf	lcd_4bit_send_command@ret^0,w,c
  4243   002946  0012               	return		;funcret
  4244   002948                     __end_of_lcd_4bit_send_command:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _lcd_send_4bits *****************
  4248 ;; Defined at:
  4249 ;;		line 557 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  lcd             2   22[COMRAM] PTR const struct .
  4252 ;;		 -> lcd_1(6), 
  4253 ;;  _data_comman    1   24[COMRAM] unsigned char 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  ret             1   25[COMRAM] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      unsigned char 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4265 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;Total ram usage:        4 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 5
  4272 ;; This function calls:
  4273 ;;		_gpio_pin_write_logic
  4274 ;; This function is called by:
  4275 ;;		_lcd_4bit_send_command
  4276 ;;		_lcd_4bit_send_char_data
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text24
  4281   0029B4                     __ptext24:
  4282                           	callstack 0
  4283   0029B4                     _lcd_send_4bits:
  4284                           	callstack 22
  4285   0029B4  0E02               	movlw	2
  4286   0029B6  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  4287   0029B8  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4288   0029BA  0E00               	movlw	0
  4289   0029BC  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4290   0029BE  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4291   0029C0  5019               	movf	lcd_send_4bits@_data_command^0,w,c
  4292   0029C2  0B01               	andlw	1
  4293   0029C4  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4294   0029C6  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  4295   0029CA  0E03               	movlw	3
  4296   0029CC  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  4297   0029CE  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4298   0029D0  0E00               	movlw	0
  4299   0029D2  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4300   0029D4  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4301   0029D6  90D8               	bcf	status,0,c
  4302   0029D8  3019               	rrcf	lcd_send_4bits@_data_command^0,w,c
  4303   0029DA  0B01               	andlw	1
  4304   0029DC  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4305   0029DE  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  4306   0029E2  0E04               	movlw	4
  4307   0029E4  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  4308   0029E6  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4309   0029E8  0E00               	movlw	0
  4310   0029EA  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4311   0029EC  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4312   0029EE  4019               	rrncf	lcd_send_4bits@_data_command^0,w,c
  4313   0029F0  42E8               	rrncf	wreg,f,c
  4314   0029F2  0B3F               	andlw	63
  4315   0029F4  0B01               	andlw	1
  4316   0029F6  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4317   0029F8  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  4318   0029FC                     
  4319                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 563:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  4320   0029FC  0E05               	movlw	5
  4321   0029FE  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  4322   002A00  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4323   002A02  0E00               	movlw	0
  4324   002A04  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4325   002A06  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4326   002A08  3819               	swapf	lcd_send_4bits@_data_command^0,w,c
  4327   002A0A  46E8               	rlncf	wreg,f,c
  4328   002A0C  0B1F               	andlw	31
  4329   002A0E  0B01               	andlw	1
  4330   002A10  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4331   002A12  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  4332   002A16  6E1A               	movwf	lcd_send_4bits@ret^0,c
  4333                           
  4334                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 564:     return ret;
  4335   002A18  501A               	movf	lcd_send_4bits@ret^0,w,c
  4336   002A1A  0012               	return		;funcret
  4337   002A1C                     __end_of_lcd_send_4bits:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function _lcd_4bit_send_enable_signal *****************
  4341 ;; Defined at:
  4342 ;;		line 574 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  lcd             2   22[COMRAM] PTR const struct .
  4345 ;;		 -> lcd_1(6), 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  ret             1   24[COMRAM] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      unsigned char 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;Total ram usage:        3 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 5
  4364 ;; This function calls:
  4365 ;;		_gpio_pin_write_logic
  4366 ;; This function is called by:
  4367 ;;		_lcd_4bit_send_command
  4368 ;;		_lcd_4bit_send_char_data
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text25
  4373   002C78                     __ptext25:
  4374                           	callstack 0
  4375   002C78                     _lcd_4bit_send_enable_signal:
  4376                           	callstack 22
  4377   002C78  0E01               	movlw	1
  4378   002C7A  2417               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4379   002C7C  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4380   002C7E  0E00               	movlw	0
  4381   002C80  2018               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4382   002C82  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4383   002C84  0E01               	movlw	1
  4384   002C86  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4385   002C88  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  4386   002C8C                     
  4387                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 578:     _delay((unsigned long)((5)*(8000000UL/4000000
      +                          .0)));
  4388   002C8C  0E03               	movlw	3
  4389   002C8E                     u7817:
  4390   002C8E  2EE8               	decfsz	wreg,f,c
  4391   002C90  D7FE               	bra	u7817
  4392   002C92  F000               	nop	
  4393   002C94                     
  4394                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 579:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  4395   002C94  0E01               	movlw	1
  4396   002C96  2417               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4397   002C98  6E0D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4398   002C9A  0E00               	movlw	0
  4399   002C9C  2018               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4400   002C9E  6E0E               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4401   002CA0  0E00               	movlw	0
  4402   002CA2  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4403   002CA4  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  4404   002CA8  6E19               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4405   002CAA                     
  4406                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 580:     return ret;
  4407   002CAA  5019               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  4408   002CAC  0012               	return		;funcret
  4409   002CAE                     __end_of_lcd_4bit_send_enable_signal:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _gpio_pin_intialize *****************
  4413 ;; Defined at:
  4414 ;;		line 167 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  _pin_config     2   22[COMRAM] PTR const struct .
  4417 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd_1.lcd_data(4), lcd_1(6), 
  4418 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  ret             1   25[COMRAM] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      unsigned char 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;Total ram usage:        4 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; Hardware stack levels required when called: 5
  4437 ;; This function calls:
  4438 ;;		_gpio_pin_direction_intialize
  4439 ;;		_gpio_pin_write_logic
  4440 ;; This function is called by:
  4441 ;;		_lcd_4bit_intialize
  4442 ;;		_lcd_8bit_intialize
  4443 ;;		_seven_segment_initialize
  4444 ;;		_dc_motor_initialize
  4445 ;;		_keypad_initialize
  4446 ;;		_led_initialize
  4447 ;;		_relay_initialize
  4448 ;;		_CCP_Init
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text26
  4453   002948                     __ptext26:
  4454                           	callstack 0
  4455   002948                     _gpio_pin_intialize:
  4456                           	callstack 24
  4457   002948                     
  4458                           ;MCAL_Layer/GPIO/hal_gpio.c: 170:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1)
  4459   002948  5017               	movf	gpio_pin_intialize@_pin_config^0,w,c
  4460   00294A  1018               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  4461   00294C  B4D8               	btfsc	status,2,c
  4462   00294E  EFAB  F014         	goto	u6781
  4463   002952  EFAD  F014         	goto	u6780
  4464   002956                     u6781:
  4465   002956  EFBE  F014         	goto	l7786
  4466   00295A                     u6780:
  4467   00295A  C017  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4468   00295E  C018  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4469   002962  30DF               	rrcf	223,w,c
  4470   002964  32E8               	rrcf	wreg,f,c
  4471   002966  32E8               	rrcf	wreg,f,c
  4472   002968  0B07               	andlw	7
  4473   00296A  6E19               	movwf	??_gpio_pin_intialize^0,c
  4474   00296C  0E07               	movlw	7
  4475   00296E  6419               	cpfsgt	??_gpio_pin_intialize^0,c
  4476   002970  EFBC  F014         	goto	u6791
  4477   002974  EFBE  F014         	goto	u6790
  4478   002978                     u6791:
  4479   002978  EFC2  F014         	goto	l7788
  4480   00297C                     u6790:
  4481   00297C                     l7786:
  4482                           
  4483                           ;MCAL_Layer/GPIO/hal_gpio.c: 171:     {;MCAL_Layer/GPIO/hal_gpio.c: 172:         ret = (
      +                          Std_ReturnType)0x00;
  4484   00297C  0E00               	movlw	0
  4485   00297E  6E1A               	movwf	gpio_pin_intialize@ret^0,c
  4486                           
  4487                           ;MCAL_Layer/GPIO/hal_gpio.c: 173:     }
  4488   002980  EFD8  F014         	goto	l7790
  4489   002984                     l7788:
  4490                           
  4491                           ;MCAL_Layer/GPIO/hal_gpio.c: 175:     {;MCAL_Layer/GPIO/hal_gpio.c: 176:         ret = g
      +                          pio_pin_direction_intialize(_pin_config);
  4492   002984  C017  F00D         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  4493   002988  C018  F00E         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  4494   00298C  ECC7  F00C         	call	_gpio_pin_direction_intialize	;wreg free
  4495   002990  6E1A               	movwf	gpio_pin_intialize@ret^0,c
  4496                           
  4497                           ;MCAL_Layer/GPIO/hal_gpio.c: 177:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  4498   002992  C017  F00D         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  4499   002996  C018  F00E         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  4500   00299A  C017  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4501   00299E  C018  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4502   0029A2  0E00               	movlw	0
  4503   0029A4  BEDF               	btfsc	indf2,7,c
  4504   0029A6  0E01               	movlw	1
  4505   0029A8  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4506   0029AA  ECFF  F00D         	call	_gpio_pin_write_logic	;wreg free
  4507   0029AE  6E1A               	movwf	gpio_pin_intialize@ret^0,c
  4508   0029B0                     l7790:
  4509                           
  4510                           ;MCAL_Layer/GPIO/hal_gpio.c: 179:     return ret;
  4511   0029B0  501A               	movf	gpio_pin_intialize@ret^0,w,c
  4512   0029B2  0012               	return		;funcret
  4513   0029B4                     __end_of_gpio_pin_intialize:
  4514                           	callstack 0
  4515                           
  4516 ;; *************** function _gpio_pin_write_logic *****************
  4517 ;; Defined at:
  4518 ;;		line 88 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  4521 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd_1.lcd_data(4), lcd_1(6), 
  4522 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  4523 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  4524 ;;  logic           1   14[COMRAM] enum E2968
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  ret             1   21[COMRAM] unsigned char 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      unsigned char 
  4529 ;; Registers used:
  4530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4536 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;Total ram usage:       10 bytes
  4541 ;; Hardware stack levels used: 1
  4542 ;; Hardware stack levels required when called: 4
  4543 ;; This function calls:
  4544 ;;		Nothing
  4545 ;; This function is called by:
  4546 ;;		_lcd_4bit_send_command
  4547 ;;		_lcd_4bit_send_char_data
  4548 ;;		_lcd_8bit_send_command
  4549 ;;		_lcd_send_4bits
  4550 ;;		_lcd_4bit_send_enable_signal
  4551 ;;		_lcd_8bit_send_enable_signal
  4552 ;;		_gpio_pin_intialize
  4553 ;;		_seven_segment_write_number
  4554 ;;		_lcd_8bit_send_char_data
  4555 ;;		_dc_motor_move_right
  4556 ;;		_dc_motor_move_left
  4557 ;;		_dc_motor_stop
  4558 ;;		_keypad_get_value
  4559 ;;		_led_turn_on
  4560 ;;		_led_turn_off
  4561 ;;		_relay_turn_on
  4562 ;;		_relay_turn_off
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           	psect	text27
  4567   001BFE                     __ptext27:
  4568                           	callstack 0
  4569   001BFE                     _gpio_pin_write_logic:
  4570                           	callstack 22
  4571   001BFE                     
  4572                           ;MCAL_Layer/GPIO/hal_gpio.c: 88: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          *_pin_config, logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 89: {;MCAL_Layer/GPIO/hal_gpio.
      +                          c: 90:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4573   001BFE  0E01               	movlw	1
  4574   001C00  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  4575   001C02                     
  4576                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
  4577   001C02  500D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4578   001C04  100E               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  4579   001C06  B4D8               	btfsc	status,2,c
  4580   001C08  EF08  F00E         	goto	u6431
  4581   001C0C  EF0A  F00E         	goto	u6430
  4582   001C10                     u6431:
  4583   001C10  EF1B  F00E         	goto	l7554
  4584   001C14                     u6430:
  4585   001C14  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4586   001C18  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4587   001C1C  30DF               	rrcf	223,w,c
  4588   001C1E  32E8               	rrcf	wreg,f,c
  4589   001C20  32E8               	rrcf	wreg,f,c
  4590   001C22  0B07               	andlw	7
  4591   001C24  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4592   001C26  0E07               	movlw	7
  4593   001C28  6410               	cpfsgt	??_gpio_pin_write_logic^0,c
  4594   001C2A  EF19  F00E         	goto	u6441
  4595   001C2E  EF1B  F00E         	goto	u6440
  4596   001C32                     u6441:
  4597   001C32  EF7E  F00E         	goto	l7562
  4598   001C36                     u6440:
  4599   001C36                     l7554:
  4600                           
  4601                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:     {;MCAL_Layer/GPIO/hal_gpio.c: 93:         ret = (St
      +                          d_ReturnType)0x00;
  4602   001C36  0E00               	movlw	0
  4603   001C38  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  4604                           
  4605                           ;MCAL_Layer/GPIO/hal_gpio.c: 94:     }
  4606   001C3A  EF93  F00E         	goto	l7564
  4607   001C3E                     l7556:
  4608                           
  4609                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  4610   001C3E  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4611   001C42  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4612   001C46  30DF               	rrcf	223,w,c
  4613   001C48  32E8               	rrcf	wreg,f,c
  4614   001C4A  32E8               	rrcf	wreg,f,c
  4615   001C4C  0B07               	andlw	7
  4616   001C4E  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4617   001C50  0E01               	movlw	1
  4618   001C52  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4619   001C54  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  4620   001C56  EF2F  F00E         	goto	u6454
  4621   001C5A                     u6455:
  4622   001C5A  90D8               	bcf	status,0,c
  4623   001C5C  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4624   001C5E                     u6454:
  4625   001C5E  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  4626   001C60  EF2D  F00E         	goto	u6455
  4627   001C64  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4628   001C66  0AFF               	xorlw	255
  4629   001C68  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4630   001C6A  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4631   001C6E  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4632   001C72  50DF               	movf	223,w,c
  4633   001C74  0B07               	andlw	7
  4634   001C76  6E13               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4635   001C78  5013               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4636   001C7A  0D02               	mullw	2
  4637   001C7C  0EDE               	movlw	low _lat_registers
  4638   001C7E  24F3               	addwf	243,w,c
  4639   001C80  6ED9               	movwf	fsr2l,c
  4640   001C82  0E00               	movlw	high _lat_registers
  4641   001C84  20F4               	addwfc	prodh,w,c
  4642   001C86  6EDA               	movwf	fsr2h,c
  4643   001C88  CFDE F014          	movff	postinc2,??_gpio_pin_write_logic+4
  4644   001C8C  CFDD F015          	movff	postdec2,??_gpio_pin_write_logic+5
  4645   001C90  C014  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4646   001C94  C015  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4647   001C98  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4648   001C9A  16DF               	andwf	indf2,f,c
  4649                           
  4650                           ;MCAL_Layer/GPIO/hal_gpio.c: 101:                 break;
  4651   001C9C  EF93  F00E         	goto	l7564
  4652   001CA0                     l7558:
  4653                           
  4654                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  4655   001CA0  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4656   001CA4  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4657   001CA8  30DF               	rrcf	223,w,c
  4658   001CAA  32E8               	rrcf	wreg,f,c
  4659   001CAC  32E8               	rrcf	wreg,f,c
  4660   001CAE  0B07               	andlw	7
  4661   001CB0  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4662   001CB2  0E01               	movlw	1
  4663   001CB4  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4664   001CB6  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  4665   001CB8  EF60  F00E         	goto	u6464
  4666   001CBC                     u6465:
  4667   001CBC  90D8               	bcf	status,0,c
  4668   001CBE  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4669   001CC0                     u6464:
  4670   001CC0  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  4671   001CC2  EF5E  F00E         	goto	u6465
  4672   001CC6  C00D  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4673   001CCA  C00E  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4674   001CCE  50DF               	movf	223,w,c
  4675   001CD0  0B07               	andlw	7
  4676   001CD2  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4677   001CD4  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4678   001CD6  0D02               	mullw	2
  4679   001CD8  0EDE               	movlw	low _lat_registers
  4680   001CDA  24F3               	addwf	243,w,c
  4681   001CDC  6ED9               	movwf	fsr2l,c
  4682   001CDE  0E00               	movlw	high _lat_registers
  4683   001CE0  20F4               	addwfc	prodh,w,c
  4684   001CE2  6EDA               	movwf	fsr2h,c
  4685   001CE4  CFDE F013          	movff	postinc2,??_gpio_pin_write_logic+3
  4686   001CE8  CFDD F014          	movff	postdec2,??_gpio_pin_write_logic+4
  4687   001CEC  C013  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4688   001CF0  C014  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4689   001CF4  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4690   001CF6  12DF               	iorwf	indf2,f,c
  4691                           
  4692                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:                 break;
  4693   001CF8  EF93  F00E         	goto	l7564
  4694   001CFC                     l7562:
  4695   001CFC  500F               	movf	gpio_pin_write_logic@logic^0,w,c
  4696   001CFE  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4697   001D00  6A11               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4698                           
  4699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4700                           ; Switch size 1, requested type "simple"
  4701                           ; Number of cases is 1, Range of values is 0 to 0
  4702                           ; switch strategies available:
  4703                           ; Name         Instructions Cycles
  4704                           ; simple_byte            4     3 (average)
  4705                           ;	Chosen strategy is simple_byte
  4706   001D02  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4707   001D04  0A00               	xorlw	0	; case 0
  4708   001D06  B4D8               	btfsc	status,2,c
  4709   001D08  EF88  F00E         	goto	l8886
  4710   001D0C  EF1B  F00E         	goto	l7554
  4711   001D10                     l8886:
  4712                           
  4713                           ; Switch size 1, requested type "simple"
  4714                           ; Number of cases is 2, Range of values is 0 to 1
  4715                           ; switch strategies available:
  4716                           ; Name         Instructions Cycles
  4717                           ; simple_byte            7     4 (average)
  4718                           ;	Chosen strategy is simple_byte
  4719   001D10  5010               	movf	??_gpio_pin_write_logic^0,w,c
  4720   001D12  0A00               	xorlw	0	; case 0
  4721   001D14  B4D8               	btfsc	status,2,c
  4722   001D16  EF1F  F00E         	goto	l7556
  4723   001D1A  0A01               	xorlw	1	; case 1
  4724   001D1C  B4D8               	btfsc	status,2,c
  4725   001D1E  EF50  F00E         	goto	l7558
  4726   001D22  EF1B  F00E         	goto	l7554
  4727   001D26                     l7564:
  4728                           
  4729                           ;MCAL_Layer/GPIO/hal_gpio.c: 108:     return ret;
  4730   001D26  5016               	movf	gpio_pin_write_logic@ret^0,w,c
  4731   001D28  0012               	return		;funcret
  4732   001D2A                     __end_of_gpio_pin_write_logic:
  4733                           	callstack 0
  4734                           
  4735 ;; *************** function _gpio_pin_direction_intialize *****************
  4736 ;; Defined at:
  4737 ;;		line 31 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  4740 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd_1.lcd_data(4), lcd_1(6), 
  4741 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  ret             1   20[COMRAM] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      unsigned char 
  4746 ;; Registers used:
  4747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;Total ram usage:        9 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 4
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_gpio_pin_intialize
  4764 ;;		_button_initialize
  4765 ;;		_keypad_initialize
  4766 ;;		_Interrupt_RBx_Init
  4767 ;;		_Interrupt_INTx_Pin_Init
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text28
  4772   00198E                     __ptext28:
  4773                           	callstack 0
  4774   00198E                     _gpio_pin_direction_intialize:
  4775                           	callstack 24
  4776   00198E                     
  4777                           ;MCAL_Layer/GPIO/hal_gpio.c: 31: Std_ReturnType gpio_pin_direction_intialize(const pin_c
      +                          onfig_t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 32: {;MCAL_Layer/GPIO/hal_gpio.c: 33: 
      +                              Std_ReturnType ret = (Std_ReturnType)0x01;
  4778   00198E  0E01               	movlw	1
  4779   001990  6E15               	movwf	gpio_pin_direction_intialize@ret^0,c
  4780   001992                     
  4781                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
  4782   001992  500D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  4783   001994  100E               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  4784   001996  B4D8               	btfsc	status,2,c
  4785   001998  EFD0  F00C         	goto	u6621
  4786   00199C  EFD2  F00C         	goto	u6620
  4787   0019A0                     u6621:
  4788   0019A0  EFE3  F00C         	goto	l7676
  4789   0019A4                     u6620:
  4790   0019A4  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4791   0019A8  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4792   0019AC  30DF               	rrcf	223,w,c
  4793   0019AE  32E8               	rrcf	wreg,f,c
  4794   0019B0  32E8               	rrcf	wreg,f,c
  4795   0019B2  0B07               	andlw	7
  4796   0019B4  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  4797   0019B6  0E07               	movlw	7
  4798   0019B8  640F               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  4799   0019BA  EFE1  F00C         	goto	u6631
  4800   0019BE  EFE3  F00C         	goto	u6630
  4801   0019C2                     u6631:
  4802   0019C2  EF46  F00D         	goto	l7684
  4803   0019C6                     u6630:
  4804   0019C6                     l7676:
  4805                           
  4806                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:     {;MCAL_Layer/GPIO/hal_gpio.c: 36:         ret = (St
      +                          d_ReturnType)0x00;
  4807   0019C6  0E00               	movlw	0
  4808   0019C8  6E15               	movwf	gpio_pin_direction_intialize@ret^0,c
  4809                           
  4810                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:     }
  4811   0019CA  EF67  F00D         	goto	l7686
  4812   0019CE                     l7678:
  4813                           
  4814                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  4815   0019CE  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4816   0019D2  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4817   0019D6  30DF               	rrcf	223,w,c
  4818   0019D8  32E8               	rrcf	wreg,f,c
  4819   0019DA  32E8               	rrcf	wreg,f,c
  4820   0019DC  0B07               	andlw	7
  4821   0019DE  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  4822   0019E0  0E01               	movlw	1
  4823   0019E2  6E10               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  4824   0019E4  2A0F               	incf	??_gpio_pin_direction_intialize^0,f,c
  4825   0019E6  EFF7  F00C         	goto	u6644
  4826   0019EA                     u6645:
  4827   0019EA  90D8               	bcf	status,0,c
  4828   0019EC  3610               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  4829   0019EE                     u6644:
  4830   0019EE  2E0F               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  4831   0019F0  EFF5  F00C         	goto	u6645
  4832   0019F4  5010               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4833   0019F6  0AFF               	xorlw	255
  4834   0019F8  6E11               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  4835   0019FA  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4836   0019FE  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4837   001A02  50DF               	movf	223,w,c
  4838   001A04  0B07               	andlw	7
  4839   001A06  6E12               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  4840   001A08  5012               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  4841   001A0A  0D02               	mullw	2
  4842   001A0C  0EE8               	movlw	low _tris_registers
  4843   001A0E  24F3               	addwf	243,w,c
  4844   001A10  6ED9               	movwf	fsr2l,c
  4845   001A12  0E00               	movlw	high _tris_registers
  4846   001A14  20F4               	addwfc	prodh,w,c
  4847   001A16  6EDA               	movwf	fsr2h,c
  4848   001A18  CFDE F013          	movff	postinc2,??_gpio_pin_direction_intialize+4
  4849   001A1C  CFDD F014          	movff	postdec2,??_gpio_pin_direction_intialize+5
  4850   001A20  C013  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  4851   001A24  C014  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  4852   001A28  5011               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  4853   001A2A  16DF               	andwf	indf2,f,c
  4854                           
  4855                           ;MCAL_Layer/GPIO/hal_gpio.c: 44:                 break;
  4856   001A2C  EF67  F00D         	goto	l7686
  4857   001A30                     l7680:
  4858                           
  4859                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  4860   001A30  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4861   001A34  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4862   001A38  30DF               	rrcf	223,w,c
  4863   001A3A  32E8               	rrcf	wreg,f,c
  4864   001A3C  32E8               	rrcf	wreg,f,c
  4865   001A3E  0B07               	andlw	7
  4866   001A40  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  4867   001A42  0E01               	movlw	1
  4868   001A44  6E10               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  4869   001A46  2A0F               	incf	??_gpio_pin_direction_intialize^0,f,c
  4870   001A48  EF28  F00D         	goto	u6654
  4871   001A4C                     u6655:
  4872   001A4C  90D8               	bcf	status,0,c
  4873   001A4E  3610               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  4874   001A50                     u6654:
  4875   001A50  2E0F               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  4876   001A52  EF26  F00D         	goto	u6655
  4877   001A56  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4878   001A5A  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4879   001A5E  50DF               	movf	223,w,c
  4880   001A60  0B07               	andlw	7
  4881   001A62  6E11               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  4882   001A64  5011               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  4883   001A66  0D02               	mullw	2
  4884   001A68  0EE8               	movlw	low _tris_registers
  4885   001A6A  24F3               	addwf	243,w,c
  4886   001A6C  6ED9               	movwf	fsr2l,c
  4887   001A6E  0E00               	movlw	high _tris_registers
  4888   001A70  20F4               	addwfc	prodh,w,c
  4889   001A72  6EDA               	movwf	fsr2h,c
  4890   001A74  CFDE F012          	movff	postinc2,??_gpio_pin_direction_intialize+3
  4891   001A78  CFDD F013          	movff	postdec2,??_gpio_pin_direction_intialize+4
  4892   001A7C  C012  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  4893   001A80  C013  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  4894   001A84  5010               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4895   001A86  12DF               	iorwf	indf2,f,c
  4896                           
  4897                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:                 break;
  4898   001A88  EF67  F00D         	goto	l7686
  4899   001A8C                     l7684:
  4900   001A8C  C00D  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4901   001A90  C00E  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4902   001A94  BCDF               	btfsc	indf2,6,c
  4903   001A96  EF4F  F00D         	goto	u6661
  4904   001A9A  EF52  F00D         	goto	u6660
  4905   001A9E                     u6661:
  4906   001A9E  0E01               	movlw	1
  4907   001AA0  EF53  F00D         	goto	u6670
  4908   001AA4                     u6660:
  4909   001AA4  0E00               	movlw	0
  4910   001AA6                     u6670:
  4911   001AA6  6E0F               	movwf	??_gpio_pin_direction_intialize^0,c
  4912   001AA8  6A10               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  4913                           
  4914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4915                           ; Switch size 1, requested type "simple"
  4916                           ; Number of cases is 1, Range of values is 0 to 0
  4917                           ; switch strategies available:
  4918                           ; Name         Instructions Cycles
  4919                           ; simple_byte            4     3 (average)
  4920                           ;	Chosen strategy is simple_byte
  4921   001AAA  5010               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4922   001AAC  0A00               	xorlw	0	; case 0
  4923   001AAE  B4D8               	btfsc	status,2,c
  4924   001AB0  EF5C  F00D         	goto	l8888
  4925   001AB4  EFE3  F00C         	goto	l7676
  4926   001AB8                     l8888:
  4927                           
  4928                           ; Switch size 1, requested type "simple"
  4929                           ; Number of cases is 2, Range of values is 0 to 1
  4930                           ; switch strategies available:
  4931                           ; Name         Instructions Cycles
  4932                           ; simple_byte            7     4 (average)
  4933                           ;	Chosen strategy is simple_byte
  4934   001AB8  500F               	movf	??_gpio_pin_direction_intialize^0,w,c
  4935   001ABA  0A00               	xorlw	0	; case 0
  4936   001ABC  B4D8               	btfsc	status,2,c
  4937   001ABE  EFE7  F00C         	goto	l7678
  4938   001AC2  0A01               	xorlw	1	; case 1
  4939   001AC4  B4D8               	btfsc	status,2,c
  4940   001AC6  EF18  F00D         	goto	l7680
  4941   001ACA  EFE3  F00C         	goto	l7676
  4942   001ACE                     l7686:
  4943                           
  4944                           ;MCAL_Layer/GPIO/hal_gpio.c: 51:     return ret;
  4945   001ACE  5015               	movf	gpio_pin_direction_intialize@ret^0,w,c
  4946   001AD0  0012               	return		;funcret
  4947   001AD2                     __end_of_gpio_pin_direction_intialize:
  4948                           	callstack 0
  4949                           
  4950 ;; *************** function _ADC_Init *****************
  4951 ;; Defined at:
  4952 ;;		line 43 in file "MCAL_Layer/ADC/hal_adc.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  _adc            2   15[COMRAM] PTR const struct .
  4955 ;;		 -> adc_1(7), 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  ret             1   18[COMRAM] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      unsigned char 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;Total ram usage:        4 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; Hardware stack levels required when called: 5
  4974 ;; This function calls:
  4975 ;;		_adc_input_channel_port_config
  4976 ;;		_configure_voltage_reference
  4977 ;;		_select_result_format
  4978 ;; This function is called by:
  4979 ;;		_main
  4980 ;;		_application_intialize
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text29
  4985   0022A4                     __ptext29:
  4986                           	callstack 0
  4987   0022A4                     _ADC_Init:
  4988                           	callstack 24
  4989   0022A4                     
  4990                           ;MCAL_Layer/ADC/hal_adc.c: 46:     if(((void*)0) == _adc)
  4991   0022A4  5010               	movf	ADC_Init@_adc^0,w,c
  4992   0022A6  1011               	iorwf	(ADC_Init@_adc+1)^0,w,c
  4993   0022A8  A4D8               	btfss	status,2,c
  4994   0022AA  EF59  F011         	goto	u7051
  4995   0022AE  EF5B  F011         	goto	u7050
  4996   0022B2                     u7051:
  4997   0022B2  EF5F  F011         	goto	l364
  4998   0022B6                     u7050:
  4999   0022B6                     
  5000                           ;MCAL_Layer/ADC/hal_adc.c: 47:     {;MCAL_Layer/ADC/hal_adc.c: 48:         ret = (Std_Re
      +                          turnType)0x00;
  5001   0022B6  0E00               	movlw	0
  5002   0022B8  6E13               	movwf	ADC_Init@ret^0,c
  5003                           
  5004                           ;MCAL_Layer/ADC/hal_adc.c: 49:     }
  5005   0022BA  EFB0  F011         	goto	l8150
  5006   0022BE                     l364:
  5007                           
  5008                           ;MCAL_Layer/ADC/hal_adc.c: 51:     {;MCAL_Layer/ADC/hal_adc.c: 53:         (ADCON0bits.A
      +                          DON = 0);
  5009   0022BE  90C2               	bcf	194,0,c	;volatile
  5010   0022C0                     
  5011                           ;MCAL_Layer/ADC/hal_adc.c: 55:         ADCON2bits.ACQT = _adc->acquisition_time;
  5012   0022C0  EE20 F003          	lfsr	2,3
  5013   0022C4  5010               	movf	ADC_Init@_adc^0,w,c
  5014   0022C6  26D9               	addwf	fsr2l,f,c
  5015   0022C8  5011               	movf	(ADC_Init@_adc+1)^0,w,c
  5016   0022CA  22DA               	addwfc	fsr2h,f,c
  5017   0022CC  50DF               	movf	indf2,w,c
  5018   0022CE  6E12               	movwf	??_ADC_Init^0,c
  5019   0022D0  4612               	rlncf	??_ADC_Init^0,f,c
  5020   0022D2  4612               	rlncf	??_ADC_Init^0,f,c
  5021   0022D4  4612               	rlncf	??_ADC_Init^0,f,c
  5022   0022D6  50C0               	movf	192,w,c	;volatile
  5023   0022D8  1812               	xorwf	??_ADC_Init^0,w,c
  5024   0022DA  0BC7               	andlw	-57
  5025   0022DC  1812               	xorwf	??_ADC_Init^0,w,c
  5026   0022DE  6EC0               	movwf	192,c	;volatile
  5027                           
  5028                           ;MCAL_Layer/ADC/hal_adc.c: 57:         ADCON2bits.ADCS = _adc->conversion_clock;
  5029   0022E0  EE20 F004          	lfsr	2,4
  5030   0022E4  5010               	movf	ADC_Init@_adc^0,w,c
  5031   0022E6  26D9               	addwf	fsr2l,f,c
  5032   0022E8  5011               	movf	(ADC_Init@_adc+1)^0,w,c
  5033   0022EA  22DA               	addwfc	fsr2h,f,c
  5034   0022EC  50DF               	movf	indf2,w,c
  5035   0022EE  6E12               	movwf	??_ADC_Init^0,c
  5036   0022F0  50C0               	movf	192,w,c	;volatile
  5037   0022F2  1812               	xorwf	??_ADC_Init^0,w,c
  5038   0022F4  0BF8               	andlw	-8
  5039   0022F6  1812               	xorwf	??_ADC_Init^0,w,c
  5040   0022F8  6EC0               	movwf	192,c	;volatile
  5041                           
  5042                           ;MCAL_Layer/ADC/hal_adc.c: 59:         ADCON0bits.CHS = _adc->adc_channel;
  5043   0022FA  EE20 F005          	lfsr	2,5
  5044   0022FE  5010               	movf	ADC_Init@_adc^0,w,c
  5045   002300  26D9               	addwf	fsr2l,f,c
  5046   002302  5011               	movf	(ADC_Init@_adc+1)^0,w,c
  5047   002304  22DA               	addwfc	fsr2h,f,c
  5048   002306  50DF               	movf	indf2,w,c
  5049   002308  6E12               	movwf	??_ADC_Init^0,c
  5050   00230A  4612               	rlncf	??_ADC_Init^0,f,c
  5051   00230C  4612               	rlncf	??_ADC_Init^0,f,c
  5052   00230E  50C2               	movf	194,w,c	;volatile
  5053   002310  1812               	xorwf	??_ADC_Init^0,w,c
  5054   002312  0BC3               	andlw	-61
  5055   002314  1812               	xorwf	??_ADC_Init^0,w,c
  5056   002316  6EC2               	movwf	194,c	;volatile
  5057   002318                     
  5058                           ;MCAL_Layer/ADC/hal_adc.c: 60:         adc_input_channel_port_config(_adc->adc_channel);
  5059   002318  EE20 F005          	lfsr	2,5
  5060   00231C  5010               	movf	ADC_Init@_adc^0,w,c
  5061   00231E  26D9               	addwf	fsr2l,f,c
  5062   002320  5011               	movf	(ADC_Init@_adc+1)^0,w,c
  5063   002322  22DA               	addwfc	fsr2h,f,c
  5064   002324  50DF               	movf	indf2,w,c
  5065   002326  ECBD  F00F         	call	_adc_input_channel_port_config
  5066   00232A                     
  5067                           ;MCAL_Layer/ADC/hal_adc.c: 63:         (PIE1bits.ADIE = 1);
  5068   00232A  8C9D               	bsf	157,6,c	;volatile
  5069   00232C                     
  5070                           ;MCAL_Layer/ADC/hal_adc.c: 64:         (PIR1bits.ADIF = 0);
  5071   00232C  9C9E               	bcf	158,6,c	;volatile
  5072   00232E                     
  5073                           ;MCAL_Layer/ADC/hal_adc.c: 72:         (INTCONbits.GIE = 1);
  5074   00232E  8EF2               	bsf	242,7,c	;volatile
  5075   002330                     
  5076                           ;MCAL_Layer/ADC/hal_adc.c: 73:         (INTCONbits.PEIE = 1);
  5077   002330  8CF2               	bsf	242,6,c	;volatile
  5078   002332                     
  5079                           ;MCAL_Layer/ADC/hal_adc.c: 75:         ADC_InterruptHandler = _adc->ADC_InterruptHandler
      +                          ;
  5080   002332  C010  FFD9         	movff	ADC_Init@_adc,fsr2l
  5081   002336  C011  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  5082   00233A  CFDE F0C4          	movff	postinc2,_ADC_InterruptHandler
  5083   00233E  CFDD F0C5          	movff	postdec2,_ADC_InterruptHandler+1
  5084   002342                     
  5085                           ;MCAL_Layer/ADC/hal_adc.c: 78:         select_result_format(_adc);
  5086   002342  C010  F00D         	movff	ADC_Init@_adc,select_result_format@_adc
  5087   002346  C011  F00E         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  5088   00234A  ECA3  F015         	call	_select_result_format	;wreg free
  5089   00234E                     
  5090                           ;MCAL_Layer/ADC/hal_adc.c: 80:         configure_voltage_reference(_adc);
  5091   00234E  C010  F00D         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  5092   002352  C011  F00E         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  5093   002356  EC5C  F015         	call	_configure_voltage_reference	;wreg free
  5094   00235A                     
  5095                           ;MCAL_Layer/ADC/hal_adc.c: 82:         (ADCON0bits.ADON = 1);
  5096   00235A  80C2               	bsf	194,0,c	;volatile
  5097   00235C                     
  5098                           ;MCAL_Layer/ADC/hal_adc.c: 83:         ret = (Std_ReturnType)0x01;
  5099   00235C  0E01               	movlw	1
  5100   00235E  6E13               	movwf	ADC_Init@ret^0,c
  5101   002360                     l8150:
  5102                           
  5103                           ;MCAL_Layer/ADC/hal_adc.c: 85:     return ret;
  5104   002360  5013               	movf	ADC_Init@ret^0,w,c
  5105   002362  0012               	return		;funcret
  5106   002364                     __end_of_ADC_Init:
  5107                           	callstack 0
  5108                           
  5109 ;; *************** function _select_result_format *****************
  5110 ;; Defined at:
  5111 ;;		line 302 in file "MCAL_Layer/ADC/hal_adc.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  _adc            2   12[COMRAM] PTR const struct .
  5114 ;;		 -> adc_1(7), 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;Total ram usage:        2 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; Hardware stack levels required when called: 4
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_ADC_Init
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text30
  5141   002B46                     __ptext30:
  5142                           	callstack 0
  5143   002B46                     _select_result_format:
  5144                           	callstack 24
  5145   002B46                     
  5146                           ;MCAL_Layer/ADC/hal_adc.c: 302: static __attribute__((inline)) void select_result_format
      +                          (const adc_config_t *_adc);MCAL_Layer/ADC/hal_adc.c: 303: {;MCAL_Layer/ADC/hal_adc.c: 30
      +                          4:     if(0x01U == _adc->result_format)
  5147   002B46  EE20 F006          	lfsr	2,6
  5148   002B4A  500D               	movf	select_result_format@_adc^0,w,c
  5149   002B4C  26D9               	addwf	fsr2l,f,c
  5150   002B4E  500E               	movf	(select_result_format@_adc+1)^0,w,c
  5151   002B50  22DA               	addwfc	fsr2h,f,c
  5152   002B52  A2DF               	btfss	indf2,1,c
  5153   002B54  EFAE  F015         	goto	u6911
  5154   002B58  EFB0  F015         	goto	u6910
  5155   002B5C                     u6911:
  5156   002B5C  EFB3  F015         	goto	l7994
  5157   002B60                     u6910:
  5158   002B60                     
  5159                           ;MCAL_Layer/ADC/hal_adc.c: 305:     {;MCAL_Layer/ADC/hal_adc.c: 306:         (ADCON2bits
      +                          .ADFM = 1);
  5160   002B60  8EC0               	bsf	192,7,c	;volatile
  5161                           
  5162                           ;MCAL_Layer/ADC/hal_adc.c: 307:     }
  5163   002B62  EFC4  F015         	goto	l439
  5164   002B66                     l7994:
  5165   002B66  EE20 F006          	lfsr	2,6
  5166   002B6A  500D               	movf	select_result_format@_adc^0,w,c
  5167   002B6C  26D9               	addwf	fsr2l,f,c
  5168   002B6E  500E               	movf	(select_result_format@_adc+1)^0,w,c
  5169   002B70  22DA               	addwfc	fsr2h,f,c
  5170   002B72  B2DF               	btfsc	indf2,1,c
  5171   002B74  EFBE  F015         	goto	u6921
  5172   002B78  EFC0  F015         	goto	u6920
  5173   002B7C                     u6921:
  5174   002B7C  EFC3  F015         	goto	l437
  5175   002B80                     u6920:
  5176   002B80                     
  5177                           ;MCAL_Layer/ADC/hal_adc.c: 309:     {;MCAL_Layer/ADC/hal_adc.c: 310:         (ADCON2bits
      +                          .ADFM = 0);
  5178   002B80  9EC0               	bcf	192,7,c	;volatile
  5179                           
  5180                           ;MCAL_Layer/ADC/hal_adc.c: 311:     }
  5181   002B82  EFC4  F015         	goto	l439
  5182   002B86                     l437:
  5183                           
  5184                           ;MCAL_Layer/ADC/hal_adc.c: 313:     {;MCAL_Layer/ADC/hal_adc.c: 314:         (ADCON2bits
      +                          .ADFM = 1);
  5185   002B86  8EC0               	bsf	192,7,c	;volatile
  5186   002B88                     l439:
  5187   002B88  0012               	return		;funcret
  5188   002B8A                     __end_of_select_result_format:
  5189                           	callstack 0
  5190                           
  5191 ;; *************** function _configure_voltage_reference *****************
  5192 ;; Defined at:
  5193 ;;		line 322 in file "MCAL_Layer/ADC/hal_adc.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  _adc            2   12[COMRAM] PTR const struct .
  5196 ;;		 -> adc_1(7), 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;Total ram usage:        2 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 4
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_ADC_Init
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text31
  5223   002AB8                     __ptext31:
  5224                           	callstack 0
  5225   002AB8                     _configure_voltage_reference:
  5226                           	callstack 24
  5227   002AB8                     
  5228                           ;MCAL_Layer/ADC/hal_adc.c: 322: static __attribute__((inline)) void configure_voltage_re
      +                          ference(const adc_config_t *_adc);MCAL_Layer/ADC/hal_adc.c: 323: {;MCAL_Layer/ADC/hal_ad
      +                          c.c: 324:     if(0x01U == _adc->voltage_reference)
  5229   002AB8  EE20 F006          	lfsr	2,6
  5230   002ABC  500D               	movf	configure_voltage_reference@_adc^0,w,c
  5231   002ABE  26D9               	addwf	fsr2l,f,c
  5232   002AC0  500E               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  5233   002AC2  22DA               	addwfc	fsr2h,f,c
  5234   002AC4  A0DF               	btfss	indf2,0,c
  5235   002AC6  EF67  F015         	goto	u6931
  5236   002ACA  EF69  F015         	goto	u6930
  5237   002ACE                     u6931:
  5238   002ACE  EF6D  F015         	goto	l8000
  5239   002AD2                     u6930:
  5240   002AD2  8AC1               	bsf	193,5,c	;volatile
  5241   002AD4  88C1               	bsf	193,4,c	;volatile
  5242   002AD6  EF80  F015         	goto	l452
  5243   002ADA                     l8000:
  5244   002ADA  EE20 F006          	lfsr	2,6
  5245   002ADE  500D               	movf	configure_voltage_reference@_adc^0,w,c
  5246   002AE0  26D9               	addwf	fsr2l,f,c
  5247   002AE2  500E               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  5248   002AE4  22DA               	addwfc	fsr2h,f,c
  5249   002AE6  B2DF               	btfsc	indf2,1,c
  5250   002AE8  EF78  F015         	goto	u6941
  5251   002AEC  EF7A  F015         	goto	u6940
  5252   002AF0                     u6941:
  5253   002AF0  EF7E  F015         	goto	l450
  5254   002AF4                     u6940:
  5255   002AF4  9AC1               	bcf	193,5,c	;volatile
  5256   002AF6  98C1               	bcf	193,4,c	;volatile
  5257   002AF8  EF80  F015         	goto	l452
  5258   002AFC                     l450:
  5259   002AFC  9AC1               	bcf	193,5,c	;volatile
  5260   002AFE  98C1               	bcf	193,4,c	;volatile
  5261   002B00                     l452:
  5262   002B00  0012               	return		;funcret
  5263   002B02                     __end_of_configure_voltage_reference:
  5264                           	callstack 0
  5265                           
  5266 ;; *************** function _ADC_StartConversion_Interrupt *****************
  5267 ;; Defined at:
  5268 ;;		line 257 in file "MCAL_Layer/ADC/hal_adc.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  _adc            2   20[COMRAM] PTR const struct .
  5271 ;;		 -> adc_1(7), 
  5272 ;;  channel         1   22[COMRAM] enum E3032
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  ret             1   23[COMRAM] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      unsigned char 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5284 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;Total ram usage:        4 bytes
  5289 ;; Hardware stack levels used: 1
  5290 ;; Hardware stack levels required when called: 6
  5291 ;; This function calls:
  5292 ;;		_ADC_SelectChannel
  5293 ;;		_ADC_StartConversion
  5294 ;; This function is called by:
  5295 ;;		_main
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text32
  5300   002BCA                     __ptext32:
  5301                           	callstack 0
  5302   002BCA                     _ADC_StartConversion_Interrupt:
  5303                           	callstack 24
  5304   002BCA                     
  5305                           ;MCAL_Layer/ADC/hal_adc.c: 260:     if(((void*)0) == _adc)
  5306   002BCA  5015               	movf	ADC_StartConversion_Interrupt@_adc^0,w,c
  5307   002BCC  1016               	iorwf	(ADC_StartConversion_Interrupt@_adc+1)^0,w,c
  5308   002BCE  A4D8               	btfss	status,2,c
  5309   002BD0  EFEC  F015         	goto	u7191
  5310   002BD4  EFEE  F015         	goto	u7190
  5311   002BD8                     u7191:
  5312   002BD8  EFF2  F015         	goto	l8270
  5313   002BDC                     u7190:
  5314   002BDC                     
  5315                           ;MCAL_Layer/ADC/hal_adc.c: 261:     {;MCAL_Layer/ADC/hal_adc.c: 262:         ret = (Std_
      +                          ReturnType)0x00;
  5316   002BDC  0E00               	movlw	0
  5317   002BDE  6E18               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5318                           
  5319                           ;MCAL_Layer/ADC/hal_adc.c: 263:     }
  5320   002BE0  EF02  F016         	goto	l8272
  5321   002BE4                     l8270:
  5322                           
  5323                           ;MCAL_Layer/ADC/hal_adc.c: 265:     {;MCAL_Layer/ADC/hal_adc.c: 267:         ret = ADC_S
      +                          electChannel(_adc, channel);
  5324   002BE4  C015  F010         	movff	ADC_StartConversion_Interrupt@_adc,ADC_SelectChannel@_adc
  5325   002BE8  C016  F011         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_SelectChannel@_adc+1
  5326   002BEC  C017  F012         	movff	ADC_StartConversion_Interrupt@channel,ADC_SelectChannel@channel
  5327   002BF0  EC04  F016         	call	_ADC_SelectChannel	;wreg free
  5328   002BF4  6E18               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5329                           
  5330                           ;MCAL_Layer/ADC/hal_adc.c: 269:         ret = ADC_StartConversion(_adc);
  5331   002BF6  C015  F00D         	movff	ADC_StartConversion_Interrupt@_adc,ADC_StartConversion@_adc
  5332   002BFA  C016  F00E         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_StartConversion@_adc+1
  5333   002BFE  EC6F  F016         	call	_ADC_StartConversion	;wreg free
  5334   002C02  6E18               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5335   002C04                     l8272:
  5336                           
  5337                           ;MCAL_Layer/ADC/hal_adc.c: 271:     return ret;
  5338   002C04  5018               	movf	ADC_StartConversion_Interrupt@ret^0,w,c
  5339   002C06  0012               	return		;funcret
  5340   002C08                     __end_of_ADC_StartConversion_Interrupt:
  5341                           	callstack 0
  5342                           
  5343 ;; *************** function _ADC_StartConversion *****************
  5344 ;; Defined at:
  5345 ;;		line 147 in file "MCAL_Layer/ADC/hal_adc.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  _adc            2   12[COMRAM] PTR const struct .
  5348 ;;		 -> adc_1(7), 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  ret             1   14[COMRAM] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      unsigned char 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;Total ram usage:        3 bytes
  5365 ;; Hardware stack levels used: 1
  5366 ;; Hardware stack levels required when called: 4
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_ADC_StartConversion_Interrupt
  5371 ;;		_ADC_GetConversion_Blocking
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text33
  5376   002CDE                     __ptext33:
  5377                           	callstack 0
  5378   002CDE                     _ADC_StartConversion:
  5379                           	callstack 25
  5380   002CDE                     
  5381                           ;MCAL_Layer/ADC/hal_adc.c: 150:     if(((void*)0) == _adc)
  5382   002CDE  500D               	movf	ADC_StartConversion@_adc^0,w,c
  5383   002CE0  100E               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  5384   002CE2  A4D8               	btfss	status,2,c
  5385   002CE4  EF76  F016         	goto	u7071
  5386   002CE8  EF78  F016         	goto	u7070
  5387   002CEC                     u7071:
  5388   002CEC  EF7C  F016         	goto	l379
  5389   002CF0                     u7070:
  5390   002CF0                     
  5391                           ;MCAL_Layer/ADC/hal_adc.c: 151:     {;MCAL_Layer/ADC/hal_adc.c: 152:         ret = (Std_
      +                          ReturnType)0x00;
  5392   002CF0  0E00               	movlw	0
  5393   002CF2  6E0F               	movwf	ADC_StartConversion@ret^0,c
  5394                           
  5395                           ;MCAL_Layer/ADC/hal_adc.c: 153:     }
  5396   002CF4  EF7F  F016         	goto	l380
  5397   002CF8                     l379:
  5398                           
  5399                           ;MCAL_Layer/ADC/hal_adc.c: 155:     {;MCAL_Layer/ADC/hal_adc.c: 156:         (ADCON0bits
      +                          .GODONE = 1);
  5400   002CF8  82C2               	bsf	194,1,c	;volatile
  5401   002CFA                     
  5402                           ;MCAL_Layer/ADC/hal_adc.c: 157:         ret = (Std_ReturnType)0x01;
  5403   002CFA  0E01               	movlw	1
  5404   002CFC  6E0F               	movwf	ADC_StartConversion@ret^0,c
  5405   002CFE                     l380:
  5406                           
  5407                           ;MCAL_Layer/ADC/hal_adc.c: 159:     return ret;
  5408   002CFE  500F               	movf	ADC_StartConversion@ret^0,w,c
  5409   002D00  0012               	return		;funcret
  5410   002D02                     __end_of_ADC_StartConversion:
  5411                           	callstack 0
  5412                           
  5413 ;; *************** function _ADC_SelectChannel *****************
  5414 ;; Defined at:
  5415 ;;		line 123 in file "MCAL_Layer/ADC/hal_adc.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  _adc            2   15[COMRAM] PTR const struct .
  5418 ;;		 -> adc_1(7), 
  5419 ;;  channel         1   17[COMRAM] enum E3032
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  ret             1   19[COMRAM] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      unsigned char 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5431 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;Total ram usage:        5 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; Hardware stack levels required when called: 5
  5438 ;; This function calls:
  5439 ;;		_adc_input_channel_port_config
  5440 ;; This function is called by:
  5441 ;;		_ADC_StartConversion_Interrupt
  5442 ;;		_ADC_GetConversion_Blocking
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text34
  5447   002C08                     __ptext34:
  5448                           	callstack 0
  5449   002C08                     _ADC_SelectChannel:
  5450                           	callstack 24
  5451   002C08                     
  5452                           ;MCAL_Layer/ADC/hal_adc.c: 126:     if(((void*)0) == _adc)
  5453   002C08  5010               	movf	ADC_SelectChannel@_adc^0,w,c
  5454   002C0A  1011               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  5455   002C0C  A4D8               	btfss	status,2,c
  5456   002C0E  EF0B  F016         	goto	u7061
  5457   002C12  EF0D  F016         	goto	u7060
  5458   002C16                     u7061:
  5459   002C16  EF11  F016         	goto	l8160
  5460   002C1A                     u7060:
  5461   002C1A                     
  5462                           ;MCAL_Layer/ADC/hal_adc.c: 127:     {;MCAL_Layer/ADC/hal_adc.c: 128:         ret = (Std_
      +                          ReturnType)0x00;
  5463   002C1A  0E00               	movlw	0
  5464   002C1C  6E14               	movwf	ADC_SelectChannel@ret^0,c
  5465                           
  5466                           ;MCAL_Layer/ADC/hal_adc.c: 129:     }
  5467   002C1E  EF1F  F016         	goto	l8166
  5468   002C22                     l8160:
  5469                           
  5470                           ;MCAL_Layer/ADC/hal_adc.c: 131:     {;MCAL_Layer/ADC/hal_adc.c: 133:         ADCON0bits.
      +                          CHS = channel;
  5471   002C22  C012  F013         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  5472   002C26  4613               	rlncf	??_ADC_SelectChannel^0,f,c
  5473   002C28  4613               	rlncf	??_ADC_SelectChannel^0,f,c
  5474   002C2A  50C2               	movf	194,w,c	;volatile
  5475   002C2C  1813               	xorwf	??_ADC_SelectChannel^0,w,c
  5476   002C2E  0BC3               	andlw	-61
  5477   002C30  1813               	xorwf	??_ADC_SelectChannel^0,w,c
  5478   002C32  6EC2               	movwf	194,c	;volatile
  5479   002C34                     
  5480                           ;MCAL_Layer/ADC/hal_adc.c: 134:         adc_input_channel_port_config(channel);
  5481   002C34  5012               	movf	ADC_SelectChannel@channel^0,w,c
  5482   002C36  ECBD  F00F         	call	_adc_input_channel_port_config
  5483   002C3A                     
  5484                           ;MCAL_Layer/ADC/hal_adc.c: 135:         ret = (Std_ReturnType)0x01;
  5485   002C3A  0E01               	movlw	1
  5486   002C3C  6E14               	movwf	ADC_SelectChannel@ret^0,c
  5487   002C3E                     l8166:
  5488                           
  5489                           ;MCAL_Layer/ADC/hal_adc.c: 137:     return ret;
  5490   002C3E  5014               	movf	ADC_SelectChannel@ret^0,w,c
  5491   002C40  0012               	return		;funcret
  5492   002C42                     __end_of_ADC_SelectChannel:
  5493                           	callstack 0
  5494                           
  5495 ;; *************** function _adc_input_channel_port_config *****************
  5496 ;; Defined at:
  5497 ;;		line 278 in file "MCAL_Layer/ADC/hal_adc.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  channel         1    wreg     enum E3032
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  channel         1   14[COMRAM] enum E3032
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		wreg, status,2, status,0
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;Total ram usage:        3 bytes
  5516 ;; Hardware stack levels used: 1
  5517 ;; Hardware stack levels required when called: 4
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_ADC_Init
  5522 ;;		_ADC_SelectChannel
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text35
  5527   001F7A                     __ptext35:
  5528                           	callstack 0
  5529   001F7A                     _adc_input_channel_port_config:
  5530                           	callstack 24
  5531                           
  5532                           ;incstack = 0
  5533                           ;adc_input_channel_port_config@channel stored from wreg
  5534   001F7A  6E0F               	movwf	adc_input_channel_port_config@channel^0,c
  5535   001F7C                     
  5536                           ;MCAL_Layer/ADC/hal_adc.c: 278: static __attribute__((inline)) void adc_input_channel_po
      +                          rt_config(adc_channel_select_t channel);MCAL_Layer/ADC/hal_adc.c: 279: {;MCAL_Layer/ADC/
      +                          hal_adc.c: 280:    switch(channel)
  5537   001F7C  EFE7  F00F         	goto	l7984
  5538   001F80                     l7956:
  5539   001F80  8092               	bsf	146,0,c	;volatile
  5540   001F82  EF28  F010         	goto	l432
  5541   001F86                     l7958:
  5542   001F86  8292               	bsf	146,1,c	;volatile
  5543   001F88  EF28  F010         	goto	l432
  5544   001F8C                     l7960:
  5545   001F8C  8492               	bsf	146,2,c	;volatile
  5546   001F8E  EF28  F010         	goto	l432
  5547   001F92                     l7962:
  5548   001F92  8692               	bsf	146,3,c	;volatile
  5549   001F94  EF28  F010         	goto	l432
  5550   001F98                     l7964:
  5551   001F98  8A92               	bsf	146,5,c	;volatile
  5552   001F9A  EF28  F010         	goto	l432
  5553   001F9E                     l7966:
  5554   001F9E  8096               	bsf	150,0,c	;volatile
  5555   001FA0  EF28  F010         	goto	l432
  5556   001FA4                     l7968:
  5557   001FA4  8296               	bsf	150,1,c	;volatile
  5558   001FA6  EF28  F010         	goto	l432
  5559   001FAA                     l7970:
  5560   001FAA  8496               	bsf	150,2,c	;volatile
  5561   001FAC  EF28  F010         	goto	l432
  5562   001FB0                     l7972:
  5563   001FB0  8493               	bsf	147,2,c	;volatile
  5564   001FB2  EF28  F010         	goto	l432
  5565   001FB6                     l7974:
  5566   001FB6  8693               	bsf	147,3,c	;volatile
  5567   001FB8  EF28  F010         	goto	l432
  5568   001FBC                     l7976:
  5569   001FBC  8293               	bsf	147,1,c	;volatile
  5570   001FBE  EF28  F010         	goto	l432
  5571   001FC2                     l7978:
  5572   001FC2  8893               	bsf	147,4,c	;volatile
  5573   001FC4  EF28  F010         	goto	l432
  5574   001FC8                     l7980:
  5575   001FC8  8093               	bsf	147,0,c	;volatile
  5576   001FCA  EF28  F010         	goto	l432
  5577   001FCE                     l7984:
  5578   001FCE  500F               	movf	adc_input_channel_port_config@channel^0,w,c
  5579   001FD0  6E0D               	movwf	??_adc_input_channel_port_config^0,c
  5580   001FD2  6A0E               	clrf	(??_adc_input_channel_port_config+1)^0,c
  5581                           
  5582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5583                           ; Switch size 1, requested type "simple"
  5584                           ; Number of cases is 1, Range of values is 0 to 0
  5585                           ; switch strategies available:
  5586                           ; Name         Instructions Cycles
  5587                           ; simple_byte            4     3 (average)
  5588                           ;	Chosen strategy is simple_byte
  5589   001FD4  500E               	movf	(??_adc_input_channel_port_config+1)^0,w,c
  5590   001FD6  0A00               	xorlw	0	; case 0
  5591   001FD8  B4D8               	btfsc	status,2,c
  5592   001FDA  EFF1  F00F         	goto	l8890
  5593   001FDE  EF28  F010         	goto	l432
  5594   001FE2                     l8890:
  5595                           
  5596                           ; Switch size 1, requested type "simple"
  5597                           ; Number of cases is 13, Range of values is 0 to 12
  5598                           ; switch strategies available:
  5599                           ; Name         Instructions Cycles
  5600                           ; simple_byte           40    21 (average)
  5601                           ;	Chosen strategy is simple_byte
  5602   001FE2  500D               	movf	??_adc_input_channel_port_config^0,w,c
  5603   001FE4  0A00               	xorlw	0	; case 0
  5604   001FE6  B4D8               	btfsc	status,2,c
  5605   001FE8  EFC0  F00F         	goto	l7956
  5606   001FEC  0A01               	xorlw	1	; case 1
  5607   001FEE  B4D8               	btfsc	status,2,c
  5608   001FF0  EFC3  F00F         	goto	l7958
  5609   001FF4  0A03               	xorlw	3	; case 2
  5610   001FF6  B4D8               	btfsc	status,2,c
  5611   001FF8  EFC6  F00F         	goto	l7960
  5612   001FFC  0A01               	xorlw	1	; case 3
  5613   001FFE  B4D8               	btfsc	status,2,c
  5614   002000  EFC9  F00F         	goto	l7962
  5615   002004  0A07               	xorlw	7	; case 4
  5616   002006  B4D8               	btfsc	status,2,c
  5617   002008  EFCC  F00F         	goto	l7964
  5618   00200C  0A01               	xorlw	1	; case 5
  5619   00200E  B4D8               	btfsc	status,2,c
  5620   002010  EFCF  F00F         	goto	l7966
  5621   002014  0A03               	xorlw	3	; case 6
  5622   002016  B4D8               	btfsc	status,2,c
  5623   002018  EFD2  F00F         	goto	l7968
  5624   00201C  0A01               	xorlw	1	; case 7
  5625   00201E  B4D8               	btfsc	status,2,c
  5626   002020  EFD5  F00F         	goto	l7970
  5627   002024  0A0F               	xorlw	15	; case 8
  5628   002026  B4D8               	btfsc	status,2,c
  5629   002028  EFD8  F00F         	goto	l7972
  5630   00202C  0A01               	xorlw	1	; case 9
  5631   00202E  B4D8               	btfsc	status,2,c
  5632   002030  EFDB  F00F         	goto	l7974
  5633   002034  0A03               	xorlw	3	; case 10
  5634   002036  B4D8               	btfsc	status,2,c
  5635   002038  EFDE  F00F         	goto	l7976
  5636   00203C  0A01               	xorlw	1	; case 11
  5637   00203E  B4D8               	btfsc	status,2,c
  5638   002040  EFE1  F00F         	goto	l7978
  5639   002044  0A07               	xorlw	7	; case 12
  5640   002046  B4D8               	btfsc	status,2,c
  5641   002048  EFE4  F00F         	goto	l7980
  5642   00204C  EF28  F010         	goto	l432
  5643   002050                     l432:
  5644   002050  0012               	return		;funcret
  5645   002052                     __end_of_adc_input_channel_port_config:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function _InterruptManager *****************
  5649 ;; Defined at:
  5650 ;;		line 46 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;Total ram usage:        4 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 3
  5671 ;; This function calls:
  5672 ;;		_ADC_ISR
  5673 ;;		_CCP1_ISR
  5674 ;;		_CCP2_ISR
  5675 ;;		_INT0_ISR
  5676 ;;		_INT1_ISR
  5677 ;;		_INT2_ISR
  5678 ;;		_MSSP_I2C_BC_ISR
  5679 ;;		_MSSP_I2C_ISR
  5680 ;;		_RB4_ISR
  5681 ;;		_RB5_ISR
  5682 ;;		_RB6_ISR
  5683 ;;		_RB7_ISR
  5684 ;;		_TMR0_ISR
  5685 ;;		_TMR1_ISR
  5686 ;;		_TMR2_ISR
  5687 ;;		_TMR3_ISR
  5688 ;;		_USART_RX_ISR
  5689 ;;		_USART_TX_ISR
  5690 ;; This function is called by:
  5691 ;;		Interrupt level 2
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	intcode
  5696   000008                     __pintcode:
  5697                           	callstack 0
  5698   000008                     _InterruptManager:
  5699                           	callstack 18
  5700                           
  5701                           ;incstack = 0
  5702   000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5703   00000A  ED1F  F008         	call	int_func,f	;refresh shadow registers
  5704                           
  5705                           	psect	intcode_body
  5706   00103E                     __pintcode_body:
  5707                           	callstack 18
  5708   00103E                     int_func:
  5709                           	callstack 18
  5710   00103E  0006               	pop		; remove dummy address from shadow register refresh
  5711   001040  CFFA F009          	movff	pclath,??_InterruptManager
  5712   001044  CFFB F00A          	movff	pclatu,??_InterruptManager+1
  5713   001048  CFD9 F00B          	movff	fsr2l,??_InterruptManager+2
  5714   00104C  CFDA F00C          	movff	fsr2h,??_InterruptManager+3
  5715   001050                     
  5716                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF))
  5717   001050  A8F2               	btfss	242,4,c	;volatile
  5718   001052  EF2D  F008         	goto	i2u543_41
  5719   001056  EF2F  F008         	goto	i2u543_40
  5720   00105A                     i2u543_41:
  5721   00105A  EF38  F008         	goto	i2l1160
  5722   00105E                     i2u543_40:
  5723   00105E  A2F2               	btfss	242,1,c	;volatile
  5724   001060  EF34  F008         	goto	i2u544_41
  5725   001064  EF36  F008         	goto	i2u544_40
  5726   001068                     i2u544_41:
  5727   001068  EF38  F008         	goto	i2l1160
  5728   00106C                     i2u544_40:
  5729   00106C                     
  5730                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 51:         INT0_ISR();
  5731   00106C  EC0B  F017         	call	_INT0_ISR	;wreg free
  5732   001070                     i2l1160:
  5733                           
  5734                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 54:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F))
  5735   001070  A6F0               	btfss	240,3,c	;volatile
  5736   001072  EF3D  F008         	goto	i2u545_41
  5737   001076  EF3F  F008         	goto	i2u545_40
  5738   00107A                     i2u545_41:
  5739   00107A  EF48  F008         	goto	i2l1162
  5740   00107E                     i2u545_40:
  5741   00107E  A0F0               	btfss	240,0,c	;volatile
  5742   001080  EF44  F008         	goto	i2u546_41
  5743   001084  EF46  F008         	goto	i2u546_40
  5744   001088                     i2u546_41:
  5745   001088  EF48  F008         	goto	i2l1162
  5746   00108C                     i2u546_40:
  5747   00108C                     
  5748                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 56:         INT1_ISR();
  5749   00108C  EC09  F017         	call	_INT1_ISR	;wreg free
  5750   001090                     i2l1162:
  5751                           
  5752                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 59:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF))
  5753   001090  A8F0               	btfss	240,4,c	;volatile
  5754   001092  EF4D  F008         	goto	i2u547_41
  5755   001096  EF4F  F008         	goto	i2u547_40
  5756   00109A                     i2u547_41:
  5757   00109A  EF58  F008         	goto	i2l1164
  5758   00109E                     i2u547_40:
  5759   00109E  A2F0               	btfss	240,1,c	;volatile
  5760   0010A0  EF54  F008         	goto	i2u548_41
  5761   0010A4  EF56  F008         	goto	i2u548_40
  5762   0010A8                     i2u548_41:
  5763   0010A8  EF58  F008         	goto	i2l1164
  5764   0010AC                     i2u548_40:
  5765   0010AC                     
  5766                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 61:         INT2_ISR();
  5767   0010AC  EC07  F017         	call	_INT2_ISR	;wreg free
  5768   0010B0                     i2l1164:
  5769                           
  5770                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5771   0010B0  A6F2               	btfss	242,3,c	;volatile
  5772   0010B2  EF5D  F008         	goto	i2u549_41
  5773   0010B6  EF5F  F008         	goto	i2u549_40
  5774   0010BA                     i2u549_41:
  5775   0010BA  EF7A  F008         	goto	i2l1166
  5776   0010BE                     i2u549_40:
  5777   0010BE  A0F2               	btfss	242,0,c	;volatile
  5778   0010C0  EF64  F008         	goto	i2u550_41
  5779   0010C4  EF66  F008         	goto	i2u550_40
  5780   0010C8                     i2u550_41:
  5781   0010C8  EF7A  F008         	goto	i2l1166
  5782   0010CC                     i2u550_40:
  5783   0010CC  A881               	btfss	129,4,c	;volatile
  5784   0010CE  EF6B  F008         	goto	i2u551_41
  5785   0010D2  EF6D  F008         	goto	i2u551_40
  5786   0010D6                     i2u551_41:
  5787   0010D6  EF7A  F008         	goto	i2l1166
  5788   0010DA                     i2u551_40:
  5789   0010DA  0472               	decf	_RB4_Flag^0,w,c	;volatile
  5790   0010DC  A4D8               	btfss	status,2,c
  5791   0010DE  EF73  F008         	goto	i2u552_41
  5792   0010E2  EF75  F008         	goto	i2u552_40
  5793   0010E6                     i2u552_41:
  5794   0010E6  EF7A  F008         	goto	i2l1166
  5795   0010EA                     i2u552_40:
  5796   0010EA                     
  5797                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 70:         RB4_Flag = 0;
  5798   0010EA  0E00               	movlw	0
  5799   0010EC  6E72               	movwf	_RB4_Flag^0,c	;volatile
  5800   0010EE                     
  5801                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:         RB4_ISR(0);
  5802   0010EE  0E00               	movlw	0
  5803   0010F0  ECC6  F016         	call	_RB4_ISR
  5804   0010F4                     i2l1166:
  5805                           
  5806                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5807   0010F4  A6F2               	btfss	242,3,c	;volatile
  5808   0010F6  EF7F  F008         	goto	i2u553_41
  5809   0010FA  EF81  F008         	goto	i2u553_40
  5810   0010FE                     i2u553_41:
  5811   0010FE  EF9C  F008         	goto	i2l1168
  5812   001102                     i2u553_40:
  5813   001102  A0F2               	btfss	242,0,c	;volatile
  5814   001104  EF86  F008         	goto	i2u554_41
  5815   001108  EF88  F008         	goto	i2u554_40
  5816   00110C                     i2u554_41:
  5817   00110C  EF9C  F008         	goto	i2l1168
  5818   001110                     i2u554_40:
  5819   001110  B881               	btfsc	129,4,c	;volatile
  5820   001112  EF8D  F008         	goto	i2u555_41
  5821   001116  EF8F  F008         	goto	i2u555_40
  5822   00111A                     i2u555_41:
  5823   00111A  EF9C  F008         	goto	i2l1168
  5824   00111E                     i2u555_40:
  5825   00111E  5072               	movf	_RB4_Flag^0,w,c	;volatile
  5826   001120  A4D8               	btfss	status,2,c
  5827   001122  EF95  F008         	goto	i2u556_41
  5828   001126  EF97  F008         	goto	i2u556_40
  5829   00112A                     i2u556_41:
  5830   00112A  EF9C  F008         	goto	i2l1168
  5831   00112E                     i2u556_40:
  5832   00112E                     
  5833                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 77:         RB4_Flag = 1;
  5834   00112E  0E01               	movlw	1
  5835   001130  6E72               	movwf	_RB4_Flag^0,c	;volatile
  5836   001132                     
  5837                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:         RB4_ISR(1);
  5838   001132  0E01               	movlw	1
  5839   001134  ECC6  F016         	call	_RB4_ISR
  5840   001138                     i2l1168:
  5841                           
  5842                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5843   001138  A6F2               	btfss	242,3,c	;volatile
  5844   00113A  EFA1  F008         	goto	i2u557_41
  5845   00113E  EFA3  F008         	goto	i2u557_40
  5846   001142                     i2u557_41:
  5847   001142  EFBE  F008         	goto	i2l1170
  5848   001146                     i2u557_40:
  5849   001146  A0F2               	btfss	242,0,c	;volatile
  5850   001148  EFA8  F008         	goto	i2u558_41
  5851   00114C  EFAA  F008         	goto	i2u558_40
  5852   001150                     i2u558_41:
  5853   001150  EFBE  F008         	goto	i2l1170
  5854   001154                     i2u558_40:
  5855   001154  AA81               	btfss	129,5,c	;volatile
  5856   001156  EFAF  F008         	goto	i2u559_41
  5857   00115A  EFB1  F008         	goto	i2u559_40
  5858   00115E                     i2u559_41:
  5859   00115E  EFBE  F008         	goto	i2l1170
  5860   001162                     i2u559_40:
  5861   001162  0471               	decf	_RB5_Flag^0,w,c	;volatile
  5862   001164  A4D8               	btfss	status,2,c
  5863   001166  EFB7  F008         	goto	i2u560_41
  5864   00116A  EFB9  F008         	goto	i2u560_40
  5865   00116E                     i2u560_41:
  5866   00116E  EFBE  F008         	goto	i2l1170
  5867   001172                     i2u560_40:
  5868   001172                     
  5869                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 83:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 84:         RB5_Flag = 0;
  5870   001172  0E00               	movlw	0
  5871   001174  6E71               	movwf	_RB5_Flag^0,c	;volatile
  5872   001176                     
  5873                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:         RB5_ISR(0);
  5874   001176  0E00               	movlw	0
  5875   001178  ECB9  F016         	call	_RB5_ISR
  5876   00117C                     i2l1170:
  5877                           
  5878                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5879   00117C  A6F2               	btfss	242,3,c	;volatile
  5880   00117E  EFC3  F008         	goto	i2u561_41
  5881   001182  EFC5  F008         	goto	i2u561_40
  5882   001186                     i2u561_41:
  5883   001186  EFE0  F008         	goto	i2l1172
  5884   00118A                     i2u561_40:
  5885   00118A  A0F2               	btfss	242,0,c	;volatile
  5886   00118C  EFCA  F008         	goto	i2u562_41
  5887   001190  EFCC  F008         	goto	i2u562_40
  5888   001194                     i2u562_41:
  5889   001194  EFE0  F008         	goto	i2l1172
  5890   001198                     i2u562_40:
  5891   001198  BA81               	btfsc	129,5,c	;volatile
  5892   00119A  EFD1  F008         	goto	i2u563_41
  5893   00119E  EFD3  F008         	goto	i2u563_40
  5894   0011A2                     i2u563_41:
  5895   0011A2  EFE0  F008         	goto	i2l1172
  5896   0011A6                     i2u563_40:
  5897   0011A6  5071               	movf	_RB5_Flag^0,w,c	;volatile
  5898   0011A8  A4D8               	btfss	status,2,c
  5899   0011AA  EFD9  F008         	goto	i2u564_41
  5900   0011AE  EFDB  F008         	goto	i2u564_40
  5901   0011B2                     i2u564_41:
  5902   0011B2  EFE0  F008         	goto	i2l1172
  5903   0011B6                     i2u564_40:
  5904   0011B6                     
  5905                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 91:         RB5_Flag = 1;
  5906   0011B6  0E01               	movlw	1
  5907   0011B8  6E71               	movwf	_RB5_Flag^0,c	;volatile
  5908   0011BA                     
  5909                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:         RB5_ISR(1);
  5910   0011BA  0E01               	movlw	1
  5911   0011BC  ECB9  F016         	call	_RB5_ISR
  5912   0011C0                     i2l1172:
  5913                           
  5914                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5915   0011C0  A6F2               	btfss	242,3,c	;volatile
  5916   0011C2  EFE5  F008         	goto	i2u565_41
  5917   0011C6  EFE7  F008         	goto	i2u565_40
  5918   0011CA                     i2u565_41:
  5919   0011CA  EF02  F009         	goto	i2l1174
  5920   0011CE                     i2u565_40:
  5921   0011CE  A0F2               	btfss	242,0,c	;volatile
  5922   0011D0  EFEC  F008         	goto	i2u566_41
  5923   0011D4  EFEE  F008         	goto	i2u566_40
  5924   0011D8                     i2u566_41:
  5925   0011D8  EF02  F009         	goto	i2l1174
  5926   0011DC                     i2u566_40:
  5927   0011DC  AC81               	btfss	129,6,c	;volatile
  5928   0011DE  EFF3  F008         	goto	i2u567_41
  5929   0011E2  EFF5  F008         	goto	i2u567_40
  5930   0011E6                     i2u567_41:
  5931   0011E6  EF02  F009         	goto	i2l1174
  5932   0011EA                     i2u567_40:
  5933   0011EA  0470               	decf	_RB6_Flag^0,w,c	;volatile
  5934   0011EC  A4D8               	btfss	status,2,c
  5935   0011EE  EFFB  F008         	goto	i2u568_41
  5936   0011F2  EFFD  F008         	goto	i2u568_40
  5937   0011F6                     i2u568_41:
  5938   0011F6  EF02  F009         	goto	i2l1174
  5939   0011FA                     i2u568_40:
  5940   0011FA                     
  5941                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 97:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 98:         RB6_Flag = 0;
  5942   0011FA  0E00               	movlw	0
  5943   0011FC  6E70               	movwf	_RB6_Flag^0,c	;volatile
  5944   0011FE                     
  5945                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:         RB6_ISR(0);
  5946   0011FE  0E00               	movlw	0
  5947   001200  ECAC  F016         	call	_RB6_ISR
  5948   001204                     i2l1174:
  5949                           
  5950                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 102:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  5951   001204  A6F2               	btfss	242,3,c	;volatile
  5952   001206  EF07  F009         	goto	i2u569_41
  5953   00120A  EF09  F009         	goto	i2u569_40
  5954   00120E                     i2u569_41:
  5955   00120E  EF24  F009         	goto	i2l1176
  5956   001212                     i2u569_40:
  5957   001212  A0F2               	btfss	242,0,c	;volatile
  5958   001214  EF0E  F009         	goto	i2u570_41
  5959   001218  EF10  F009         	goto	i2u570_40
  5960   00121C                     i2u570_41:
  5961   00121C  EF24  F009         	goto	i2l1176
  5962   001220                     i2u570_40:
  5963   001220  BC81               	btfsc	129,6,c	;volatile
  5964   001222  EF15  F009         	goto	i2u571_41
  5965   001226  EF17  F009         	goto	i2u571_40
  5966   00122A                     i2u571_41:
  5967   00122A  EF24  F009         	goto	i2l1176
  5968   00122E                     i2u571_40:
  5969   00122E  5070               	movf	_RB6_Flag^0,w,c	;volatile
  5970   001230  A4D8               	btfss	status,2,c
  5971   001232  EF1D  F009         	goto	i2u572_41
  5972   001236  EF1F  F009         	goto	i2u572_40
  5973   00123A                     i2u572_41:
  5974   00123A  EF24  F009         	goto	i2l1176
  5975   00123E                     i2u572_40:
  5976   00123E                     
  5977                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 105:         RB6_Flag = 1;
  5978   00123E  0E01               	movlw	1
  5979   001240  6E70               	movwf	_RB6_Flag^0,c	;volatile
  5980   001242                     
  5981                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:         RB6_ISR(1);
  5982   001242  0E01               	movlw	1
  5983   001244  ECAC  F016         	call	_RB6_ISR
  5984   001248                     i2l1176:
  5985                           
  5986                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  5987   001248  A6F2               	btfss	242,3,c	;volatile
  5988   00124A  EF29  F009         	goto	i2u573_41
  5989   00124E  EF2B  F009         	goto	i2u573_40
  5990   001252                     i2u573_41:
  5991   001252  EF46  F009         	goto	i2l1178
  5992   001256                     i2u573_40:
  5993   001256  A0F2               	btfss	242,0,c	;volatile
  5994   001258  EF30  F009         	goto	i2u574_41
  5995   00125C  EF32  F009         	goto	i2u574_40
  5996   001260                     i2u574_41:
  5997   001260  EF46  F009         	goto	i2l1178
  5998   001264                     i2u574_40:
  5999   001264  AE81               	btfss	129,7,c	;volatile
  6000   001266  EF37  F009         	goto	i2u575_41
  6001   00126A  EF39  F009         	goto	i2u575_40
  6002   00126E                     i2u575_41:
  6003   00126E  EF46  F009         	goto	i2l1178
  6004   001272                     i2u575_40:
  6005   001272  046F               	decf	_RB7_Flag^0,w,c	;volatile
  6006   001274  A4D8               	btfss	status,2,c
  6007   001276  EF3F  F009         	goto	i2u576_41
  6008   00127A  EF41  F009         	goto	i2u576_40
  6009   00127E                     i2u576_41:
  6010   00127E  EF46  F009         	goto	i2l1178
  6011   001282                     i2u576_40:
  6012   001282                     
  6013                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 111:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 112:         RB7_Flag = 0;
  6014   001282  0E00               	movlw	0
  6015   001284  6E6F               	movwf	_RB7_Flag^0,c	;volatile
  6016   001286                     
  6017                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         RB7_ISR(0);
  6018   001286  0E00               	movlw	0
  6019   001288  EC9F  F016         	call	_RB7_ISR
  6020   00128C                     i2l1178:
  6021                           
  6022                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  6023   00128C  A6F2               	btfss	242,3,c	;volatile
  6024   00128E  EF4B  F009         	goto	i2u577_41
  6025   001292  EF4D  F009         	goto	i2u577_40
  6026   001296                     i2u577_41:
  6027   001296  EF68  F009         	goto	i2l1180
  6028   00129A                     i2u577_40:
  6029   00129A  A0F2               	btfss	242,0,c	;volatile
  6030   00129C  EF52  F009         	goto	i2u578_41
  6031   0012A0  EF54  F009         	goto	i2u578_40
  6032   0012A4                     i2u578_41:
  6033   0012A4  EF68  F009         	goto	i2l1180
  6034   0012A8                     i2u578_40:
  6035   0012A8  BE81               	btfsc	129,7,c	;volatile
  6036   0012AA  EF59  F009         	goto	i2u579_41
  6037   0012AE  EF5B  F009         	goto	i2u579_40
  6038   0012B2                     i2u579_41:
  6039   0012B2  EF68  F009         	goto	i2l1180
  6040   0012B6                     i2u579_40:
  6041   0012B6  506F               	movf	_RB7_Flag^0,w,c	;volatile
  6042   0012B8  A4D8               	btfss	status,2,c
  6043   0012BA  EF61  F009         	goto	i2u580_41
  6044   0012BE  EF63  F009         	goto	i2u580_40
  6045   0012C2                     i2u580_41:
  6046   0012C2  EF68  F009         	goto	i2l1180
  6047   0012C6                     i2u580_40:
  6048   0012C6                     
  6049                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 118:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 119:         RB7_Flag = 1;
  6050   0012C6  0E01               	movlw	1
  6051   0012C8  6E6F               	movwf	_RB7_Flag^0,c	;volatile
  6052   0012CA                     
  6053                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 120:         RB7_ISR(1);
  6054   0012CA  0E01               	movlw	1
  6055   0012CC  EC9F  F016         	call	_RB7_ISR
  6056   0012D0                     i2l1180:
  6057                           
  6058                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:     if((1 == PIE1bits.ADIE) && (1 =
      +                          = PIR1bits.ADIF))
  6059   0012D0  AC9D               	btfss	157,6,c	;volatile
  6060   0012D2  EF6D  F009         	goto	i2u581_41
  6061   0012D6  EF6F  F009         	goto	i2u581_40
  6062   0012DA                     i2u581_41:
  6063   0012DA  EF78  F009         	goto	i2l1182
  6064   0012DE                     i2u581_40:
  6065   0012DE  AC9E               	btfss	158,6,c	;volatile
  6066   0012E0  EF74  F009         	goto	i2u582_41
  6067   0012E4  EF76  F009         	goto	i2u582_40
  6068   0012E8                     i2u582_41:
  6069   0012E8  EF78  F009         	goto	i2l1182
  6070   0012EC                     i2u582_40:
  6071   0012EC                     
  6072                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 127:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 128:         ADC_ISR();
  6073   0012EC  EC57  F016         	call	_ADC_ISR	;wreg free
  6074   0012F0                     i2l1182:
  6075                           
  6076                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 134:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF))
  6077   0012F0  AAF2               	btfss	242,5,c	;volatile
  6078   0012F2  EF7D  F009         	goto	i2u583_41
  6079   0012F6  EF7F  F009         	goto	i2u583_40
  6080   0012FA                     i2u583_41:
  6081   0012FA  EF88  F009         	goto	i2l1184
  6082   0012FE                     i2u583_40:
  6083   0012FE  A4F2               	btfss	242,2,c	;volatile
  6084   001300  EF84  F009         	goto	i2u584_41
  6085   001304  EF86  F009         	goto	i2u584_40
  6086   001308                     i2u584_41:
  6087   001308  EF88  F009         	goto	i2l1184
  6088   00130C                     i2u584_40:
  6089   00130C                     
  6090                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 136:         TMR0_ISR();
  6091   00130C  ECF4  F016         	call	_TMR0_ISR	;wreg free
  6092   001310                     i2l1184:
  6093                           
  6094                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 139:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF))
  6095   001310  A09D               	btfss	157,0,c	;volatile
  6096   001312  EF8D  F009         	goto	i2u585_41
  6097   001316  EF8F  F009         	goto	i2u585_40
  6098   00131A                     i2u585_41:
  6099   00131A  EF98  F009         	goto	i2l1186
  6100   00131E                     i2u585_40:
  6101   00131E  A09E               	btfss	158,0,c	;volatile
  6102   001320  EF94  F009         	goto	i2u586_41
  6103   001324  EF96  F009         	goto	i2u586_40
  6104   001328                     i2u586_41:
  6105   001328  EF98  F009         	goto	i2l1186
  6106   00132C                     i2u586_40:
  6107   00132C                     
  6108                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 141:         TMR1_ISR();
  6109   00132C  ECED  F016         	call	_TMR1_ISR	;wreg free
  6110   001330                     i2l1186:
  6111                           
  6112                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 144:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF))
  6113   001330  A29D               	btfss	157,1,c	;volatile
  6114   001332  EF9D  F009         	goto	i2u587_41
  6115   001336  EF9F  F009         	goto	i2u587_40
  6116   00133A                     i2u587_41:
  6117   00133A  EFA8  F009         	goto	i2l1188
  6118   00133E                     i2u587_40:
  6119   00133E  A29E               	btfss	158,1,c	;volatile
  6120   001340  EFA4  F009         	goto	i2u588_41
  6121   001344  EFA6  F009         	goto	i2u588_40
  6122   001348                     i2u588_41:
  6123   001348  EFA8  F009         	goto	i2l1188
  6124   00134C                     i2u588_40:
  6125   00134C                     
  6126                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 146:         TMR2_ISR();
  6127   00134C  ECFB  F016         	call	_TMR2_ISR	;wreg free
  6128   001350                     i2l1188:
  6129                           
  6130                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF))
  6131   001350  A2A0               	btfss	160,1,c	;volatile
  6132   001352  EFAD  F009         	goto	i2u589_41
  6133   001356  EFAF  F009         	goto	i2u589_40
  6134   00135A                     i2u589_41:
  6135   00135A  EFB8  F009         	goto	i2l1190
  6136   00135E                     i2u589_40:
  6137   00135E  A2A1               	btfss	161,1,c	;volatile
  6138   001360  EFB4  F009         	goto	i2u590_41
  6139   001364  EFB6  F009         	goto	i2u590_40
  6140   001368                     i2u590_41:
  6141   001368  EFB8  F009         	goto	i2l1190
  6142   00136C                     i2u590_40:
  6143   00136C                     
  6144                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 151:         TMR3_ISR();
  6145   00136C  ECE6  F016         	call	_TMR3_ISR	;wreg free
  6146   001370                     i2l1190:
  6147                           
  6148                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 157:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF))
  6149   001370  A89D               	btfss	157,4,c	;volatile
  6150   001372  EFBD  F009         	goto	i2u591_41
  6151   001376  EFBF  F009         	goto	i2u591_40
  6152   00137A                     i2u591_41:
  6153   00137A  EFC8  F009         	goto	i2l1192
  6154   00137E                     i2u591_40:
  6155   00137E  A89E               	btfss	158,4,c	;volatile
  6156   001380  EFC4  F009         	goto	i2u592_41
  6157   001384  EFC6  F009         	goto	i2u592_40
  6158   001388                     i2u592_41:
  6159   001388  EFC8  F009         	goto	i2l1192
  6160   00138C                     i2u592_40:
  6161   00138C                     
  6162                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 158:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 159:         USART_TX_ISR();
  6163   00138C  EC01  F017         	call	_USART_TX_ISR	;wreg free
  6164   001390                     i2l1192:
  6165                           
  6166                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 162:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF))
  6167   001390  AA9D               	btfss	157,5,c	;volatile
  6168   001392  EFCD  F009         	goto	i2u593_41
  6169   001396  EFCF  F009         	goto	i2u593_40
  6170   00139A                     i2u593_41:
  6171   00139A  EFD8  F009         	goto	i2l1194
  6172   00139E                     i2u593_40:
  6173   00139E  AA9E               	btfss	158,5,c	;volatile
  6174   0013A0  EFD4  F009         	goto	i2u594_41
  6175   0013A4  EFD6  F009         	goto	i2u594_40
  6176   0013A8                     i2u594_41:
  6177   0013A8  EFD8  F009         	goto	i2l1194
  6178   0013AC                     i2u594_40:
  6179   0013AC                     
  6180                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 163:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 164:         USART_RX_ISR();
  6181   0013AC  EC12  F017         	call	_USART_RX_ISR	;wreg free
  6182   0013B0                     i2l1194:
  6183                           
  6184                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 170:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF))
  6185   0013B0  A69D               	btfss	157,3,c	;volatile
  6186   0013B2  EFDD  F009         	goto	i2u595_41
  6187   0013B6  EFDF  F009         	goto	i2u595_40
  6188   0013BA                     i2u595_41:
  6189   0013BA  EFE8  F009         	goto	i2l1196
  6190   0013BE                     i2u595_40:
  6191   0013BE  A69E               	btfss	158,3,c	;volatile
  6192   0013C0  EFE4  F009         	goto	i2u596_41
  6193   0013C4  EFE6  F009         	goto	i2u596_40
  6194   0013C8                     i2u596_41:
  6195   0013C8  EFE8  F009         	goto	i2l1196
  6196   0013CC                     i2u596_40:
  6197   0013CC                     
  6198                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 171:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 172:         MSSP_I2C_ISR();
  6199   0013CC  EC03  F017         	call	_MSSP_I2C_ISR	;wreg free
  6200   0013D0                     i2l1196:
  6201                           
  6202                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 175:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF))
  6203   0013D0  A6A0               	btfss	160,3,c	;volatile
  6204   0013D2  EFED  F009         	goto	i2u597_41
  6205   0013D6  EFEF  F009         	goto	i2u597_40
  6206   0013DA                     i2u597_41:
  6207   0013DA  EFF8  F009         	goto	i2l1198
  6208   0013DE                     i2u597_40:
  6209   0013DE  A6A1               	btfss	161,3,c	;volatile
  6210   0013E0  EFF4  F009         	goto	i2u598_41
  6211   0013E4  EFF6  F009         	goto	i2u598_40
  6212   0013E8                     i2u598_41:
  6213   0013E8  EFF8  F009         	goto	i2l1198
  6214   0013EC                     i2u598_40:
  6215   0013EC                     
  6216                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 176:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 177:         MSSP_I2C_BC_ISR();
  6217   0013EC  EC05  F017         	call	_MSSP_I2C_BC_ISR	;wreg free
  6218   0013F0                     i2l1198:
  6219                           
  6220                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 183:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF))
  6221   0013F0  A49D               	btfss	157,2,c	;volatile
  6222   0013F2  EFFD  F009         	goto	i2u599_41
  6223   0013F6  EFFF  F009         	goto	i2u599_40
  6224   0013FA                     i2u599_41:
  6225   0013FA  EF08  F00A         	goto	i2l1200
  6226   0013FE                     i2u599_40:
  6227   0013FE  A49E               	btfss	158,2,c	;volatile
  6228   001400  EF04  F00A         	goto	i2u600_41
  6229   001404  EF06  F00A         	goto	i2u600_40
  6230   001408                     i2u600_41:
  6231   001408  EF08  F00A         	goto	i2l1200
  6232   00140C                     i2u600_40:
  6233   00140C                     
  6234                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 184:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 185:         CCP1_ISR();
  6235   00140C  EC0F  F017         	call	_CCP1_ISR	;wreg free
  6236   001410                     i2l1200:
  6237                           
  6238                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 188:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF))
  6239   001410  A0A0               	btfss	160,0,c	;volatile
  6240   001412  EF0D  F00A         	goto	i2u601_41
  6241   001416  EF0F  F00A         	goto	i2u601_40
  6242   00141A                     i2u601_41:
  6243   00141A  EF18  F00A         	goto	i2l1203
  6244   00141E                     i2u601_40:
  6245   00141E  A0A1               	btfss	161,0,c	;volatile
  6246   001420  EF14  F00A         	goto	i2u602_41
  6247   001424  EF16  F00A         	goto	i2u602_40
  6248   001428                     i2u602_41:
  6249   001428  EF18  F00A         	goto	i2l1203
  6250   00142C                     i2u602_40:
  6251   00142C                     
  6252                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 189:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 190:         CCP2_ISR();
  6253   00142C  EC0D  F017         	call	_CCP2_ISR	;wreg free
  6254   001430                     i2l1203:
  6255   001430  C00C  FFDA         	movff	??_InterruptManager+3,fsr2h
  6256   001434  C00B  FFD9         	movff	??_InterruptManager+2,fsr2l
  6257   001438  C00A  FFFB         	movff	??_InterruptManager+1,pclatu
  6258   00143C  C009  FFFA         	movff	??_InterruptManager,pclath
  6259   001440  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6260   001442  0011               	retfie		f
  6261   001444                     __end_of_InterruptManager:
  6262                           	callstack 0
  6263                           
  6264 ;; *************** function _USART_TX_ISR *****************
  6265 ;; Defined at:
  6266 ;;		line 409 in file "MCAL_Layer/USART/hal_usart.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		None
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;Total ram usage:        0 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_InterruptManager
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text37
  6294   002E02                     __ptext37:
  6295                           	callstack 0
  6296   002E02                     _USART_TX_ISR:
  6297                           	callstack 20
  6298   002E02                     
  6299                           ;MCAL_Layer/USART/hal_usart.c: 412:     (PIE1bits.TXIE = 0);
  6300   002E02  989D               	bcf	157,4,c	;volatile
  6301   002E04  0012               	return		;funcret
  6302   002E06                     __end_of_USART_TX_ISR:
  6303                           	callstack 0
  6304                           
  6305 ;; *************** function _USART_RX_ISR *****************
  6306 ;; Defined at:
  6307 ;;		line 423 in file "MCAL_Layer/USART/hal_usart.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;		None
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, status,2, status,0
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;Total ram usage:        0 bytes
  6326 ;; Hardware stack levels used: 1
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_InterruptManager
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text38
  6335   002E24                     __ptext38:
  6336                           	callstack 0
  6337   002E24                     _USART_RX_ISR:
  6338                           	callstack 20
  6339   002E24  0012               	return		;funcret
  6340   002E26                     __end_of_USART_RX_ISR:
  6341                           	callstack 0
  6342                           
  6343 ;; *************** function _TMR3_ISR *****************
  6344 ;; Defined at:
  6345 ;;		line 172 in file "MCAL_Layer/Timer3/hal_timer3.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_InterruptManager
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text39
  6373   002DCC                     __ptext39:
  6374                           	callstack 0
  6375   002DCC                     _TMR3_ISR:
  6376                           	callstack 20
  6377   002DCC                     
  6378                           ;MCAL_Layer/Timer3/hal_timer3.c: 174:     (PIR2bits.TMR3IF = 0);
  6379   002DCC  92A1               	bcf	161,1,c	;volatile
  6380   002DCE                     
  6381                           ;MCAL_Layer/Timer3/hal_timer3.c: 175:     TMR3H = (timer3_preload) >> 8;
  6382   002DCE  0100               	movlb	0	; () banked
  6383   002DD0  5197               	movf	(_timer3_preload+1)& (0+255),w,b
  6384   002DD2  6EB3               	movwf	179,c	;volatile
  6385   002DD4                     
  6386                           ; BSR set to: 0
  6387                           ;MCAL_Layer/Timer3/hal_timer3.c: 176:     TMR3L = (uint8)(timer3_preload);
  6388   002DD4  C096  FFB2         	movff	_timer3_preload,4018	;volatile
  6389   002DD8                     
  6390                           ; BSR set to: 0
  6391   002DD8  0012               	return		;funcret
  6392   002DDA                     __end_of_TMR3_ISR:
  6393                           	callstack 0
  6394                           
  6395 ;; *************** function _TMR2_ISR *****************
  6396 ;; Defined at:
  6397 ;;		line 162 in file "MCAL_Layer/Timer2/hal_timer2.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;		None
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		None
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;Total ram usage:        0 bytes
  6416 ;; Hardware stack levels used: 1
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_InterruptManager
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text40
  6425   002DF6                     __ptext40:
  6426                           	callstack 0
  6427   002DF6                     _TMR2_ISR:
  6428                           	callstack 20
  6429   002DF6                     
  6430                           ;MCAL_Layer/Timer2/hal_timer2.c: 164:     (PIR1bits.TMR2IF = 0);
  6431   002DF6  929E               	bcf	158,1,c	;volatile
  6432                           
  6433                           ;MCAL_Layer/Timer2/hal_timer2.c: 165:     TMR2 = timer2_preload;
  6434   002DF8  C067  FFCC         	movff	_timer2_preload,4044	;volatile
  6435   002DFC  0012               	return		;funcret
  6436   002DFE                     __end_of_TMR2_ISR:
  6437                           	callstack 0
  6438                           
  6439 ;; *************** function _TMR1_ISR *****************
  6440 ;; Defined at:
  6441 ;;		line 172 in file "MCAL_Layer/Timer1/hal_timer1.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg, status,2
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;Total ram usage:        0 bytes
  6460 ;; Hardware stack levels used: 1
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_InterruptManager
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text41
  6469   002DDA                     __ptext41:
  6470                           	callstack 0
  6471   002DDA                     _TMR1_ISR:
  6472                           	callstack 20
  6473   002DDA                     
  6474                           ;MCAL_Layer/Timer1/hal_timer1.c: 174:     (PIR1bits.TMR1IF = 0);
  6475   002DDA  909E               	bcf	158,0,c	;volatile
  6476   002DDC                     
  6477                           ;MCAL_Layer/Timer1/hal_timer1.c: 175:     TMR1H = (timer1_preload) >> 8;
  6478   002DDC  0100               	movlb	0	; () banked
  6479   002DDE  519D               	movf	(_timer1_preload+1)& (0+255),w,b
  6480   002DE0  6ECF               	movwf	207,c	;volatile
  6481   002DE2                     
  6482                           ; BSR set to: 0
  6483                           ;MCAL_Layer/Timer1/hal_timer1.c: 176:     TMR1L = (uint8)(timer1_preload);
  6484   002DE2  C09C  FFCE         	movff	_timer1_preload,4046	;volatile
  6485   002DE6                     
  6486                           ; BSR set to: 0
  6487   002DE6  0012               	return		;funcret
  6488   002DE8                     __end_of_TMR1_ISR:
  6489                           	callstack 0
  6490                           
  6491 ;; *************** function _TMR0_ISR *****************
  6492 ;; Defined at:
  6493 ;;		line 186 in file "MCAL_Layer/Timer0/hal_timer0.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;Total ram usage:        0 bytes
  6512 ;; Hardware stack levels used: 1
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_InterruptManager
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text42
  6521   002DE8                     __ptext42:
  6522                           	callstack 0
  6523   002DE8                     _TMR0_ISR:
  6524                           	callstack 20
  6525   002DE8                     
  6526                           ;MCAL_Layer/Timer0/hal_timer0.c: 188:     (INTCONbits.TMR0IF = 0);
  6527   002DE8  94F2               	bcf	242,2,c	;volatile
  6528   002DEA                     
  6529                           ;MCAL_Layer/Timer0/hal_timer0.c: 189:     TMR0H = (timer0_preload) >> 8;
  6530   002DEA  0100               	movlb	0	; () banked
  6531   002DEC  51A1               	movf	(_timer0_preload+1)& (0+255),w,b
  6532   002DEE  6ED7               	movwf	215,c	;volatile
  6533   002DF0                     
  6534                           ; BSR set to: 0
  6535                           ;MCAL_Layer/Timer0/hal_timer0.c: 190:     TMR0L = (uint8)(timer0_preload);
  6536   002DF0  C0A0  FFD6         	movff	_timer0_preload,4054	;volatile
  6537   002DF4                     
  6538                           ; BSR set to: 0
  6539   002DF4  0012               	return		;funcret
  6540   002DF6                     __end_of_TMR0_ISR:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _RB7_ISR *****************
  6544 ;; Defined at:
  6545 ;;		line 284 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  RB7_Source      1    wreg     unsigned char 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      void 
  6552 ;; Registers used:
  6553 ;;		wreg, status,2, status,0
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;Total ram usage:        1 bytes
  6564 ;; Hardware stack levels used: 1
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_InterruptManager
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text43
  6573   002D3E                     __ptext43:
  6574                           	callstack 0
  6575   002D3E                     _RB7_ISR:
  6576                           	callstack 20
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;incstack = 0
  6580                           ;RB7_ISR@RB7_Source stored from wreg
  6581   002D3E  6E01               	movwf	RB7_ISR@RB7_Source^0,c
  6582   002D40                     
  6583                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 284: void RB7_ISR(uint8 RB7_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 285: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 286:     (INTCONbits.RBIF = 0);
  6584   002D40  90F2               	bcf	242,0,c	;volatile
  6585   002D42                     
  6586                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 287:     if(0 == RB7_Source)
  6587   002D42  5001               	movf	RB7_ISR@RB7_Source^0,w,c
  6588   002D44  A4D8               	btfss	status,2,c
  6589   002D46  EFA7  F016         	goto	i2u451_41
  6590   002D4A  EFA9  F016         	goto	i2u451_40
  6591   002D4E                     i2u451_41:
  6592   002D4E  EFAB  F016         	goto	i2l6166
  6593   002D52                     i2u451_40:
  6594   002D52  EFAB  F016         	goto	i2l987
  6595   002D56                     i2l6166:
  6596   002D56                     i2l987:
  6597   002D56  0012               	return		;funcret
  6598   002D58                     __end_of_RB7_ISR:
  6599                           	callstack 0
  6600                           
  6601 ;; *************** function _RB6_ISR *****************
  6602 ;; Defined at:
  6603 ;;		line 264 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  RB6_Source      1    wreg     unsigned char 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      void 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;Total ram usage:        1 bytes
  6622 ;; Hardware stack levels used: 1
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_InterruptManager
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text44
  6631   002D58                     __ptext44:
  6632                           	callstack 0
  6633   002D58                     _RB6_ISR:
  6634                           	callstack 20
  6635                           
  6636                           ;incstack = 0
  6637                           ;RB6_ISR@RB6_Source stored from wreg
  6638   002D58  6E01               	movwf	RB6_ISR@RB6_Source^0,c
  6639   002D5A                     
  6640                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 264: void RB6_ISR(uint8 RB6_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 265: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 266:     (INTCONbits.RBIF = 0);
  6641   002D5A  90F2               	bcf	242,0,c	;volatile
  6642   002D5C                     
  6643                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 267:     if(0 == RB6_Source)
  6644   002D5C  5001               	movf	RB6_ISR@RB6_Source^0,w,c
  6645   002D5E  A4D8               	btfss	status,2,c
  6646   002D60  EFB4  F016         	goto	i2u450_41
  6647   002D64  EFB6  F016         	goto	i2u450_40
  6648   002D68                     i2u450_41:
  6649   002D68  EFB8  F016         	goto	i2l6152
  6650   002D6C                     i2u450_40:
  6651   002D6C  EFB8  F016         	goto	i2l976
  6652   002D70                     i2l6152:
  6653   002D70                     i2l976:
  6654   002D70  0012               	return		;funcret
  6655   002D72                     __end_of_RB6_ISR:
  6656                           	callstack 0
  6657                           
  6658 ;; *************** function _RB5_ISR *****************
  6659 ;; Defined at:
  6660 ;;		line 244 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  RB5_Source      1    wreg     unsigned char 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;Total ram usage:        1 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_InterruptManager
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text45
  6688   002D72                     __ptext45:
  6689                           	callstack 0
  6690   002D72                     _RB5_ISR:
  6691                           	callstack 20
  6692                           
  6693                           ;incstack = 0
  6694                           ;RB5_ISR@RB5_Source stored from wreg
  6695   002D72  6E01               	movwf	RB5_ISR@RB5_Source^0,c
  6696   002D74                     
  6697                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 244: void RB5_ISR(uint8 RB5_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 245: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 246:     (INTCONbits.RBIF = 0);
  6698   002D74  90F2               	bcf	242,0,c	;volatile
  6699   002D76                     
  6700                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 247:     if(0 == RB5_Source)
  6701   002D76  5001               	movf	RB5_ISR@RB5_Source^0,w,c
  6702   002D78  A4D8               	btfss	status,2,c
  6703   002D7A  EFC1  F016         	goto	i2u449_41
  6704   002D7E  EFC3  F016         	goto	i2u449_40
  6705   002D82                     i2u449_41:
  6706   002D82  EFC5  F016         	goto	i2l6138
  6707   002D86                     i2u449_40:
  6708   002D86  EFC5  F016         	goto	i2l965
  6709   002D8A                     i2l6138:
  6710   002D8A                     i2l965:
  6711   002D8A  0012               	return		;funcret
  6712   002D8C                     __end_of_RB5_ISR:
  6713                           	callstack 0
  6714                           
  6715 ;; *************** function _RB4_ISR *****************
  6716 ;; Defined at:
  6717 ;;		line 224 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  RB4_Source      1    wreg     unsigned char 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      void 
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;Total ram usage:        1 bytes
  6736 ;; Hardware stack levels used: 1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_InterruptManager
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text46
  6745   002D8C                     __ptext46:
  6746                           	callstack 0
  6747   002D8C                     _RB4_ISR:
  6748                           	callstack 20
  6749                           
  6750                           ;incstack = 0
  6751                           ;RB4_ISR@RB4_Source stored from wreg
  6752   002D8C  6E01               	movwf	RB4_ISR@RB4_Source^0,c
  6753   002D8E                     
  6754                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 224: void RB4_ISR(uint8 RB4_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 225: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 226:     (INTCONbits.RBIF = 0);
  6755   002D8E  90F2               	bcf	242,0,c	;volatile
  6756   002D90                     
  6757                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 227:     if(0 == RB4_Source)
  6758   002D90  5001               	movf	RB4_ISR@RB4_Source^0,w,c
  6759   002D92  A4D8               	btfss	status,2,c
  6760   002D94  EFCE  F016         	goto	i2u448_41
  6761   002D98  EFD0  F016         	goto	i2u448_40
  6762   002D9C                     i2u448_41:
  6763   002D9C  EFD2  F016         	goto	i2l6124
  6764   002DA0                     i2u448_40:
  6765   002DA0  EFD2  F016         	goto	i2l954
  6766   002DA4                     i2l6124:
  6767   002DA4                     i2l954:
  6768   002DA4  0012               	return		;funcret
  6769   002DA6                     __end_of_RB4_ISR:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _MSSP_I2C_ISR *****************
  6773 ;; Defined at:
  6774 ;;		line 357 in file "MCAL_Layer/I2C/hal_i2c.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		None
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;Total ram usage:        0 bytes
  6793 ;; Hardware stack levels used: 1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_InterruptManager
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text47
  6802   002E06                     __ptext47:
  6803                           	callstack 0
  6804   002E06                     _MSSP_I2C_ISR:
  6805                           	callstack 20
  6806   002E06                     
  6807                           ;MCAL_Layer/I2C/hal_i2c.c: 360:     (PIR1bits.SSPIF = 0);
  6808   002E06  969E               	bcf	158,3,c	;volatile
  6809   002E08  0012               	return		;funcret
  6810   002E0A                     __end_of_MSSP_I2C_ISR:
  6811                           	callstack 0
  6812                           
  6813 ;; *************** function _MSSP_I2C_BC_ISR *****************
  6814 ;; Defined at:
  6815 ;;		line 372 in file "MCAL_Layer/I2C/hal_i2c.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;		None
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1    wreg      void 
  6822 ;; Registers used:
  6823 ;;		None
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;Total ram usage:        0 bytes
  6834 ;; Hardware stack levels used: 1
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_InterruptManager
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text48
  6843   002E0A                     __ptext48:
  6844                           	callstack 0
  6845   002E0A                     _MSSP_I2C_BC_ISR:
  6846                           	callstack 20
  6847   002E0A                     
  6848                           ;MCAL_Layer/I2C/hal_i2c.c: 375:     (PIR2bits.BCLIF = 0);
  6849   002E0A  96A1               	bcf	161,3,c	;volatile
  6850   002E0C  0012               	return		;funcret
  6851   002E0E                     __end_of_MSSP_I2C_BC_ISR:
  6852                           	callstack 0
  6853                           
  6854 ;; *************** function _INT2_ISR *****************
  6855 ;; Defined at:
  6856 ;;		line 213 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;		None
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;		None
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      void 
  6863 ;; Registers used:
  6864 ;;		None
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;Total ram usage:        0 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; This function calls:
  6877 ;;		Nothing
  6878 ;; This function is called by:
  6879 ;;		_InterruptManager
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text49
  6884   002E0E                     __ptext49:
  6885                           	callstack 0
  6886   002E0E                     _INT2_ISR:
  6887                           	callstack 20
  6888   002E0E                     
  6889                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 215:     (INTCON3bits.INT2IF = 0);
  6890   002E0E  92F0               	bcf	240,1,c	;volatile
  6891   002E10  0012               	return		;funcret
  6892   002E12                     __end_of_INT2_ISR:
  6893                           	callstack 0
  6894                           
  6895 ;; *************** function _INT1_ISR *****************
  6896 ;; Defined at:
  6897 ;;		line 203 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;		None
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1    wreg      void 
  6904 ;; Registers used:
  6905 ;;		None
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;Total ram usage:        0 bytes
  6916 ;; Hardware stack levels used: 1
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_InterruptManager
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text50
  6925   002E12                     __ptext50:
  6926                           	callstack 0
  6927   002E12                     _INT1_ISR:
  6928                           	callstack 20
  6929   002E12                     
  6930                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 205:     (INTCON3bits.INT1IF = 0);
  6931   002E12  90F0               	bcf	240,0,c	;volatile
  6932   002E14  0012               	return		;funcret
  6933   002E16                     __end_of_INT1_ISR:
  6934                           	callstack 0
  6935                           
  6936 ;; *************** function _INT0_ISR *****************
  6937 ;; Defined at:
  6938 ;;		line 193 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;		None
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;		None
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		None
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;Total ram usage:        0 bytes
  6957 ;; Hardware stack levels used: 1
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_InterruptManager
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text51
  6966   002E16                     __ptext51:
  6967                           	callstack 0
  6968   002E16                     _INT0_ISR:
  6969                           	callstack 20
  6970   002E16                     
  6971                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 195:     (INTCONbits.INT0IF = 0);
  6972   002E16  92F2               	bcf	242,1,c	;volatile
  6973   002E18  0012               	return		;funcret
  6974   002E1A                     __end_of_INT0_ISR:
  6975                           	callstack 0
  6976                           
  6977 ;; *************** function _CCP2_ISR *****************
  6978 ;; Defined at:
  6979 ;;		line 401 in file "MCAL_Layer/CCP/hal_ccp.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		None
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;Total ram usage:        0 bytes
  6998 ;; Hardware stack levels used: 1
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_InterruptManager
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text52
  7007   002E1A                     __ptext52:
  7008                           	callstack 0
  7009   002E1A                     _CCP2_ISR:
  7010                           	callstack 20
  7011   002E1A                     
  7012                           ;MCAL_Layer/CCP/hal_ccp.c: 403:     (PIR2bits.CCP2IF = 0);
  7013   002E1A  90A1               	bcf	161,0,c	;volatile
  7014   002E1C  0012               	return		;funcret
  7015   002E1E                     __end_of_CCP2_ISR:
  7016                           	callstack 0
  7017                           
  7018 ;; *************** function _CCP1_ISR *****************
  7019 ;; Defined at:
  7020 ;;		line 388 in file "MCAL_Layer/CCP/hal_ccp.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;		None
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  1    wreg      void 
  7027 ;; Registers used:
  7028 ;;		None
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;Total ram usage:        0 bytes
  7039 ;; Hardware stack levels used: 1
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_InterruptManager
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text53
  7048   002E1E                     __ptext53:
  7049                           	callstack 0
  7050   002E1E                     _CCP1_ISR:
  7051                           	callstack 20
  7052   002E1E                     
  7053                           ;MCAL_Layer/CCP/hal_ccp.c: 390:     (PIR1bits.CCP1IF = 0);
  7054   002E1E  949E               	bcf	158,2,c	;volatile
  7055   002E20  0012               	return		;funcret
  7056   002E22                     __end_of_CCP1_ISR:
  7057                           	callstack 0
  7058                           
  7059 ;; *************** function _ADC_ISR *****************
  7060 ;; Defined at:
  7061 ;;		line 341 in file "MCAL_Layer/ADC/hal_adc.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;Total ram usage:        0 bytes
  7080 ;; Hardware stack levels used: 1
  7081 ;; Hardware stack levels required when called: 2
  7082 ;; This function calls:
  7083 ;;		NULL
  7084 ;;		_ADC_DefaultInterruptHandler
  7085 ;; This function is called by:
  7086 ;;		_InterruptManager
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text54
  7091   002CAE                     __ptext54:
  7092                           	callstack 0
  7093   002CAE                     _ADC_ISR:
  7094                           	callstack 18
  7095   002CAE                     
  7096                           ;MCAL_Layer/ADC/hal_adc.c: 343:     (PIR1bits.ADIF = 0);
  7097   002CAE  9C9E               	bcf	158,6,c	;volatile
  7098   002CB0                     
  7099                           ;MCAL_Layer/ADC/hal_adc.c: 344:     if(ADC_InterruptHandler )
  7100   002CB0  0100               	movlb	0	; () banked
  7101   002CB2  51C4               	movf	_ADC_InterruptHandler& (0+255),w,b
  7102   002CB4  11C5               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7103   002CB6  B4D8               	btfsc	status,2,c
  7104   002CB8  EF60  F016         	goto	i2u446_41
  7105   002CBC  EF62  F016         	goto	i2u446_40
  7106   002CC0                     i2u446_41:
  7107   002CC0  EF6E  F016         	goto	i2l457
  7108   002CC4                     i2u446_40:
  7109   002CC4                     
  7110                           ; BSR set to: 0
  7111                           ;MCAL_Layer/ADC/hal_adc.c: 345:     {;MCAL_Layer/ADC/hal_adc.c: 346:         ADC_Interru
      +                          ptHandler();
  7112   002CC4  D802               	call	i2u447_48
  7113   002CC6  EF6E  F016         	goto	i2u447_49
  7114   002CCA                     i2u447_48:
  7115   002CCA  0005               	push	
  7116   002CCC  6EFA               	movwf	pclath,c
  7117   002CCE  51C4               	movf	_ADC_InterruptHandler& (0+255),w,b
  7118   002CD0  6EFD               	movwf	tosl,c
  7119   002CD2  51C5               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7120   002CD4  6EFE               	movwf	tosh,c
  7121   002CD6  6AFF               	clrf	tosu,c
  7122   002CD8  50FA               	movf	pclath,w,c
  7123   002CDA  0012               	return		;indir
  7124   002CDC                     i2u447_49:
  7125   002CDC                     i2l457:
  7126   002CDC  0012               	return		;funcret
  7127   002CDE                     __end_of_ADC_ISR:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _ADC_DefaultInterruptHandler *****************
  7131 ;; Defined at:
  7132 ;;		line 128 in file "application.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  ret             1    0        unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;Total ram usage:        0 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 1
  7153 ;; This function calls:
  7154 ;;		_ADC_GetConversionResult
  7155 ;; This function is called by:
  7156 ;;		_ADC_ISR
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text55
  7161   00241E                     __ptext55:
  7162                           	callstack 0
  7163   00241E                     _ADC_DefaultInterruptHandler:
  7164                           	callstack 18
  7165   00241E                     
  7166                           ;application.c: 131:     if(0 == ADC_Req)
  7167   00241E  5066               	movf	_ADC_Req^0,w,c
  7168   002420  A4D8               	btfss	status,2,c
  7169   002422  EF15  F012         	goto	i2u430_41
  7170   002426  EF17  F012         	goto	i2u430_40
  7171   00242A                     i2u430_41:
  7172   00242A  EF25  F012         	goto	i2l5954
  7173   00242E                     i2u430_40:
  7174   00242E  0EF2               	movlw	low _adc_1
  7175   002430  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7176   002432  0E00               	movlw	high _adc_1
  7177   002434  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7178   002436  C08A  F003         	movff	_adc_result_1,ADC_GetConversionResult@conversion_result
  7179   00243A  C08B  F004         	movff	_adc_result_1+1,ADC_GetConversionResult@conversion_result+1
  7180   00243E  ECF0  F010         	call	_ADC_GetConversionResult	;wreg free
  7181   002442                     
  7182                           ;application.c: 134:             ADC_Req = 1;
  7183   002442  0E01               	movlw	1
  7184   002444  6E66               	movwf	_ADC_Req^0,c
  7185                           
  7186                           ;application.c: 135:         }
  7187   002446  EF69  F012         	goto	i2l1627
  7188   00244A                     i2l5954:
  7189   00244A  0466               	decf	_ADC_Req^0,w,c
  7190   00244C  A4D8               	btfss	status,2,c
  7191   00244E  EF2B  F012         	goto	i2u431_41
  7192   002452  EF2D  F012         	goto	i2u431_40
  7193   002456                     i2u431_41:
  7194   002456  EF3B  F012         	goto	i2l5960
  7195   00245A                     i2u431_40:
  7196   00245A  0EF2               	movlw	low _adc_1
  7197   00245C  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7198   00245E  0E00               	movlw	high _adc_1
  7199   002460  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7200   002462  C088  F003         	movff	_adc_result_2,ADC_GetConversionResult@conversion_result
  7201   002466  C089  F004         	movff	_adc_result_2+1,ADC_GetConversionResult@conversion_result+1
  7202   00246A  ECF0  F010         	call	_ADC_GetConversionResult	;wreg free
  7203   00246E                     
  7204                           ;application.c: 139:             ADC_Req = 2;
  7205   00246E  0E02               	movlw	2
  7206   002470  6E66               	movwf	_ADC_Req^0,c
  7207                           
  7208                           ;application.c: 140:         }
  7209   002472  EF69  F012         	goto	i2l1627
  7210   002476                     i2l5960:
  7211   002476  0E02               	movlw	2
  7212   002478  1866               	xorwf	_ADC_Req^0,w,c
  7213   00247A  A4D8               	btfss	status,2,c
  7214   00247C  EF42  F012         	goto	i2u432_41
  7215   002480  EF44  F012         	goto	i2u432_40
  7216   002484                     i2u432_41:
  7217   002484  EF52  F012         	goto	i2l5966
  7218   002488                     i2u432_40:
  7219   002488  0EF2               	movlw	low _adc_1
  7220   00248A  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7221   00248C  0E00               	movlw	high _adc_1
  7222   00248E  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7223   002490  C086  F003         	movff	_adc_result_3,ADC_GetConversionResult@conversion_result
  7224   002494  C087  F004         	movff	_adc_result_3+1,ADC_GetConversionResult@conversion_result+1
  7225   002498  ECF0  F010         	call	_ADC_GetConversionResult	;wreg free
  7226   00249C                     
  7227                           ;application.c: 144:             ADC_Req = 3;
  7228   00249C  0E03               	movlw	3
  7229   00249E  6E66               	movwf	_ADC_Req^0,c
  7230                           
  7231                           ;application.c: 145:         }
  7232   0024A0  EF69  F012         	goto	i2l1627
  7233   0024A4                     i2l5966:
  7234   0024A4  0E03               	movlw	3
  7235   0024A6  1866               	xorwf	_ADC_Req^0,w,c
  7236   0024A8  A4D8               	btfss	status,2,c
  7237   0024AA  EF59  F012         	goto	i2u433_41
  7238   0024AE  EF5B  F012         	goto	i2u433_40
  7239   0024B2                     i2u433_41:
  7240   0024B2  EF69  F012         	goto	i2l1622
  7241   0024B6                     i2u433_40:
  7242   0024B6  0EF2               	movlw	low _adc_1
  7243   0024B8  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7244   0024BA  0E00               	movlw	high _adc_1
  7245   0024BC  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7246   0024BE  C084  F003         	movff	_adc_result_4,ADC_GetConversionResult@conversion_result
  7247   0024C2  C085  F004         	movff	_adc_result_4+1,ADC_GetConversionResult@conversion_result+1
  7248   0024C6  ECF0  F010         	call	_ADC_GetConversionResult	;wreg free
  7249   0024CA                     
  7250                           ;application.c: 149:             ADC_Req = 0;
  7251   0024CA  0E00               	movlw	0
  7252   0024CC  6E66               	movwf	_ADC_Req^0,c
  7253                           
  7254                           ;application.c: 150:         }
  7255   0024CE  EF69  F012         	goto	i2l1627
  7256   0024D2                     i2l1622:
  7257   0024D2                     i2l1627:
  7258   0024D2  0012               	return		;funcret
  7259   0024D4                     __end_of_ADC_DefaultInterruptHandler:
  7260                           	callstack 0
  7261                           
  7262 ;; *************** function _ADC_GetConversionResult *****************
  7263 ;; Defined at:
  7264 ;;		line 193 in file "MCAL_Layer/ADC/hal_adc.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  _adc            2    0[COMRAM] PTR const struct .
  7267 ;;		 -> adc_1(7), 
  7268 ;;  conversion_r    2    2[COMRAM] PTR unsigned short 
  7269 ;;		 -> RAM(3967), 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  ret             1    7[COMRAM] unsigned char 
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1    wreg      unsigned char 
  7274 ;; Registers used:
  7275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7281 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;Total ram usage:        8 bytes
  7286 ;; Hardware stack levels used: 1
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_ADC_DefaultInterruptHandler
  7291 ;;		_ADC_GetConversion_Blocking
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text56
  7296   0021E0                     __ptext56:
  7297                           	callstack 0
  7298   0021E0                     _ADC_GetConversionResult:
  7299                           	callstack 18
  7300   0021E0                     
  7301                           ;MCAL_Layer/ADC/hal_adc.c: 196:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _result))
  7302   0021E0  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7303   0021E2  1002               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7304   0021E4  B4D8               	btfsc	status,2,c
  7305   0021E6  EFF7  F010         	goto	i2u412_41
  7306   0021EA  EFF9  F010         	goto	i2u412_40
  7307   0021EE                     i2u412_41:
  7308   0021EE  EF02  F011         	goto	i2l5752
  7309   0021F2                     i2u412_40:
  7310   0021F2  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  7311   0021F4  1004               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  7312   0021F6  A4D8               	btfss	status,2,c
  7313   0021F8  EF00  F011         	goto	i2u413_41
  7314   0021FC  EF02  F011         	goto	i2u413_40
  7315   002200                     i2u413_41:
  7316   002200  EF06  F011         	goto	i2l5754
  7317   002204                     i2u413_40:
  7318   002204                     i2l5752:
  7319                           
  7320                           ;MCAL_Layer/ADC/hal_adc.c: 197:     {;MCAL_Layer/ADC/hal_adc.c: 198:         ret = (Std_
      +                          ReturnType)0x00;
  7321   002204  0E00               	movlw	0
  7322   002206  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  7323                           
  7324                           ;MCAL_Layer/ADC/hal_adc.c: 199:     }
  7325   002208  EF50  F011         	goto	i2l5766
  7326   00220C                     i2l5754:
  7327                           
  7328                           ;MCAL_Layer/ADC/hal_adc.c: 201:     {;MCAL_Layer/ADC/hal_adc.c: 202:         if(0x01U ==
      +                           _adc->result_format)
  7329   00220C  EE20 F006          	lfsr	2,6
  7330   002210  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7331   002212  26D9               	addwf	fsr2l,f,c
  7332   002214  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7333   002216  22DA               	addwfc	fsr2h,f,c
  7334   002218  A2DF               	btfss	indf2,1,c
  7335   00221A  EF11  F011         	goto	i2u414_41
  7336   00221E  EF13  F011         	goto	i2u414_40
  7337   002222                     i2u414_41:
  7338   002222  EF27  F011         	goto	i2l5758
  7339   002226                     i2u414_40:
  7340   002226                     i2l5756:
  7341                           
  7342                           ;MCAL_Layer/ADC/hal_adc.c: 203:         {;MCAL_Layer/ADC/hal_adc.c: 204:             *co
      +                          nversion_result = (adc_result_t)((ADRESH << 8) + ADRESL);
  7343   002226  50C3               	movf	195,w,c	;volatile
  7344   002228  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  7345   00222C  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7346   00222E  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7347   002232  6A05               	clrf	??_ADC_GetConversionResult^0,c
  7348   002234  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  7349   002236  0E00               	movlw	0
  7350   002238  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7351   00223A  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  7352   00223E  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  7353   002242  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7354   002246  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7355                           
  7356                           ;MCAL_Layer/ADC/hal_adc.c: 205:         }
  7357   00224A  EF4E  F011         	goto	i2l5764
  7358   00224E                     i2l5758:
  7359   00224E  EE20 F006          	lfsr	2,6
  7360   002252  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7361   002254  26D9               	addwf	fsr2l,f,c
  7362   002256  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7363   002258  22DA               	addwfc	fsr2h,f,c
  7364   00225A  B2DF               	btfsc	indf2,1,c
  7365   00225C  EF32  F011         	goto	i2u415_41
  7366   002260  EF34  F011         	goto	i2u415_40
  7367   002264                     i2u415_41:
  7368   002264  EF13  F011         	goto	i2l5756
  7369   002268                     i2u415_40:
  7370   002268                     
  7371                           ;MCAL_Layer/ADC/hal_adc.c: 207:         {;MCAL_Layer/ADC/hal_adc.c: 208:             *co
      +                          nversion_result = (adc_result_t)(((ADRESH << 8) + ADRESL) >> 6);
  7372   002268  50C3               	movf	195,w,c	;volatile
  7373   00226A  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  7374   00226E  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7375   002270  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7376   002274  6A05               	clrf	??_ADC_GetConversionResult^0,c
  7377   002276  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  7378   002278  0E00               	movlw	0
  7379   00227A  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7380   00227C  0E06               	movlw	6
  7381   00227E  6E07               	movwf	(??_ADC_GetConversionResult+2)^0,c
  7382   002280                     i2u416_45:
  7383   002280  3406               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  7384   002282  3206               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  7385   002284  3205               	rrcf	??_ADC_GetConversionResult^0,f,c
  7386   002286  2E07               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  7387   002288  EF40  F011         	goto	i2u416_45
  7388   00228C  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  7389   002290  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  7390   002294  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7391   002298  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7392   00229C                     i2l5764:
  7393                           
  7394                           ;MCAL_Layer/ADC/hal_adc.c: 214:         ret = (Std_ReturnType)0x01;
  7395   00229C  0E01               	movlw	1
  7396   00229E  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  7397   0022A0                     i2l5766:
  7398                           
  7399                           ;MCAL_Layer/ADC/hal_adc.c: 216:     return ret;
  7400   0022A0  5008               	movf	ADC_GetConversionResult@ret^0,w,c
  7401   0022A2  0012               	return		;funcret
  7402   0022A4                     __end_of_ADC_GetConversionResult:
  7403                           	callstack 0
  7404                           
  7405                           	psect	text57
  7406   000000                     __ptext57:
  7407                           	callstack 0
  7408   000000                     
  7409                           	psect	rparam
  7410   000000                     
  7411                           	psect	temp
  7412   000073                     btemp:
  7413                           	callstack 0
  7414   000073                     	ds	1
  7415   000000                     int$flags	set	btemp
  7416   000000                     wtemp8	set	btemp+1
  7417   000000                     ttemp5	set	btemp+1
  7418   000000                     ttemp6	set	btemp+4
  7419   000000                     ttemp7	set	btemp+8
  7420                           
  7421                           	psect	idloc
  7422                           
  7423                           ;Config register IDLOC0 @ 0x200000
  7424                           ;	unspecified, using default values
  7425   200000                     	org	2097152
  7426   200000  FF                 	db	255
  7427                           
  7428                           ;Config register IDLOC1 @ 0x200001
  7429                           ;	unspecified, using default values
  7430   200001                     	org	2097153
  7431   200001  FF                 	db	255
  7432                           
  7433                           ;Config register IDLOC2 @ 0x200002
  7434                           ;	unspecified, using default values
  7435   200002                     	org	2097154
  7436   200002  FF                 	db	255
  7437                           
  7438                           ;Config register IDLOC3 @ 0x200003
  7439                           ;	unspecified, using default values
  7440   200003                     	org	2097155
  7441   200003  FF                 	db	255
  7442                           
  7443                           ;Config register IDLOC4 @ 0x200004
  7444                           ;	unspecified, using default values
  7445   200004                     	org	2097156
  7446   200004  FF                 	db	255
  7447                           
  7448                           ;Config register IDLOC5 @ 0x200005
  7449                           ;	unspecified, using default values
  7450   200005                     	org	2097157
  7451   200005  FF                 	db	255
  7452                           
  7453                           ;Config register IDLOC6 @ 0x200006
  7454                           ;	unspecified, using default values
  7455   200006                     	org	2097158
  7456   200006  FF                 	db	255
  7457                           
  7458                           ;Config register IDLOC7 @ 0x200007
  7459                           ;	unspecified, using default values
  7460   200007                     	org	2097159
  7461   200007  FF                 	db	255
  7462                           
  7463                           	psect	config
  7464                           
  7465                           ; Padding undefined space
  7466   300000                     	org	3145728
  7467   300000  FF                 	db	255
  7468                           
  7469                           ;Config register CONFIG1H @ 0x300001
  7470                           ;	Oscillator Selection bits
  7471                           ;	OSC = HS, HS oscillator
  7472                           ;	Fail-Safe Clock Monitor Enable bit
  7473                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7474                           ;	Internal/External Oscillator Switchover bit
  7475                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7476   300001                     	org	3145729
  7477   300001  02                 	db	2
  7478                           
  7479                           ;Config register CONFIG2L @ 0x300002
  7480                           ;	Power-up Timer Enable bit
  7481                           ;	PWRT = OFF, PWRT disabled
  7482                           ;	Brown-out Reset Enable bits
  7483                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7484                           ;	Brown Out Reset Voltage bits
  7485                           ;	BORV = 1, 
  7486   300002                     	org	3145730
  7487   300002  09                 	db	9
  7488                           
  7489                           ;Config register CONFIG2H @ 0x300003
  7490                           ;	Watchdog Timer Enable bit
  7491                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7492                           ;	Watchdog Timer Postscale Select bits
  7493                           ;	WDTPS = 512, 1:512
  7494   300003                     	org	3145731
  7495   300003  12                 	db	18
  7496                           
  7497                           ; Padding undefined space
  7498   300004                     	org	3145732
  7499   300004  FF                 	db	255
  7500                           
  7501                           ;Config register CONFIG3H @ 0x300005
  7502                           ;	CCP2 MUX bit
  7503                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7504                           ;	PORTB A/D Enable bit
  7505                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7506                           ;	Low-Power Timer1 Oscillator Enable bit
  7507                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7508                           ;	MCLR Pin Enable bit
  7509                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7510   300005                     	org	3145733
  7511   300005  81                 	db	129
  7512                           
  7513                           ;Config register CONFIG4L @ 0x300006
  7514                           ;	Stack Full/Underflow Reset Enable bit
  7515                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7516                           ;	Single-Supply ICSP Enable bit
  7517                           ;	LVP = OFF, Single-Supply ICSP disabled
  7518                           ;	Extended Instruction Set Enable bit
  7519                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7520                           ;	Background Debugger Enable bit
  7521                           ;	DEBUG = 0x1, unprogrammed default
  7522   300006                     	org	3145734
  7523   300006  81                 	db	129
  7524                           
  7525                           ; Padding undefined space
  7526   300007                     	org	3145735
  7527   300007  FF                 	db	255
  7528                           
  7529                           ;Config register CONFIG5L @ 0x300008
  7530                           ;	Code Protection bit
  7531                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7532                           ;	Code Protection bit
  7533                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7534                           ;	Code Protection bit
  7535                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7536                           ;	Code Protection bit
  7537                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7538   300008                     	org	3145736
  7539   300008  0F                 	db	15
  7540                           
  7541                           ;Config register CONFIG5H @ 0x300009
  7542                           ;	Boot Block Code Protection bit
  7543                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7544                           ;	Data EEPROM Code Protection bit
  7545                           ;	CPD = OFF, Data EEPROM not code-protected
  7546   300009                     	org	3145737
  7547   300009  C0                 	db	192
  7548                           
  7549                           ;Config register CONFIG6L @ 0x30000A
  7550                           ;	Write Protection bit
  7551                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7552                           ;	Write Protection bit
  7553                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7554                           ;	Write Protection bit
  7555                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7556                           ;	Write Protection bit
  7557                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7558   30000A                     	org	3145738
  7559   30000A  0F                 	db	15
  7560                           
  7561                           ;Config register CONFIG6H @ 0x30000B
  7562                           ;	Configuration Register Write Protection bit
  7563                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7564                           ;	Boot Block Write Protection bit
  7565                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7566                           ;	Data EEPROM Write Protection bit
  7567                           ;	WRTD = OFF, Data EEPROM not write-protected
  7568   30000B                     	org	3145739
  7569   30000B  E0                 	db	224
  7570                           
  7571                           ;Config register CONFIG7L @ 0x30000C
  7572                           ;	Table Read Protection bit
  7573                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7574                           ;	Table Read Protection bit
  7575                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7576                           ;	Table Read Protection bit
  7577                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7578                           ;	Table Read Protection bit
  7579                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7580   30000C                     	org	3145740
  7581   30000C  0F                 	db	15
  7582                           
  7583                           ;Config register CONFIG7H @ 0x30000D
  7584                           ;	Boot Block Table Read Protection bit
  7585                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7586   30000D                     	org	3145741
  7587   30000D  40                 	db	64
  7588                           tosu	equ	0xFFF
  7589                           tosh	equ	0xFFE
  7590                           tosl	equ	0xFFD
  7591                           stkptr	equ	0xFFC
  7592                           pclatu	equ	0xFFB
  7593                           pclath	equ	0xFFA
  7594                           pcl	equ	0xFF9
  7595                           tblptru	equ	0xFF8
  7596                           tblptrh	equ	0xFF7
  7597                           tblptrl	equ	0xFF6
  7598                           tablat	equ	0xFF5
  7599                           prodh	equ	0xFF4
  7600                           prodl	equ	0xFF3
  7601                           indf0	equ	0xFEF
  7602                           postinc0	equ	0xFEE
  7603                           postdec0	equ	0xFED
  7604                           preinc0	equ	0xFEC
  7605                           plusw0	equ	0xFEB
  7606                           fsr0h	equ	0xFEA
  7607                           fsr0l	equ	0xFE9
  7608                           wreg	equ	0xFE8
  7609                           indf1	equ	0xFE7
  7610                           postinc1	equ	0xFE6
  7611                           postdec1	equ	0xFE5
  7612                           preinc1	equ	0xFE4
  7613                           plusw1	equ	0xFE3
  7614                           fsr1h	equ	0xFE2
  7615                           fsr1l	equ	0xFE1
  7616                           bsr	equ	0xFE0
  7617                           indf2	equ	0xFDF
  7618                           postinc2	equ	0xFDE
  7619                           postdec2	equ	0xFDD
  7620                           preinc2	equ	0xFDC
  7621                           plusw2	equ	0xFDB
  7622                           fsr2h	equ	0xFDA
  7623                           fsr2l	equ	0xFD9
  7624                           status	equ	0xFD8

Data Sizes:
    Strings     44
    Constant    16
    Data        57
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    100     114
    BANK0           128      1     128
    BANK1           256     10      68
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    CCP_PMW_MODE_CONFIG$0	PTR const struct . size(2) Largest target is 0

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S4645$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(BANK1[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S4592$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4592$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 6
		 -> adc_result_4_txt(BANK0[6]), adc_result_3_txt(BANK0[6]), adc_result_2_txt(BANK0[6]), adc_result_1_txt(BANK0[6]), 

    memset@s	PTR unsigned char  size(2) Largest target is 6
		 -> adc_result_4_txt(BANK0[6]), adc_result_3_txt(BANK0[6]), adc_result_2_txt(BANK0[6]), adc_result_1_txt(BANK0[6]), 

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_ASYNCRONOUS_RX_Init@_usart.USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_RX_Init@_usart.USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_RX_Init@_usart.USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_RX_Init@_usart.USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_ASYNCRONOUS_TX_Init@_usart.USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_TX_Init@_usart.USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_TX_Init@_usart.USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_ASYNCRONOUS_TX_Init@_usart.USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3608$USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_Baud_Rate_Calculation@_usart.USART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3608$USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    USART_Baud_Rate_Calculation@_usart.USART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3608$USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_Baud_Rate_Calculation@_usart.USART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3608$USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    USART_Baud_Rate_Calculation@_usart.USART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Selection@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3414$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3283$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Selection@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3094$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Reigster_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Selection@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2929$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2321$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2437$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2437$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Bus_Collision_Interrupt_Configurations@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Bus_Collision_Interrupt_Configurations@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Bus_Collision_Interrupt_Configurations@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Report_Receive_Overflow_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Slave_Mode_Configurations@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Slave_Mode_Configurations@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Slave_Mode_Configurations@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Master_Mode_Clock_Configurations@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Master_Mode_Clock_Configurations@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Master_Mode_Clock_Configurations@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1796$MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Initialize@_i2c.MSSP_I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1796$MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Initialize@_i2c.MSSP_I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S1796$MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Initialize@_i2c.MSSP_I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(BANK1[8]), lcd_2(BANK1[10]), lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(BANK1[8]), lcd_2(BANK1[10]), lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(BANK1[8]), lcd_2(BANK1[10]), lcd_1.lcd_data(BANK0[4]), lcd_1(BANK0[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    CCP_Compare_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Selection@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Selection@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Set_Compare_Mode_Value@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Set_Compare_Mode_Value@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1142$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1142$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion_Interrupt@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    S723$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK1[10]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> adc_result_4_txt(BANK0[6]), adc_result_3_txt(BANK0[6]), adc_result_2_txt(BANK0[6]), adc_result_1_txt(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> adc_result_4_txt(BANK0[6]), adc_result_3_txt(BANK0[6]), adc_result_2_txt(BANK0[6]), adc_result_1_txt(BANK0[6]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK1[10]), 

    lcd_8bit_intialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK1[10]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 9
		 -> adc_result_4_txt(BANK0[6]), adc_result_3_txt(BANK0[6]), adc_result_2_txt(BANK0[6]), adc_result_1_txt(BANK0[6]), 
		 -> STR_8(CODE[8]), STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), 
		 -> STR_4(CODE[9]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint16_to_string
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ecu_layer_intialize->_lcd_8bit_intialize
    _lcd_8bit_intialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic
    _ADC_Init->_adc_input_channel_port_config
    _ADC_StartConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_config

Critical Paths under _InterruptManager in COMRAM

    _ADC_DefaultInterruptHandler->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  167806
                                              0 BANK0      1     1      0
                                              8 BANK1      2     2      0
                           _ADC_Init
      _ADC_StartConversion_Interrupt
              _application_intialize
           _convert_uint16_to_string
                 _lcd_4bit_intialize
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   46365
                                             37 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   22855
                                             30 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   20007
                                             26 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10594
                                             96 COMRAM     4     0      4
                                              0 BANK1      8     8      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             74 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             66 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             52 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             12 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   55405
                           _ADC_Init
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   54596
                 _lcd_4bit_intialize
                 _lcd_8bit_intialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_intialize                                   6     4      2   23660
                                             34 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                9     6      3   14810
                                             25 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (5) _lcd_8bit_send_enable_signal                          3     1      2    6119
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_intialize                                   6     4      2   30927
                                             30 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   21987
                                             26 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    6851
                                             22 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    6299
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   4     2      2    8182
                                             22 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    5837
                                             12 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         9     7      2     707
                                             12 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     803
                                             15 COMRAM     4     2      2
      _adc_input_channel_port_config
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     0      2     152
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          2     0      2     152
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        4     1      3    1662
                                             20 COMRAM     4     1      3
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     251
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     524
                                             15 COMRAM     5     2      3
      _adc_input_channel_port_config
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_config                        3     3      0      31
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    4     4      0    1120
                                              8 COMRAM     4     4      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
                       _USART_RX_ISR
                       _USART_TX_ISR
 ---------------------------------------------------------------------------------
 (11) _USART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USART_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_BC_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     944
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         1     1      0     944
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (13) _ADC_GetConversionResult                             8     4      4     939
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
     _adc_input_channel_port_config
     _configure_voltage_reference
     _select_result_format
   _ADC_StartConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_config
     _ADC_StartConversion
   _application_intialize
     _ADC_Init
     _ecu_layer_intialize
       _lcd_4bit_intialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_intialize
         _gpio_pin_intialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _lcd_4bit_intialize
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
       _ADC_GetConversionResult
   _CCP1_ISR
   _CCP2_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR
   _USART_RX_ISR
   _USART_TX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      44       7       26.6%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      1      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     64      72       1       90.5%
BITBIGSFRhlhhhl     18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlllhh       6      0       0      44        0.0%
BITBIGSFRhlhhhl      5      0       0      38        0.0%
BITBIGSFRllhllh      4      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      45        0.0%
BITBIGSFRllhllh      4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      46        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlhhhl      1      0       0      39        0.0%
BITBIGSFRllhlll      1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     136      47        0.0%
DATA                 0      0     136       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jul 23 16:20:35 2023

                               ??_InterruptManager 0009                                    ?_lcd_send_4bits 0017  
                                      _SSPSTATbits 0FC7                                                 l74 2946  
                                               l69 1F78                                                 l79 28D4  
                                     ___awdiv@sign 0012                          _USART_FramingErrorHandler 008E  
                                              l100 26CA                                                l121 275A  
                                              l114 1E50                                                l202 262A  
                                              l331 2D3C                                                l414 2C06  
                                              l182 2C76                                                l432 2050  
                                              l176 2A1A                                                l168 241C  
                                              l450 2AFC                                                l443 2AD2  
                                              l179 2CAC                                                l380 2CFE  
                                              l452 2B00                                                l364 22BE  
                                              l381 2D00                                                l437 2B86  
                                              l366 2362                                                l447 2AF4  
                                              l439 2B88                                                l376 2C40  
                                              l713 29B2                                                l379 2CF8  
                                              l673 1AD0                                                l692 1D28  
              __end_of_configure_voltage_reference 2B02                        _configure_voltage_reference 2AB8  
                                              _abs 2B8A                                                _pad 27EA  
                        _RB5_InterruptHandler_HIGH 00AC                                    __end_of_ADC_ISR 2CDE  
              __end_of_lcd_4bit_send_enable_signal 2CAE                        _lcd_4bit_send_enable_signal 2C78  
                                     ___awmod@sign 0012                                led_initialize@F3048 006E  
                                              prod 0FF3                              relay_initialize@F3042 006A  
                                              tosl 0FFD                                                wreg 0FE8  
                      lcd_send_4bits@_data_command 0019                     ?_ADC_StartConversion_Interrupt 0015  
                     ?_ADC_DefaultInterruptHandler 0001                          ?_convert_uint16_to_string 0061  
                                  __end_of_RB4_ISR 2DA6                                    __end_of_RB5_ISR 2D8C  
                                  __end_of_RB6_ISR 2D72                                    __end_of_RB7_ISR 2D58  
_MSSP_I2C_Report_Receive_Overflow_InterruptHandler 00B8                                               ?_abs 0013  
                                             l2305 198C                                               l2403 2B44  
                                             l2340 280C                                               l2406 2E22  
                                             l2318 2AB6                                               l1606 15AA  
                                             l2351 16D2                                               l1616 2DCA  
                                             l2344 2862                                               l2352 1718  
                                             l2370 1BFC                                               l2363 1816  
                                             l2380 2BC0                                               l2349 16CA  
                                             l2383 2BC8                                               l2376 2A6A  
                                             l2395 211A                                               l1861 21DE  
                                             l1874 2582                                               ?_pad 001D  
                                             l8000 2ADA                                               l8002 2A1C  
                                             l8100 1976                                               l8004 2A28  
                                             l8020 28D2                                               l8012 2864  
                                             l8102 197A                                               l8006 2A44  
                                             l8110 2A8C                                               l8014 2864  
                                             l8030 25A6                                               l8120 2D30  
                                             l8008 2A62                                               l8112 2AA8  
                                             l8104 2A6C                                               l8016 2876  
                                             l8032 25BE                                               l8024 2584  
                                             l8200 2660                                               l8130 2318  
                                             l8122 22A4                                               l8106 2A7C  
                                             l8018 287E                                               l8034 25D6  
                                             l8026 2588                                               l8202 2692  
                                             l8140 2332                                               l8132 232A  
                                             l8124 22A4                                               l8116 2D24  
                                             l8108 2A84                                               l8028 258E  
                                             l8036 25EE                                               l8204 2696  
                                             l8142 2342                                               l8134 232C  
                                             l8150 2360                                               l8126 22B6  
                                             l8118 2D24                                               l8038 2628  
                                             l8206 26C8                                               l8160 2C22  
                                             l8144 234E                                               l8136 232E  
                                             l8128 22C0                                               l8072 1818  
                                             l7600 21A8                                               l8240 236A  
                                             l8162 2C34                                               l8154 2C08  
                                             l8170 2CDE                                               l8146 235A  
                                             l8138 2330                                               l8090 1916  
                                             l8082 1878                                               l7610 21CE  
                                             l7602 21B0                                               l7530 2076  
                                             l8250 23B0                                               l8242 2376  
                                             l8164 2C3A                                               l8156 2C08  
                                             l8172 2CDE                                               l8148 235C  
                                             l7700 29E2                                               l8084 18D0  
                                             l8076 1836                                               l7612 21D6  
                                             l7604 21B2                                               l7620 24E6  
                                             l7532 2080                                               l7540 2B02  
                                             l8252 23BE                                               l8260 241A  
                                             l8244 237A                                               l8166 2C3E  
                                             l8158 2C1A                                               l8174 2CF0  
                                             l8270 2BE4                                               l7550 1C02  
                                             l7710 2C8C                                               l7702 29FC  
                                             l8094 1930                                               l8078 1842  
                                             l7606 21B8                                               l7630 251A  
                                             l7622 24EE                                               l7534 209E  
                                             l7526 2052                                               l7542 2B0E  
                                             l8254 23DE                                               l8246 238C  
                                             l8238 2364                                               l8176 2CFA  
                                             l8272 2C04                                               l8264 2BCA  
                                             l7552 1C14                                               l7712 2C94  
                                             l7800 28F0                                               l7720 2C42  
                                             l8280 2DBE                                               l8096 1964  
                                             l8088 18EA                                               l7608 21BE  
                                             l7640 2556                                               l7632 2522  
                                             l7624 24F2                                               l7616 24D4  
                                             l7536 20D4                                               l7528 2064  
                                             l7544 2B20                                               l8256 23FA  
                                             l8248 2394                                               l8192 262C  
                                             l8266 2BCA                                               l7562 1CFC  
                                             l7554 1C36                                               l7714 2CAA  
                                             l7706 2C78                                               l7802 2944  
                                             l7722 2C56                                               l7810 26E2  
                                             l8098 1970                                               l7642 255C  
                                             l7634 252A                                               l7626 2500  
                                             l7618 24D8                                               l7546 2B24  
                                             l7730 1682                                               l8258 23FC  
                                             l8194 262C                                               l8268 2BDC  
                                             l7556 1C3E                                               l7564 1D26  
                                             l7548 1BFE                                               l7708 2C78  
                                             l7900 1F54                                               l7724 2C5E  
                                             l7820 26FE                                               l7812 26EA  
                                             l8276 2DBA                                               l7580 213A  
                                             l7572 211C                                               l7636 2538  
                                             l7644 2562                                               l7628 2508  
                                             l7660 282C                                               l7652 27EA  
                                             l7740 16DA                                               l7732 1696  
                                             l8196 263E                                               l7670 198E  
                                             l7558 1CA0                                               l7902 1F64  
                                             l7726 2C74                                               l7718 2C42  
                                             l7822 2738                                               l7814 26FA  
                                             l7806 26CC                                               l7910 1D2E  
                                             l8278 2DBA                                               l7590 216E  
                                             l7582 2148                                               l7574 2120  
                                             l7646 2572                                               l7638 254E  
                                             l7662 2830                                               l7654 27F8  
                                             l7750 1714                                               l7742 16EA  
                                             l7734 16A6                                               l8198 2646  
                                             l7680 1A30                                               l7672 1992  
                                             l7904 1F76                                               l7824 273A  
                                             l7808 26D0                                               l7912 1D40  
                                             l7592 2176                                               l7584 2150  
                                             l7576 212E                                               l7648 257A  
                                             l7664 284E                                               l7656 2804  
                                             l7760 1768                                               l7752 1720  
                                             l7744 16F0                                               l7736 16AE  
                                             l7840 1B18                                               l7832 1AD2  
                                             l8800 1642                                               l7674 19A4  
                                             l7826 274A                                               l7930 1DA8  
                                             l7922 1D6C                                               l7914 1D48  
                                             l7594 217E                                               l7586 2154  
                                             l7578 2136                                               l7666 2B8A  
                                             l7658 2818                                               l7770 17D0  
                                             l7762 176E                                               l7754 172A  
                                             l7746 1700                                               l7738 16BE  
                                             l7842 1B28                                               l7834 1AF8  
                                             l8802 165E                                               l7684 1A8C  
                                             l7676 19C6                                               l7780 2948  
                                             l7828 2758                                               l7940 1DFC  
                                             l7932 1DB8                                               l7924 1D88  
                                             l7916 1D68                                               l7908 1D2A  
                                             l7596 218C                                               l7588 215C  
                                             l7668 2BA4                                               l7772 17E0  
                                             l7756 1730                                               l7764 178A  
                                             l7748 170C                                               l7852 1BC0  
                                             l7844 1B46                                               l7836 1B06  
                                             l7678 19CE                                               l7686 1ACE  
                                             l7790 29B0                                               l7782 2948  
                                             l7694 29B4                                               l7870 1E90  
                                             l7862 1E52                                               l7942 1E0C  
                                             l7934 1DD6                                               l7926 1D8A  
                                             l7950 1E4E                                               l7598 2192  
                                             l7774 17E6                                               l7766 17A4  
                                             l7758 1762                                               l7846 1B64  
                                             l7838 1B14                                               l7960 1F8C  
                                             l7784 295A                                               l7696 29B4  
                                             l7880 1EB2                                               l7864 1E56  
                                             l7944 1E1C                                               l7936 1DDC  
                                             l7928 1D9A                                               l7776 17F6  
                                             l7768 17B6                                               l7848 1BA8  
                                             l7856 1BD2                                               l8760 1448  
                                             l7970 1FAA                                               l7962 1F92  
                                             l7954 1F7C                                               l7786 297C  
                                             l7698 29CA                                               l7794 28D6  
                                             l7890 1F04                                               l7882 1EC2  
                                             l7866 1E68                                               l7946 1E2C  
                                             l7938 1DEC                                               l8770 14A6  
                                             l8762 1454                                               l7980 1FC8  
                                             l7972 1FB0                                               l7964 1F98  
                                             l7956 1F80                                               l7788 2984  
                                             l7796 28D6                                               l7892 1F14  
                                             l7884 1ED0                                               l7876 1E94  
                                             l7868 1E70                                               l7948 1E3C  
                                             l8780 1526                                               l8772 14C2  
                                             l8764 1460                                               l8756 1444  
                                             l7974 1FB6                                               l7966 1F9E  
                                             l7958 1F86                                               l7990 2B46  
                                             l7798 28E8                                               l7894 1F24  
                                             l7886 1EE0                                               l7878 1EB0  
                                             l8790 1584                                               l8782 153A  
                                             l8774 14DE                                               l8766 147C  
                                             l8758 1444                                               l7976 1FBC  
                                             l7968 1FA4                                               l7984 1FCE  
                                             l7992 2B60                                               l7896 1F34  
                                             l7888 1EFE                                               l8792 1596  
                                             l8784 154A                                               l8776 14FA  
                                             l8768 1496                                               l8890 1FE2  
                                             l7978 1FC2                                               l7994 2B66  
                                             l7898 1F44                                               l8786 155E  
                                             l8794 15AA                                               l8778 1516  
                                             l7996 2B80                                               l8884 2602  
                                             l8796 160A                                               l8788 1570  
                                             l7998 2AB8                                               l8886 1D10  
                                             l8798 1626                                               STR_1 103A  
                                             l8888 1AB8                                               STR_2 103A  
                                             STR_4 1011                                               STR_5 101A  
                                             STR_6 1022                                               STR_7 102A  
                                             STR_8 1032                 lcd_8bit_send_command@l_pin_counter 0022  
                                             _LATA 0F89                                               _LATB 0F8A  
                                             _LATC 0F8B                                               _LATD 0F8C  
                                             _LATE 0F8D                                               u7000 1832  
                                             u7001 182E                                               u7010 1874  
                                             u7011 1870                                               u7020 18E6  
                                             u7100 268A                                               u7021 18E2  
                                             u7030 192C                                               u7110 26B8  
                                             u7031 1928                                               u7040 198C  
                                             u6400 209E                                               u7120 26C8  
                                             u7041 1988                                               u6401 209A  
                                             u7121 26C4                                               u7050 22B6  
                                             u6410 20D4                                               u7051 22B2  
                                             u6411 20D0                                               u7107 2680  
                                             u7060 2C1A                                               u6500 218C  
                                             u6420 2B44                                               u7061 2C16  
                                             u6501 2188                                               u6421 2B40  
                                             u7117 26AE                                               u7070 2CF0  
                                             u6430 1C14                                               u6510 21A8  
                                             u7071 2CEC                                               u6431 1C10  
                                             u6511 21A4                                               u6440 1C36  
                                             u6520 21CE                                               u6600 284E  
                                             u6441 1C32                                               u6521 21CA  
                                             u6601 284A                                               u7161 2370  
                                             u6530 24E6                                               u6610 2BA4  
                                             u7170 238C                                               u7090 263E  
                                             u6531 24E2                                               u6611 2BA0  
                                             u7171 2388                                               u7091 263A  
                                             u6620 19A4                                               u6540 2500  
                                             u6380 2064                                               u6700 16A6  
                                             u7180 241A                                               u6621 19A0  
                                             u6541 24FC                                               u6381 2060  
                                             u6701 16A2                                               u7181 2416  
                                             u7190 2BDC                                               u6630 19C6  
                                             u6454 1C5E                                               u6470 212E  
                                             u6550 251A                                               u6390 2076  
                                             u6710 16BE                                               u7191 2BD8  
                                             u6631 19C2                                               u6455 1C5A  
                                             u6471 212A                                               u6551 2516  
                                             u6391 2072                                               u6711 16BA  
                                             u6464 1CC0                                               u6800 28E8  
                                             u6480 2148                                               u6560 2538  
                                             u6720 16EA                                               u6465 1CBC  
                                             u6801 28E4                                               u6481 2144  
                                             u6561 2534                                               u6721 16E6  
                                             u6810 26E2                                               u6490 216E  
                                             u6570 254E                                               u6730 1700  
                                             u6811 26DE                                               u6491 216A  
                                             u6571 254A                                               u6731 16FC  
                                             u6660 1AA4                                               u6644 19EE  
                                             u6900 1D9A                                               u6580 2572  
                                             u6740 17A4                                               u7700 154A  
                                             u6661 1A9E                                               u6645 19EA  
                                             u6901 1D96                                               u6581 256E  
                                             u6741 17A0                                               u7701 1546  
                                             u6910 2B60                                               u6670 1AA6  
                                             u6654 1A50                                               u6830 274A  
                                             u6590 27F8                                               u6750 17B6  
                                             u7710 1570                                               u6911 2B5C  
                                             u6655 1A4C                                               u6831 2746  
                                             u6591 27F4                                               u6751 17B2  
                                             u7711 156C                                               u6920 2B80  
                                             u6824 2728                                               u6760 17D0  
                                             u6680 1692                                               u6840 1AF8  
                                             u7720 1596                                               u6921 2B7C  
                                             u6825 2724                                               u6761 17CC  
                                             u6681 168C                                               u6841 1AF4  
                                             u7721 1592                                               u6930 2AD2  
                                             u6770 17E0                                               u6690 1694  
                                             u6850 1B46                                               u6931 2ACE  
                                             u6771 17DC                                               u6851 1B42  
                                             u6940 2AF4                                               u6780 295A  
                                             u6860 1B64                                               u6941 2AF0  
                                             u6781 2956                                               u6861 1B60  
                                             u6790 297C                                               u6870 1E68  
                                             u6950 2A62                                               u6791 2978  
                                             u7807 1F00                                               u6871 1E64  
                                             u6951 2A5E                                               u6880 1EC2  
                                             u6960 2876                                               u7817 2C8E  
                                             u6881 1EBE                                               u6961 2872  
                                             u7737 1488                                               u6890 1D40  
                                             u7690 1526                                               u7747 1DA0  
                                             u6891 1D3C                                               u7691 1522  
                                             u7757 1DBE                                               u7767 1DD8  
                                             u7777 2C58                                               u7787 1EC8  
                                             u7797 1EE6                                               _TMR2 0FCC  
                          ??_application_intialize 0029                      ??_lcd_4bit_send_enable_signal 0019  
                         _RB4_InterruptHandler_LOW 00AE                                               abs@a 0013  
                                             _dbuf 0106                                               _main 1444  
                                             _dtoa 1682                                   __end_of_CCP1_ISR 2E22  
                                 __end_of_CCP2_ISR 2E1E                                               _prec 0082  
                         _RB7_InterruptHandler_LOW 00A2                                               pad@i 0024  
                                             pad@p 0021                                               fsr0h 0FEA  
                                             fsr1h 0FE2                                               indf0 0FEF  
                                             fsr2h 0FDA                                               fsr0l 0FE9  
                                             indf1 0FE7                                               indf2 0FDF  
                                             fsr1l 0FE1                                               pad@w 0026  
                                             fsr2l 0FD9                                               btemp 0073  
                                 __end_of_ADC_Init 2364                                               prodl 0FF3  
                                             start 000E                      __end_of_lcd_8bit_send_command 275C  
                   ?_adc_input_channel_port_config 0001                                       ___param_bank 0000  
                            _lcd_4bit_send_command 28D6                                              ??_abs 0015  
                             _gpio_pin_write_logic 1BFE                     lcd_4bit_send_string_pos@column 0029  
                                            ??_pad 0023                              lcd_4bit_intialize@lcd 001F  
                            lcd_4bit_intialize@ret 0024                                   __end_of_INT0_ISR 2E1A  
                                 __end_of_INT1_ISR 2E16                                   __end_of_INT2_ISR 2E12  
                                            ?_main 0001                                              ?_dtoa 0028  
                                  __end_of___awdiv 21E0                                              _EEADR 0FA9  
                                  __end_of___awmod 2584                                    ___awdiv@divisor 000F  
                                            i2l544 2E1C                                              i2l457 2CDC  
                                            i2l539 2E20                                              i2l399 22A2  
                                            i2l933 2E18                                              i2l861 2E08  
                                            i2l943 2E10                                              i2l938 2E14  
                                            i2l866 2E0C                                              i2l954 2DA4  
                                  ___awdiv@counter 0011                                              i2l965 2D8A  
                                            i2l976 2D70                                              i2l987 2D56  
                                            _RCREG 0FAE                                relay_turn_off@F3052 0068  
                                     vfpfcnvrt@fmt 0037                                              _TMR0H 0FD7  
                                            _TMR1H 0FCF                                              _TMR0L 0FD6  
                                            _TMR1L 0FCE                                              _TMR3H 0FB3  
                                            _TMR3L 0FB2                                              _SPBRG 0FAF  
                                            _PORTA 0F80                                              _PORTB 0F81  
                                            _PORTC 0F82                                              _PORTD 0F83  
                                            _PORTE 0F84                                              _TRISA 0F92  
                                            _TRISB 0F93                                              _TRISC 0F94  
                                            _TRISD 0F95                                              _TRISE 0F96  
                                            _TXREG 0FAD                          lcd_4bit_set_cursor@coulmn 0022  
                                 __end_of_TMR0_ISR 2DF6                                   __end_of_TMR1_ISR 2DE8  
                                 __end_of_TMR2_ISR 2DFE                                              _adc_1 00F2  
                                 __end_of_TMR3_ISR 2DDA                                              _lcd_1 00F9  
                                            _lcd_2 0130                                              _flags 0065  
                                            _fputc 2052                                              _fputs 2B02  
                                            pad@fp 001D                                              _width 0080  
                                            _putch 2E22                                              dtoa@d 002A  
                                            dtoa@i 0033                                              dtoa@p 002E  
                                            dtoa@s 0032                                              dtoa@w 0030  
                                            pclath 0FFA                                              pclatu 0FFB  
                                            tablat 0FF5                                       _adc_result_1 008A  
                                     _adc_result_2 0088                                       _adc_result_3 0086  
                                     _adc_result_4 0084                                              ttemp5 0074  
                                            ttemp6 0077                                              ttemp7 007B  
                                            status 0FD8                                              wtemp8 0074  
                                  __end_of_sprintf 2AB8                                    __initialization 275C  
                                     __end_of_main 1682                                       __end_of_dtoa 1818  
                            ?_gpio_pin_write_logic 000D                                          ??_ADC_ISR 0009  
                                    _lat_registers 00DE                                             ??_main 0142  
                                           ??_dtoa 002C                                      __activetblptr 0003  
                            _TMR3_InterruptHandler 0094                                   led_turn_on@F3053 006D  
                                        ??_RB4_ISR 0001                                          ??_RB5_ISR 0001  
                                        ??_RB6_ISR 0001                                          ??_RB7_ISR 0001  
                                           ?_fputc 000D                                             ?_fputs 0016  
                                           _ADRESH 0FC4                                             _EEADRH 0FAA  
                                           _ADRESL 0FC3                                             _EEDATA 0FA8  
                                           _CCPR1H 0FBF                                             _CCPR2H 0FBC  
                                           _CCPR1L 0FBE                                             _CCPR2L 0FBB  
                                           _EECON2 0FA7                                   ___awdiv@dividend 000D  
                                           ?_putch 0001                                             i2l1200 1410  
                                           i2l1203 1430                                             i2l1160 1070  
                                           i2l1170 117C                                             i2l1162 1090  
                                           i2l1316 2DE6                                             i2l1180 12D0  
                                           i2l1172 11C0                                             i2l1164 10B0  
                                           i2l1413 2DD8                                             i2l1246 2DF4  
                                           i2l1190 1370                                             i2l1182 12F0  
                                           i2l1174 1204                                             i2l1166 10F4  
                                           i2l1192 1390                                             i2l1184 1310  
                                           i2l1176 1248                                             i2l1168 1138  
                                           i2l1194 13B0                                             i2l1186 1330  
                                           i2l1178 128C                                             i2l1196 13D0  
                                           i2l1188 1350                                             i2l1622 24D2  
                                           i2l1198 13F0                                             i2l1368 2DFC  
                                           i2l1544 2E04                                             i2l1553 2E24  
                                           i2l1627 24D2                                             i2l6110 2E0E  
                                           i2l6104 2E12                                             i2l6130 2D74  
                                           i2l6124 2DA4                                             i2l6116 2D8E  
                                           i2l6132 2D76                                             i2l7100 1286  
                                           i2l7020 105E                                             i2l6070 2CB0  
                                           i2l6118 2D90                                             i2l6214 2DE8  
                                           i2l7110 12CA                                             i2l7102 129A  
                                           i2l7030 10AC                                             i2l7022 106C  
                                           i2l6072 2CC4                                             i2l6080 2E1A  
                                           i2l6152 2D70                                             i2l6144 2D5A  
                                           i2l6160 2D42                                             i2l6216 2DEA  
                                           i2l6224 2DDA                                             i2l6240 2DCC  
                                           i2l7120 131E                                             i2l7112 12DE  
                                           i2l7104 12A8                                             i2l7040 10EE  
                                           i2l7032 10BE                                             i2l7024 107E  
                                           i2l6074 2E1E                                             i2l6138 2D8A  
                                           i2l6146 2D5C                                             i2l6218 2DF0  
                                           i2l6226 2DDC                                             i2l6234 2DF6  
                                           i2l6242 2DCE                                             i2l6250 2E02  
                                           i2l7130 136C                                             i2l7122 132C  
                                           i2l7114 12EC                                             i2l7106 12B6  
                                           i2l7050 1132                                             i2l7042 1102  
                                           i2l7034 10CC                                             i2l7026 108C  
                                           i2l7018 1050                                             i2l6068 2CAE  
                                           i2l6092 2E0A                                             i2l6228 2DE2  
                                           i2l6244 2DD4                                             i2l7140 13BE  
                                           i2l7132 137E                                             i2l7124 133E  
                                           i2l7116 12FE                                             i2l7108 12C6  
                                           i2l7060 1176                                             i2l7052 1146  
                                           i2l7044 1110                                             i2l7036 10DA  
                                           i2l7028 109E                                             i2l6086 2E06  
                                           i2l6166 2D56                                             i2l6158 2D40  
                                           i2l7150 140C                                             i2l7142 13CC  
                                           i2l7134 138C                                             i2l7126 134C  
                                           i2l7118 130C                                             i2l7070 11BA  
                                           i2l7062 118A                                             i2l7054 1154  
                                           i2l7046 111E                                             i2l7038 10EA  
                                           i2l6256 2E24                                             i2l7152 141E  
                                           i2l7144 13DE                                             i2l7136 139E  
                                           i2l7128 135E                                             i2l7080 11FE  
                                           i2l7072 11CE                                             i2l7064 1198  
                                           i2l7056 1162                                             i2l7048 112E  
                                           i2l6098 2E16                                             i2l7154 142C  
                                           i2l7146 13EC                                             i2l7138 13AC  
                                           i2l7090 1242                                             i2l7082 1212  
                                           i2l7074 11DC                                             i2l7066 11A6  
                                           i2l7058 1172                                             i2l7148 13FE  
                                           i2l7092 1256                                             i2l7084 1220  
                                           i2l7076 11EA                                             i2l7068 11B6  
                                           i2l5750 21F2                                             i2l7094 1264  
                                           i2l7086 122E                                             i2l7078 11FA  
                                           i2l5760 2268                                             i2l5752 2204  
                                           i2l7096 1272                                             i2l7088 123E  
                                           i2l5754 220C                                             i2l5746 21E0  
                                           i2l7098 1282                                             i2l5764 229C  
                                           i2l5756 2226                                             i2l5748 21E0  
                                           i2l5758 224E                                             i2l5766 22A0  
                                           i2l5950 242E                                             i2l5960 2476  
                                           i2l5952 2442                                             i2l5970 24CA  
                                           i2l5962 2488                                             i2l5954 244A  
                                           i2l5964 249C                                             i2l5956 245A  
                                           i2l5948 241E                                             i2l5966 24A4  
                                           i2l5958 246E                                             i2l5968 24B6  
              convert_uint16_to_string@Temp_String 013A                                             _SPBRGH 0FB0  
                                           _SSPADD 0FC8                                             _SSPBUF 0FC9  
                 __end_of_lcd_4bit_send_string_pos 26CC                             ?_lcd_4bit_send_command 001B  
                                     vfprintf@cfmt 0049                                          ??___awdiv 0011  
                                        ??___awmod 0011                                             _memset 1818  
                                           clear_0 27C2                                             clear_1 27CE  
                                           clear_2 27DA                                   ___awdiv@quotient 0013  
                                  ___awmod@divisor 000F                                             isa$std 0001  
                                  ___awmod@counter 0011                                             pad@buf 001F  
                                           dtoa@fp 0028            gpio_pin_direction_intialize@_pin_config 000D  
                                           fputc@c 000D                                          ?_CCP1_ISR 0001  
                                           fputs@c 001A                                             fputs@i 001B  
                                     __pdataCOMRAM 006F                                          ?_CCP2_ISR 0001  
                                           fputs@s 0016                                          ?_ADC_Init 0010  
                                     __mediumconst 0000                                             tblptrh 0FF7  
                                           tblptrl 0FF6                                             tblptru 0FF8  
                                           putch@c 0001                                   __end_of_vfprintf 2A6C  
                                        ??_sprintf 0053                       __end_of_select_result_format 2B8A  
                                       __accesstop 0080                            __end_of__initialization 27E0  
                                        ?_INT0_ISR 0001                                          ?_INT1_ISR 0001  
                                        ?_INT2_ISR 0001                                      ___rparam_used 0001  
                                 ??_lcd_send_4bits 001A                            _lcd_4bit_send_char_data 2864  
                                RB5_ISR@RB5_Source 0001                             ??_gpio_pin_write_logic 0010  
                                   __pcstackCOMRAM 0001                                       __pidataBANK0 2D02  
                                     __pidataBANK1 2DA6                                          ?_TMR0_ISR 0001  
                                        ?_TMR1_ISR 0001                                          ?_TMR2_ISR 0001  
                                        ?_TMR3_ISR 0001                                      __end_of_fputc 211C  
                                    __end_of_fputs 2B46                                      __end_of_putch 2E24  
                         lcd_4bit_send_command@lcd 001B                           lcd_4bit_send_command@ret 001E  
                               _lcd_8bit_intialize 1D2A                            _ADC_GetConversionResult 21E0  
                                       ??_CCP1_ISR 0001                                         ??_CCP2_ISR 0001  
                                       ??_ADC_Init 0012                               ADC_SelectChannel@ret 0014  
                              ?_lcd_8bit_intialize 0023                                            ??_fputc 0011  
                                          ??_fputs 001A                                            ??_putch 000D  
                           ADC_StartConversion@ret 000F                                         __pbssBANK0 0080  
                                       __pbssBANK1 0100                              _INT0_InterruptHandler 00B6  
                                       ??_INT0_ISR 0001                                         ??_INT1_ISR 0001  
                                       ??_INT2_ISR 0001                         ADC_GetConversionResult@ret 0008  
                    __end_of_application_intialize 2DCC                               ??_lcd_8bit_intialize 0025  
                  _USART_TxDefaultInterruptHandler 0092                                         ??_TMR0_ISR 0001  
                                       ??_TMR1_ISR 0001                                         ??_TMR2_ISR 0001  
                                       ??_TMR3_ISR 0001                                  led_turn_off@F3058 006C  
                      convert_uint16_to_string@ret 0140                                            _ADC_ISR 2CAE  
                      convert_uint16_to_string@str 0063                                            ?_memset 000D  
                                          _ADC_Req 0066                                  RB7_ISR@RB7_Source 0001  
                                          _RB4_ISR 2D8C                                            _RB5_ISR 2D72  
                                          _RB6_ISR 2D58                                            _RB7_ISR 2D3E  
                        ?_lcd_4bit_send_string_pos 0026                          _RB6_InterruptHandler_HIGH 00A8  
                  ??_adc_input_channel_port_config 000D                                      ?_MSSP_I2C_ISR 0001  
                             led_turn_toggle@F3063 006B                __end_of_lcd_8bit_send_enable_signal 2C78  
                      _lcd_8bit_send_enable_signal 2C42                                         _btn_values 1001  
                   lcd_8bit_send_enable_signal@lcd 0017                     lcd_8bit_send_enable_signal@ret 0019  
                                   _tris_registers 00E8                           _RB6_InterruptHandler_LOW 00A6  
                        ??_lcd_4bit_send_char_data 001E                      ??_lcd_8bit_send_enable_signal 0019  
                                ??_MSSP_I2C_BC_ISR 0001                               _ADC_InterruptHandler 00C4  
                                          __Hparam 0000                                       ADC_Init@_adc 0010  
                                          __Lparam 0000                                _ecu_layer_intialize 2D24  
                            _lcd_8bit_send_command 26CC                                            ___awdiv 211C  
                                          ___awmod 24D4                                          ?_vfprintf 0043  
                                     __psmallconst 1000                          ??_ADC_GetConversionResult 0005  
                       __end_of_gpio_pin_intialize 29B4                                            __pcinit 275C  
                             _select_result_format 2B46                                            __ramtop 1000  
                                          __ptext0 1444                                            __ptext1 262C  
                                          __ptext2 2584                                            __ptext3 2864  
                                          __ptext4 2364                                            __ptext5 2A6C  
                                          __ptext6 2A1C                                            __ptext7 1AD2  
                                          __ptext8 1682                                            __ptext9 27EA  
                                        _T0CONbits 0FD5                                          _T1CONbits 0FCD  
                         _convert_uint16_to_string 2364                                     ??_MSSP_I2C_ISR 0001  
                                        _T2CONbits 0FCA                                          _T3CONbits 0FB1  
                                 ___awmod@dividend 000D                               ?_ecu_layer_intialize 0001  
                                          _sprintf 2A6C                                            main@ret 00FF  
            lcd_8bit_intialize@l_data_pins_counter 0027              lcd_4bit_intialize@l_data_pins_counter 0023  
                                   __pintcode_body 103E                               end_of_initialization 27E0  
                                lcd_send_4bits@lcd 0017                                  lcd_send_4bits@ret 001A  
                         select_result_format@_adc 000D                                            fputc@fp 000F  
                                          memset@c 000F                                            memset@k 0015  
                                          memset@n 0011                                            memset@s 0017  
                                          int_func 103E                                            fputs@fp 0018  
                       __end_of_lcd_4bit_intialize 1F7A                            ??_lcd_4bit_send_command 001E  
                            gpio_pin_intialize@ret 001A                                  __end_of_vfpfcnvrt 1BFE  
                                        _RCSTAbits 0FAB                                            postdec1 0FE5  
                                          postdec2 0FDD                                            postinc0 0FEE  
                                          postinc1 0FE6                                            postinc2 0FDE  
                                 vfpfcnvrt@convarg 003D                                         ??_vfprintf 0049  
                            ?_select_result_format 000D                   ADC_StartConversion_Interrupt@ret 0018  
                  __end_of_lcd_4bit_send_char_data 28D6                              _INT1_InterruptHandler 00B4  
                                        _PORTBbits 0F81                                   _InterruptManager 0008  
                    gpio_pin_intialize@_pin_config 0017                         lcd_4bit_send_char_data@lcd 001B  
                            ??_ecu_layer_intialize 0029                         lcd_4bit_send_char_data@ret 001E  
             __end_of_gpio_pin_direction_intialize 1AD2                       _gpio_pin_direction_intialize 198E  
              __end_of_ADC_DefaultInterruptHandler 24D4                        _ADC_DefaultInterruptHandler 241E  
                                        _TRISCbits 0F94                                _ADC_StartConversion 2CDE  
            __end_of_adc_input_channel_port_config 2052                      _adc_input_channel_port_config 1F7A  
                                    ?_USART_RX_ISR 0001                                      ?_USART_TX_ISR 0001  
                    ??_ADC_DefaultInterruptHandler 0009                                        _CCP1CONbits 0FBD  
                                      _CCP2CONbits 0FBA                                          _TXSTAbits 0FAC  
                              _lcd_4bit_set_cursor 2584                                 relay_turn_on@F3047 0069  
                           ?_lcd_8bit_send_command 001A                               ?_ADC_StartConversion 000D  
                      lcd_4bit_send_string_pos@lcd 0026                        lcd_4bit_send_string_pos@ret 002C  
                      lcd_4bit_send_string_pos@row 0028                        lcd_4bit_send_string_pos@str 002A  
                    convert_uint16_to_string@F3198 0100                                        vfpfcnvrt@ap 0039  
                                      vfpfcnvrt@cp 0041                                        vfpfcnvrt@fp 0035  
                                      _BAUDCONbits 0FB8                                      __pidataCOMRAM 2DFE  
                ADC_StartConversion_Interrupt@_adc 0015                                     _timer0_preload 00A0  
                                   __end_of_memset 198E                                     _timer1_preload 009C  
                                   _timer2_preload 0067                       ?_configure_voltage_reference 000D  
                              start_initialization 275C                                     _timer3_preload 0096  
                     ?_lcd_4bit_send_enable_signal 0017                               ?_lcd_4bit_set_cursor 001F  
                    convert_uint16_to_string@value 0061                                        __end_of_abs 2BCA  
                                      __end_of_pad 2864                      ?_gpio_pin_direction_intialize 000D  
                                   ??_USART_RX_ISR 0001                                     ??_USART_TX_ISR 0001  
         ADC_GetConversionResult@conversion_result 0003                          _USART_OverrunErrorHandler 008C  
                            ADC_SelectChannel@_adc 0010               ADC_StartConversion_Interrupt@channel 0017  
                             __end_of_MSSP_I2C_ISR 2E0A                              ??_ADC_StartConversion 000F  
                                      vfprintf@fmt 0045                             ??_select_result_format 000F  
                                      __pdataBANK0 00DE                                        __pdataBANK1 0126  
                                         ?_ADC_ISR 0001                                           ??_memset 0013  
                                       memset@dest 000D                       lcd_4bit_send_command@command 001D  
                         lcd_8bit_send_command@lcd 001A                           lcd_8bit_send_command@ret 0021  
                          ADC_StartConversion@_adc 000D                                           ?_RB4_ISR 0001  
                                         ?_RB5_ISR 0001                                           ?_RB6_ISR 0001  
                                         ?_RB7_ISR 0001                                        __pbssCOMRAM 0065  
                            ??_lcd_4bit_set_cursor 0023   _MSSP_I2C_Report_Write_Collision_InterruptHandler 00BA  
                                    __pcstackBANK0 00FF                                      __pcstackBANK1 013A  
                    ??_configure_voltage_reference 000F                                    _MSSP_I2C_BC_ISR 2E0A  
                      ADC_GetConversionResult@_adc 0001                              _INT2_InterruptHandler 00B2  
                  _USART_RxDefaultInterruptHandler 0090                    gpio_pin_direction_intialize@ret 0015  
                            _TMR0_InterruptHandler 009E                              _application_intialize 2DBA  
                                        _dtoa$4672 002C                                          __pintcode 0008  
                                _ADC_SelectChannel 2C08                         ??_convert_uint16_to_string 0065  
                  gpio_pin_write_logic@_pin_config 000D                                           ?___awdiv 000D  
                                         ?___awmod 000D                                 ?_ADC_SelectChannel 0010  
                        gpio_pin_write_logic@logic 000F                                        __smallconst 1000  
                        _RB4_InterruptHandler_HIGH 00B0                                           _CCP1_ISR 2E1E  
                                         _CCP2_ISR 2E1A                                ??_ADC_SelectChannel 0013  
                                         _ADC_Init 22A4                          _RB7_InterruptHandler_HIGH 00A4  
                                      ADC_Init@ret 0013                                           ?_sprintf 004B  
                               _gpio_pin_intialize 2948                     ??_gpio_pin_direction_intialize 000F  
                         _RB5_InterruptHandler_LOW 00AA                                           _INT0_ISR 2E16  
                                         _INT1_ISR 2E12                                           _INT2_ISR 2E0E  
                                         _RB4_Flag 0072                                           _RB5_Flag 0071  
                                         _RB6_Flag 0070                                           _RB7_Flag 006F  
                                RB4_ISR@RB4_Source 0001                                ?_gpio_pin_intialize 0017  
                         __end_of_InterruptManager 1444                                           _PIE1bits 0F9D  
                                         _PIE2bits 0FA0                          __end_of_ADC_SelectChannel 2C42  
                    __end_of_lcd_4bit_send_command 2948                                           i2u412_40 21F2  
                                         i2u412_41 21EE                                           i2u413_40 2204  
                                         i2u413_41 2200                                           i2u414_40 2226  
                                         i2u430_40 242E                                           i2u414_41 2222  
                                         i2u430_41 242A                                           i2u415_40 2268  
                                         i2u431_40 245A                                           i2u415_41 2264  
                                         i2u431_41 2456                                           i2u432_40 2488  
                                         i2u600_40 140C                                           i2u432_41 2484  
                                         i2u600_41 1408                                           i2u416_45 2280  
                                         i2u433_40 24B6                                           i2u601_40 141E  
                                         i2u433_41 24B2                                           i2u601_41 141A  
                                         _PIR1bits 0F9E                                           i2u450_40 2D6C  
                                         i2u602_40 142C                                           i2u450_41 2D68  
                                         i2u602_41 1428                                           i2u451_40 2D52  
                                         i2u451_41 2D4E                                           _PIR2bits 0FA1  
                                         i2u446_40 2CC4                                           i2u550_40 10CC  
                                         i2u446_41 2CC0                                           i2u550_41 10C8  
                                         i2u551_40 10DA                                           i2u543_40 105E  
                                         i2u551_41 10D6                                           i2u543_41 105A  
                                         i2u447_48 2CCA                                           i2u448_40 2DA0  
                                         i2u560_40 1172                                           i2u552_40 10EA  
                                         i2u544_40 106C                                           i2u447_49 2CDC  
                                         i2u448_41 2D9C                                           i2u560_41 116E  
                                         i2u552_41 10E6                                           i2u544_41 1068  
                                         i2u449_40 2D86                                           i2u561_40 118A  
                                         i2u553_40 1102                                           i2u545_40 107E  
                                         i2u449_41 2D82                                           i2u561_41 1186  
                                         i2u553_41 10FE                                           i2u545_41 107A  
                                         i2u570_40 1220                                           i2u562_40 1198  
                                         i2u554_40 1110                                           i2u546_40 108C  
                                         i2u570_41 121C                                           i2u562_41 1194  
                                         i2u554_41 110C                                           i2u546_41 1088  
                                         i2u571_40 122E                                           i2u563_40 11A6  
                                         i2u555_40 111E                                           i2u547_40 109E  
                                         i2u571_41 122A                                           i2u563_41 11A2  
                                         i2u555_41 111A                                           i2u547_41 109A  
                                         i2u580_40 12C6                                           i2u572_40 123E  
                                         i2u564_40 11B6                                           i2u556_40 112E  
                                         i2u548_40 10AC                                           i2u580_41 12C2  
                                         i2u572_41 123A                                           i2u564_41 11B2  
                                         i2u556_41 112A                                           i2u548_41 10A8  
                                         i2u581_40 12DE                                           i2u573_40 1256  
                                         i2u565_40 11CE                                           i2u557_40 1146  
                                         i2u549_40 10BE                                           i2u581_41 12DA  
                                         i2u573_41 1252                                           i2u565_41 11CA  
                                         i2u557_41 1142                                           i2u549_41 10BA  
                                         i2u590_40 136C                                           i2u582_40 12EC  
                                         i2u574_40 1264                                           i2u566_40 11DC  
                                         i2u558_40 1154                                           i2u590_41 1368  
                                         i2u582_41 12E8                                           i2u574_41 1260  
                                         i2u566_41 11D8                                           i2u558_41 1150  
                                         i2u591_40 137E                                           i2u583_40 12FE  
                                         i2u575_40 1272                                           i2u567_40 11EA  
                                         i2u559_40 1162                                           i2u591_41 137A  
                                         i2u583_41 12FA                                           i2u575_41 126E  
                                         i2u567_41 11E6                                           i2u559_41 115E  
                                         i2u592_40 138C                                           i2u584_40 130C  
                                         i2u576_40 1282                                           i2u568_40 11FA  
                                         i2u592_41 1388                                           i2u584_41 1308  
                                         i2u576_41 127E                                           i2u568_41 11F6  
                                         i2u593_40 139E                                           i2u585_40 131E  
                                         i2u577_40 129A                                           i2u569_40 1212  
                                         i2u593_41 139A                                           i2u585_41 131A  
                                         i2u577_41 1296                                           i2u569_41 120E  
                                         i2u594_40 13AC                                           i2u586_40 132C  
                                         i2u578_40 12A8                                           i2u594_41 13A8  
                                         i2u586_41 1328                                           i2u578_41 12A4  
                                         i2u595_40 13BE                                           i2u587_40 133E  
                                         i2u579_40 12B6                                           i2u595_41 13BA  
                                         i2u587_41 133A                                           i2u579_41 12B2  
                                         i2u596_40 13CC                                           i2u588_40 134C  
                                         i2u596_41 13C8                                           i2u588_41 1348  
                                         i2u597_40 13DE                                           i2u589_40 135E  
                                         i2u597_41 13DA                                           i2u589_41 135A  
                                         i2u598_40 13EC                                           i2u598_41 13E8  
                                         i2u599_40 13FE                                           i2u599_41 13FA  
                  ??_ADC_StartConversion_Interrupt 0018                     fp__ADC_DefaultInterruptHandler 0000  
                                         _TMR0_ISR 2DE8                                           _TMR1_ISR 2DDA  
                                         _TMR2_ISR 2DF6                                           _TMR3_ISR 2DCC  
                             __end_of_USART_RX_ISR 2E26                              lcd_8bit_intialize@lcd 0023  
                             __end_of_USART_TX_ISR 2E06                                 _lcd_4bit_intialize 1E52  
                            lcd_8bit_intialize@ret 0028                                          _vfpfcnvrt 1AD2  
                         _lcd_4bit_send_string_pos 262C                                         _ADCON0bits 0FC2  
                                       _ADCON1bits 0FC1                                         _ADCON2bits 0FC0  
                          __end_of_MSSP_I2C_BC_ISR 2E0E                               ??_gpio_pin_intialize 0019  
                         ADC_SelectChannel@channel 0012                                ?_lcd_4bit_intialize 001F  
                 _MSSP_I2C_DefaultInterruptHandler 00BC                            gpio_pin_write_logic@ret 0016  
                                      _INTCON2bits 0FF1                                        _INTCON3bits 0FF0  
                         ?_lcd_4bit_send_char_data 001B                                          copy_data0 2770  
                                        copy_data1 2790                                          copy_data2 27B0  
                          ??_lcd_8bit_send_command 001D                                         _EECON1bits 0FA6  
                           ?_application_intialize 0001                               ??_lcd_4bit_intialize 0021  
                                         __Hrparam 0000                                         vfprintf@ap 0047  
                                         __Lrparam 0000                                         vfprintf@fp 0043  
                         ?_ADC_GetConversionResult 0001                                  RB6_ISR@RB6_Source 0001  
                            _CCP1_InterruptHandler 00C2                             lcd_4bit_set_cursor@lcd 001F  
                      __end_of_ecu_layer_intialize 2D3E                             lcd_4bit_set_cursor@ret 0025  
                                       ?_vfpfcnvrt 0035                             lcd_4bit_set_cursor@row 0021  
                               __end_of_btn_values 1011                              _TMR1_InterruptHandler 009A  
                                       sprintf@fmt 004D                                       _MSSP_I2C_ISR 2E06  
                                         __ptext10 2B02                                           __ptext11 2052  
                                         __ptext20 26CC                                           __ptext12 2E22  
                                         __ptext21 2C42                                           __ptext13 2B8A  
                                         __ptext30 2B46                                           __ptext22 1E52  
                                         __ptext14 24D4                                           __ptext31 2AB8  
                                         __ptext23 28D6                                           __ptext15 211C  
                                         __ptext40 2DF6                                           __ptext32 2BCA  
                                         __ptext24 29B4                                           __ptext16 1818  
                                         __ptext41 2DDA                                           __ptext33 2CDE  
                                         __ptext25 2C78                                           __ptext17 2DBA  
                                         __ptext50 2E12                                           __ptext42 2DE8  
                                         __ptext34 2C08                                           __ptext26 2948  
                                         __ptext18 2D24                                           __ptext51 2E16  
                                         __ptext43 2D3E                                           __ptext35 1F7A  
                                         __ptext27 1BFE                                           __ptext19 1D2A  
                                         __ptext52 2E1A                                           __ptext44 2D58  
                                         __ptext28 198E                                           __ptext53 2E1E  
                                         __ptext45 2D72                                           __ptext37 2E02  
                                         __ptext29 22A4                                           __ptext54 2CAE  
                                         __ptext46 2D8C                                           __ptext38 2E24  
                                         __ptext55 241E                                           __ptext47 2E06  
                                         __ptext39 2DCC                                           __ptext56 21E0  
                                         __ptext48 2E0A                                           __ptext57 0000  
                                         __ptext49 2E0E                    configure_voltage_reference@_adc 000D  
              convert_uint16_to_string@DataCounter 0141                                   _adc_result_1_txt 00D8  
                                 _adc_result_2_txt 00D2                                   _adc_result_3_txt 00CC  
                                 _adc_result_4_txt 00C6                   __end_of_convert_uint16_to_string 241E  
                                         isa$xinst 0000                                           int$flags 0073  
                                         _vfprintf 2A1C                                     _lcd_send_4bits 29B4  
            __end_of_ADC_StartConversion_Interrupt 2C08                      _ADC_StartConversion_Interrupt 2BCA  
                                 ?_MSSP_I2C_BC_ISR 0001                                         _INTCONbits 0FF2  
                     __end_of_gpio_pin_write_logic 1D2A                       ?_lcd_8bit_send_enable_signal 0017  
                                         intlevel2 0000                                          sprintf@ap 0053  
                      __end_of_ADC_StartConversion 2D02                     lcd_4bit_send_enable_signal@lcd 0017  
                   lcd_4bit_send_enable_signal@ret 0019                    __end_of_ADC_GetConversionResult 22A4  
                           __end_of_lcd_send_4bits 2A1C                                        ??_vfpfcnvrt 003B  
                      __end_of_lcd_4bit_set_cursor 262C               adc_input_channel_port_config@channel 000F  
                                         sprintf@f 0055                                           sprintf@s 004B  
                                   _port_registers 0126                                        _SSPCON1bits 0FC6  
                                      _SSPCON2bits 0FC5                    CCP_Set_Compare_Mode_Value@F3106 00BE  
                            _CCP2_InterruptHandler 00C0                                       _USART_RX_ISR 2E24  
                                     _USART_TX_ISR 2E02                       lcd_8bit_send_command@command 001C  
                      lcd_4bit_send_char_data@data 001D                              _TMR2_InterruptHandler 0098  
                                ?_InterruptManager 0001                         __end_of_lcd_8bit_intialize 1E52  
                       ??_lcd_4bit_send_string_pos 002C  
